Loading val vectors...
Loading test vectors...
Loading TF vectors...
Loading CNN vectors...

    Test Related Unrelated  Label Loss = 2859.5196962356567
    Test Related Unrelated  Domain Loss = 0.0
    Test Related Unrelated  Regularization Loss = 578.3888518810272
    Test Related Unrelated  Total Loss = 3437.908548116684
    Test Related Unrelated  Composite Score 10973.75
    Test Related Unrelated  Label Accuracy [0.9113816534541337, 0.0, 0.0, 0.9887732301487819]
    Test Related Unrelated  Label F1 [0.939305515027721, 0, 0, 0.9775849991917668]

models/oct_11/fnc_fever_cnn_tf_dann_3_no_2/fnc_fever_cnn_tf_dann_3_no_2
models/oct_11/fnc_fever_cnn_tf_dann_3_no_2/
ops stances_pl name: "stances_pl"
op: "Placeholder"
attr {
  key: "dtype"
  value {
    type: DT_INT64
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: -1
      }
    }
  }
}

ops keep_prob_pl name: "keep_prob_pl"
op: "Placeholder"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      unknown_rank: true
    }
  }
}

ops domains_pl name: "domains_pl"
op: "Placeholder"
attr {
  key: "dtype"
  value {
    type: DT_INT64
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: -1
      }
    }
  }
}

ops gr_pl name: "gr_pl"
op: "Placeholder"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
    }
  }
}

ops lr_pl name: "lr_pl"
op: "Placeholder"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
    }
  }
}

ops embedding_matrix_pl name: "embedding_matrix_pl"
op: "Placeholder"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 77558
      }
      dim {
        size: 300
      }
    }
  }
}

ops Const name: "Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 77558
        }
        dim {
          size: 300
        }
      }
      float_val: 0.0
    }
  }
}

ops Variable name: "Variable"
op: "VariableV2"
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 77558
      }
      dim {
        size: 300
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops Variable/Assign name: "Variable/Assign"
op: "Assign"
input: "Variable"
input: "Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops Variable/read name: "Variable/read"
op: "Identity"
input: "Variable"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable"
    }
  }
}

ops Assign name: "Assign"
op: "Assign"
input: "Variable"
input: "embedding_matrix_pl"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops headline_words_pl name: "headline_words_pl"
op: "Placeholder"
attr {
  key: "dtype"
  value {
    type: DT_INT64
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: -1
      }
      dim {
        size: 50
      }
    }
  }
}

ops body_words_pl name: "body_words_pl"
op: "Placeholder"
attr {
  key: "dtype"
  value {
    type: DT_INT64
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: -1
      }
      dim {
        size: 500
      }
    }
  }
}

ops Shape name: "Shape"
op: "Shape"
input: "headline_words_pl"
attr {
  key: "T"
  value {
    type: DT_INT64
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

ops strided_slice/stack name: "strided_slice/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}

ops strided_slice/stack_1 name: "strided_slice/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}

ops strided_slice/stack_2 name: "strided_slice/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}

ops strided_slice name: "strided_slice"
op: "StridedSlice"
input: "Shape"
input: "strided_slice/stack"
input: "strided_slice/stack_1"
input: "strided_slice/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}

ops embedding_lookup name: "embedding_lookup"
op: "Gather"
input: "Assign"
input: "headline_words_pl"
attr {
  key: "Tindices"
  value {
    type: DT_INT64
  }
}
attr {
  key: "Tparams"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable"
    }
  }
}
attr {
  key: "validate_indices"
  value {
    b: true
  }
}

ops embedding_lookup_1 name: "embedding_lookup_1"
op: "Gather"
input: "Assign"
input: "body_words_pl"
attr {
  key: "Tindices"
  value {
    type: DT_INT64
  }
}
attr {
  key: "Tparams"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable"
    }
  }
}
attr {
  key: "validate_indices"
  value {
    b: true
  }
}

ops Const_1 name: "Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 128
        }
      }
      float_val: 0.10000000149011612
    }
  }
}

ops Variable_1 name: "Variable_1"
op: "VariableV2"
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 128
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops Variable_1/Assign name: "Variable_1/Assign"
op: "Assign"
input: "Variable_1"
input: "Const_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_1"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops Variable_1/read name: "Variable_1/read"
op: "Identity"
input: "Variable_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_1"
    }
  }
}

ops conv1d/kernel/Initializer/random_uniform/shape name: "conv1d/kernel/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\002\000\000\000,\001\000\000\200\000\000\000"
    }
  }
}

ops conv1d/kernel/Initializer/random_uniform/min name: "conv1d/kernel/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.0837218388915062
    }
  }
}

ops conv1d/kernel/Initializer/random_uniform/max name: "conv1d/kernel/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0837218388915062
    }
  }
}

ops conv1d/kernel/Initializer/random_uniform/RandomUniform name: "conv1d/kernel/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "conv1d/kernel/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

ops conv1d/kernel/Initializer/random_uniform/sub name: "conv1d/kernel/Initializer/random_uniform/sub"
op: "Sub"
input: "conv1d/kernel/Initializer/random_uniform/max"
input: "conv1d/kernel/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d/kernel"
    }
  }
}

ops conv1d/kernel/Initializer/random_uniform/mul name: "conv1d/kernel/Initializer/random_uniform/mul"
op: "Mul"
input: "conv1d/kernel/Initializer/random_uniform/RandomUniform"
input: "conv1d/kernel/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d/kernel"
    }
  }
}

ops conv1d/kernel/Initializer/random_uniform name: "conv1d/kernel/Initializer/random_uniform"
op: "Add"
input: "conv1d/kernel/Initializer/random_uniform/mul"
input: "conv1d/kernel/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d/kernel"
    }
  }
}

ops conv1d/kernel name: "conv1d/kernel"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 2
      }
      dim {
        size: 300
      }
      dim {
        size: 128
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops conv1d/kernel/Assign name: "conv1d/kernel/Assign"
op: "Assign"
input: "conv1d/kernel"
input: "conv1d/kernel/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops conv1d/kernel/read name: "conv1d/kernel/read"
op: "Identity"
input: "conv1d/kernel"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d/kernel"
    }
  }
}

ops conv1d/bias/Initializer/zeros name: "conv1d/bias/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 128
        }
      }
      float_val: 0.0
    }
  }
}

ops conv1d/bias name: "conv1d/bias"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 128
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops conv1d/bias/Assign name: "conv1d/bias/Assign"
op: "Assign"
input: "conv1d/bias"
input: "conv1d/bias/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops conv1d/bias/read name: "conv1d/bias/read"
op: "Identity"
input: "conv1d/bias"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d/bias"
    }
  }
}

ops conv1d/dilation_rate name: "conv1d/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}

ops conv1d/conv1d_2/ExpandDims/dim name: "conv1d/conv1d_2/ExpandDims/dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

ops conv1d/conv1d_2/ExpandDims name: "conv1d/conv1d_2/ExpandDims"
op: "ExpandDims"
input: "embedding_lookup"
input: "conv1d/conv1d_2/ExpandDims/dim"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tdim"
  value {
    type: DT_INT32
  }
}

ops conv1d/conv1d_2/ExpandDims_1/dim name: "conv1d/conv1d_2/ExpandDims_1/dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}

ops conv1d/conv1d_2/ExpandDims_1 name: "conv1d/conv1d_2/ExpandDims_1"
op: "ExpandDims"
input: "conv1d/kernel/read"
input: "conv1d/conv1d_2/ExpandDims_1/dim"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tdim"
  value {
    type: DT_INT32
  }
}

ops conv1d/conv1d_2/Conv2D name: "conv1d/conv1d_2/Conv2D"
op: "Conv2D"
input: "conv1d/conv1d_2/ExpandDims"
input: "conv1d/conv1d_2/ExpandDims_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "VALID"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

ops conv1d/conv1d_2/Squeeze name: "conv1d/conv1d_2/Squeeze"
op: "Squeeze"
input: "conv1d/conv1d_2/Conv2D"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "squeeze_dims"
  value {
    list {
      i: 1
    }
  }
}

ops conv1d/BiasAdd name: "conv1d/BiasAdd"
op: "BiasAdd"
input: "conv1d/conv1d_2/Squeeze"
input: "conv1d/bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

ops BiasAdd name: "BiasAdd"
op: "BiasAdd"
input: "conv1d/BiasAdd"
input: "Variable_1/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

ops Relu name: "Relu"
op: "Relu"
input: "BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops max_pooling1d/ExpandDims/dim name: "max_pooling1d/ExpandDims/dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}

ops max_pooling1d/ExpandDims name: "max_pooling1d/ExpandDims"
op: "ExpandDims"
input: "Relu"
input: "max_pooling1d/ExpandDims/dim"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tdim"
  value {
    type: DT_INT32
  }
}

ops max_pooling1d/MaxPool name: "max_pooling1d/MaxPool"
op: "MaxPool"
input: "max_pooling1d/ExpandDims"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "ksize"
  value {
    list {
      i: 1
      i: 49
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "VALID"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}

ops max_pooling1d/Squeeze name: "max_pooling1d/Squeeze"
op: "Squeeze"
input: "max_pooling1d/MaxPool"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "squeeze_dims"
  value {
    list {
      i: 2
    }
  }
}

ops Const_2 name: "Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 128
        }
      }
      float_val: 0.10000000149011612
    }
  }
}

ops Variable_2 name: "Variable_2"
op: "VariableV2"
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 128
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops Variable_2/Assign name: "Variable_2/Assign"
op: "Assign"
input: "Variable_2"
input: "Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_2"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops Variable_2/read name: "Variable_2/read"
op: "Identity"
input: "Variable_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_2"
    }
  }
}

ops conv1d_1/kernel/Initializer/random_uniform/shape name: "conv1d_1/kernel/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_1/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\003\000\000\000,\001\000\000\200\000\000\000"
    }
  }
}

ops conv1d_1/kernel/Initializer/random_uniform/min name: "conv1d_1/kernel/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_1/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.06835859268903732
    }
  }
}

ops conv1d_1/kernel/Initializer/random_uniform/max name: "conv1d_1/kernel/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_1/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.06835859268903732
    }
  }
}

ops conv1d_1/kernel/Initializer/random_uniform/RandomUniform name: "conv1d_1/kernel/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "conv1d_1/kernel/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_1/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

ops conv1d_1/kernel/Initializer/random_uniform/sub name: "conv1d_1/kernel/Initializer/random_uniform/sub"
op: "Sub"
input: "conv1d_1/kernel/Initializer/random_uniform/max"
input: "conv1d_1/kernel/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_1/kernel"
    }
  }
}

ops conv1d_1/kernel/Initializer/random_uniform/mul name: "conv1d_1/kernel/Initializer/random_uniform/mul"
op: "Mul"
input: "conv1d_1/kernel/Initializer/random_uniform/RandomUniform"
input: "conv1d_1/kernel/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_1/kernel"
    }
  }
}

ops conv1d_1/kernel/Initializer/random_uniform name: "conv1d_1/kernel/Initializer/random_uniform"
op: "Add"
input: "conv1d_1/kernel/Initializer/random_uniform/mul"
input: "conv1d_1/kernel/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_1/kernel"
    }
  }
}

ops conv1d_1/kernel name: "conv1d_1/kernel"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_1/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 300
      }
      dim {
        size: 128
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops conv1d_1/kernel/Assign name: "conv1d_1/kernel/Assign"
op: "Assign"
input: "conv1d_1/kernel"
input: "conv1d_1/kernel/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_1/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops conv1d_1/kernel/read name: "conv1d_1/kernel/read"
op: "Identity"
input: "conv1d_1/kernel"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_1/kernel"
    }
  }
}

ops conv1d_1/bias/Initializer/zeros name: "conv1d_1/bias/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_1/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 128
        }
      }
      float_val: 0.0
    }
  }
}

ops conv1d_1/bias name: "conv1d_1/bias"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_1/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 128
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops conv1d_1/bias/Assign name: "conv1d_1/bias/Assign"
op: "Assign"
input: "conv1d_1/bias"
input: "conv1d_1/bias/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_1/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops conv1d_1/bias/read name: "conv1d_1/bias/read"
op: "Identity"
input: "conv1d_1/bias"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_1/bias"
    }
  }
}

ops conv1d_2/dilation_rate name: "conv1d_2/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}

ops conv1d_2/conv1d/ExpandDims/dim name: "conv1d_2/conv1d/ExpandDims/dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

ops conv1d_2/conv1d/ExpandDims name: "conv1d_2/conv1d/ExpandDims"
op: "ExpandDims"
input: "embedding_lookup"
input: "conv1d_2/conv1d/ExpandDims/dim"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tdim"
  value {
    type: DT_INT32
  }
}

ops conv1d_2/conv1d/ExpandDims_1/dim name: "conv1d_2/conv1d/ExpandDims_1/dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}

ops conv1d_2/conv1d/ExpandDims_1 name: "conv1d_2/conv1d/ExpandDims_1"
op: "ExpandDims"
input: "conv1d_1/kernel/read"
input: "conv1d_2/conv1d/ExpandDims_1/dim"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tdim"
  value {
    type: DT_INT32
  }
}

ops conv1d_2/conv1d/Conv2D name: "conv1d_2/conv1d/Conv2D"
op: "Conv2D"
input: "conv1d_2/conv1d/ExpandDims"
input: "conv1d_2/conv1d/ExpandDims_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "VALID"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

ops conv1d_2/conv1d/Squeeze name: "conv1d_2/conv1d/Squeeze"
op: "Squeeze"
input: "conv1d_2/conv1d/Conv2D"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "squeeze_dims"
  value {
    list {
      i: 1
    }
  }
}

ops conv1d_2/BiasAdd name: "conv1d_2/BiasAdd"
op: "BiasAdd"
input: "conv1d_2/conv1d/Squeeze"
input: "conv1d_1/bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

ops BiasAdd_1 name: "BiasAdd_1"
op: "BiasAdd"
input: "conv1d_2/BiasAdd"
input: "Variable_2/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

ops Relu_1 name: "Relu_1"
op: "Relu"
input: "BiasAdd_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops max_pooling1d_2/ExpandDims/dim name: "max_pooling1d_2/ExpandDims/dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}

ops max_pooling1d_2/ExpandDims name: "max_pooling1d_2/ExpandDims"
op: "ExpandDims"
input: "Relu_1"
input: "max_pooling1d_2/ExpandDims/dim"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tdim"
  value {
    type: DT_INT32
  }
}

ops max_pooling1d_2/MaxPool name: "max_pooling1d_2/MaxPool"
op: "MaxPool"
input: "max_pooling1d_2/ExpandDims"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "ksize"
  value {
    list {
      i: 1
      i: 48
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "VALID"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}

ops max_pooling1d_2/Squeeze name: "max_pooling1d_2/Squeeze"
op: "Squeeze"
input: "max_pooling1d_2/MaxPool"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "squeeze_dims"
  value {
    list {
      i: 2
    }
  }
}

ops Const_3 name: "Const_3"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 128
        }
      }
      float_val: 0.10000000149011612
    }
  }
}

ops Variable_3 name: "Variable_3"
op: "VariableV2"
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 128
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops Variable_3/Assign name: "Variable_3/Assign"
op: "Assign"
input: "Variable_3"
input: "Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_3"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops Variable_3/read name: "Variable_3/read"
op: "Identity"
input: "Variable_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_3"
    }
  }
}

ops conv1d_2/kernel/Initializer/random_uniform/shape name: "conv1d_2/kernel/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_2/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\004\000\000\000,\001\000\000\200\000\000\000"
    }
  }
}

ops conv1d_2/kernel/Initializer/random_uniform/min name: "conv1d_2/kernel/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_2/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.05920027941465378
    }
  }
}

ops conv1d_2/kernel/Initializer/random_uniform/max name: "conv1d_2/kernel/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_2/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.05920027941465378
    }
  }
}

ops conv1d_2/kernel/Initializer/random_uniform/RandomUniform name: "conv1d_2/kernel/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "conv1d_2/kernel/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_2/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

ops conv1d_2/kernel/Initializer/random_uniform/sub name: "conv1d_2/kernel/Initializer/random_uniform/sub"
op: "Sub"
input: "conv1d_2/kernel/Initializer/random_uniform/max"
input: "conv1d_2/kernel/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_2/kernel"
    }
  }
}

ops conv1d_2/kernel/Initializer/random_uniform/mul name: "conv1d_2/kernel/Initializer/random_uniform/mul"
op: "Mul"
input: "conv1d_2/kernel/Initializer/random_uniform/RandomUniform"
input: "conv1d_2/kernel/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_2/kernel"
    }
  }
}

ops conv1d_2/kernel/Initializer/random_uniform name: "conv1d_2/kernel/Initializer/random_uniform"
op: "Add"
input: "conv1d_2/kernel/Initializer/random_uniform/mul"
input: "conv1d_2/kernel/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_2/kernel"
    }
  }
}

ops conv1d_2/kernel name: "conv1d_2/kernel"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_2/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 4
      }
      dim {
        size: 300
      }
      dim {
        size: 128
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops conv1d_2/kernel/Assign name: "conv1d_2/kernel/Assign"
op: "Assign"
input: "conv1d_2/kernel"
input: "conv1d_2/kernel/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_2/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops conv1d_2/kernel/read name: "conv1d_2/kernel/read"
op: "Identity"
input: "conv1d_2/kernel"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_2/kernel"
    }
  }
}

ops conv1d_2/bias/Initializer/zeros name: "conv1d_2/bias/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_2/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 128
        }
      }
      float_val: 0.0
    }
  }
}

ops conv1d_2/bias name: "conv1d_2/bias"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_2/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 128
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops conv1d_2/bias/Assign name: "conv1d_2/bias/Assign"
op: "Assign"
input: "conv1d_2/bias"
input: "conv1d_2/bias/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_2/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops conv1d_2/bias/read name: "conv1d_2/bias/read"
op: "Identity"
input: "conv1d_2/bias"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_2/bias"
    }
  }
}

ops conv1d_3/dilation_rate name: "conv1d_3/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}

ops conv1d_3/conv1d/ExpandDims/dim name: "conv1d_3/conv1d/ExpandDims/dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

ops conv1d_3/conv1d/ExpandDims name: "conv1d_3/conv1d/ExpandDims"
op: "ExpandDims"
input: "embedding_lookup"
input: "conv1d_3/conv1d/ExpandDims/dim"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tdim"
  value {
    type: DT_INT32
  }
}

ops conv1d_3/conv1d/ExpandDims_1/dim name: "conv1d_3/conv1d/ExpandDims_1/dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}

ops conv1d_3/conv1d/ExpandDims_1 name: "conv1d_3/conv1d/ExpandDims_1"
op: "ExpandDims"
input: "conv1d_2/kernel/read"
input: "conv1d_3/conv1d/ExpandDims_1/dim"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tdim"
  value {
    type: DT_INT32
  }
}

ops conv1d_3/conv1d/Conv2D name: "conv1d_3/conv1d/Conv2D"
op: "Conv2D"
input: "conv1d_3/conv1d/ExpandDims"
input: "conv1d_3/conv1d/ExpandDims_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "VALID"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

ops conv1d_3/conv1d/Squeeze name: "conv1d_3/conv1d/Squeeze"
op: "Squeeze"
input: "conv1d_3/conv1d/Conv2D"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "squeeze_dims"
  value {
    list {
      i: 1
    }
  }
}

ops conv1d_3/BiasAdd name: "conv1d_3/BiasAdd"
op: "BiasAdd"
input: "conv1d_3/conv1d/Squeeze"
input: "conv1d_2/bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

ops BiasAdd_2 name: "BiasAdd_2"
op: "BiasAdd"
input: "conv1d_3/BiasAdd"
input: "Variable_3/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

ops Relu_2 name: "Relu_2"
op: "Relu"
input: "BiasAdd_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops max_pooling1d_3/ExpandDims/dim name: "max_pooling1d_3/ExpandDims/dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}

ops max_pooling1d_3/ExpandDims name: "max_pooling1d_3/ExpandDims"
op: "ExpandDims"
input: "Relu_2"
input: "max_pooling1d_3/ExpandDims/dim"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tdim"
  value {
    type: DT_INT32
  }
}

ops max_pooling1d_3/MaxPool name: "max_pooling1d_3/MaxPool"
op: "MaxPool"
input: "max_pooling1d_3/ExpandDims"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "ksize"
  value {
    list {
      i: 1
      i: 47
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "VALID"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}

ops max_pooling1d_3/Squeeze name: "max_pooling1d_3/Squeeze"
op: "Squeeze"
input: "max_pooling1d_3/MaxPool"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "squeeze_dims"
  value {
    list {
      i: 2
    }
  }
}

ops Const_4 name: "Const_4"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 128
        }
      }
      float_val: 0.10000000149011612
    }
  }
}

ops Variable_4 name: "Variable_4"
op: "VariableV2"
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 128
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops Variable_4/Assign name: "Variable_4/Assign"
op: "Assign"
input: "Variable_4"
input: "Const_4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_4"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops Variable_4/read name: "Variable_4/read"
op: "Identity"
input: "Variable_4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_4"
    }
  }
}

ops conv1d_3/kernel/Initializer/random_uniform/shape name: "conv1d_3/kernel/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_3/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\002\000\000\000,\001\000\000\200\000\000\000"
    }
  }
}

ops conv1d_3/kernel/Initializer/random_uniform/min name: "conv1d_3/kernel/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_3/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.0837218388915062
    }
  }
}

ops conv1d_3/kernel/Initializer/random_uniform/max name: "conv1d_3/kernel/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_3/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0837218388915062
    }
  }
}

ops conv1d_3/kernel/Initializer/random_uniform/RandomUniform name: "conv1d_3/kernel/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "conv1d_3/kernel/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_3/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

ops conv1d_3/kernel/Initializer/random_uniform/sub name: "conv1d_3/kernel/Initializer/random_uniform/sub"
op: "Sub"
input: "conv1d_3/kernel/Initializer/random_uniform/max"
input: "conv1d_3/kernel/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_3/kernel"
    }
  }
}

ops conv1d_3/kernel/Initializer/random_uniform/mul name: "conv1d_3/kernel/Initializer/random_uniform/mul"
op: "Mul"
input: "conv1d_3/kernel/Initializer/random_uniform/RandomUniform"
input: "conv1d_3/kernel/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_3/kernel"
    }
  }
}

ops conv1d_3/kernel/Initializer/random_uniform name: "conv1d_3/kernel/Initializer/random_uniform"
op: "Add"
input: "conv1d_3/kernel/Initializer/random_uniform/mul"
input: "conv1d_3/kernel/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_3/kernel"
    }
  }
}

ops conv1d_3/kernel name: "conv1d_3/kernel"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_3/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 2
      }
      dim {
        size: 300
      }
      dim {
        size: 128
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops conv1d_3/kernel/Assign name: "conv1d_3/kernel/Assign"
op: "Assign"
input: "conv1d_3/kernel"
input: "conv1d_3/kernel/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_3/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops conv1d_3/kernel/read name: "conv1d_3/kernel/read"
op: "Identity"
input: "conv1d_3/kernel"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_3/kernel"
    }
  }
}

ops conv1d_3/bias/Initializer/zeros name: "conv1d_3/bias/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_3/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 128
        }
      }
      float_val: 0.0
    }
  }
}

ops conv1d_3/bias name: "conv1d_3/bias"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_3/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 128
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops conv1d_3/bias/Assign name: "conv1d_3/bias/Assign"
op: "Assign"
input: "conv1d_3/bias"
input: "conv1d_3/bias/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_3/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops conv1d_3/bias/read name: "conv1d_3/bias/read"
op: "Identity"
input: "conv1d_3/bias"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_3/bias"
    }
  }
}

ops conv1d_4/dilation_rate name: "conv1d_4/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}

ops conv1d_4/conv1d/ExpandDims/dim name: "conv1d_4/conv1d/ExpandDims/dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

ops conv1d_4/conv1d/ExpandDims name: "conv1d_4/conv1d/ExpandDims"
op: "ExpandDims"
input: "embedding_lookup_1"
input: "conv1d_4/conv1d/ExpandDims/dim"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tdim"
  value {
    type: DT_INT32
  }
}

ops conv1d_4/conv1d/ExpandDims_1/dim name: "conv1d_4/conv1d/ExpandDims_1/dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}

ops conv1d_4/conv1d/ExpandDims_1 name: "conv1d_4/conv1d/ExpandDims_1"
op: "ExpandDims"
input: "conv1d_3/kernel/read"
input: "conv1d_4/conv1d/ExpandDims_1/dim"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tdim"
  value {
    type: DT_INT32
  }
}

ops conv1d_4/conv1d/Conv2D name: "conv1d_4/conv1d/Conv2D"
op: "Conv2D"
input: "conv1d_4/conv1d/ExpandDims"
input: "conv1d_4/conv1d/ExpandDims_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "VALID"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

ops conv1d_4/conv1d/Squeeze name: "conv1d_4/conv1d/Squeeze"
op: "Squeeze"
input: "conv1d_4/conv1d/Conv2D"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "squeeze_dims"
  value {
    list {
      i: 1
    }
  }
}

ops conv1d_4/BiasAdd name: "conv1d_4/BiasAdd"
op: "BiasAdd"
input: "conv1d_4/conv1d/Squeeze"
input: "conv1d_3/bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

ops BiasAdd_3 name: "BiasAdd_3"
op: "BiasAdd"
input: "conv1d_4/BiasAdd"
input: "Variable_3/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

ops Relu_3 name: "Relu_3"
op: "Relu"
input: "BiasAdd_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops max_pooling1d_4/ExpandDims/dim name: "max_pooling1d_4/ExpandDims/dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}

ops max_pooling1d_4/ExpandDims name: "max_pooling1d_4/ExpandDims"
op: "ExpandDims"
input: "Relu_3"
input: "max_pooling1d_4/ExpandDims/dim"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tdim"
  value {
    type: DT_INT32
  }
}

ops max_pooling1d_4/MaxPool name: "max_pooling1d_4/MaxPool"
op: "MaxPool"
input: "max_pooling1d_4/ExpandDims"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "ksize"
  value {
    list {
      i: 1
      i: 499
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "VALID"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}

ops max_pooling1d_4/Squeeze name: "max_pooling1d_4/Squeeze"
op: "Squeeze"
input: "max_pooling1d_4/MaxPool"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "squeeze_dims"
  value {
    list {
      i: 2
    }
  }
}

ops Const_5 name: "Const_5"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 128
        }
      }
      float_val: 0.10000000149011612
    }
  }
}

ops Variable_5 name: "Variable_5"
op: "VariableV2"
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 128
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops Variable_5/Assign name: "Variable_5/Assign"
op: "Assign"
input: "Variable_5"
input: "Const_5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_5"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops Variable_5/read name: "Variable_5/read"
op: "Identity"
input: "Variable_5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_5"
    }
  }
}

ops conv1d_4/kernel/Initializer/random_uniform/shape name: "conv1d_4/kernel/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_4/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\003\000\000\000,\001\000\000\200\000\000\000"
    }
  }
}

ops conv1d_4/kernel/Initializer/random_uniform/min name: "conv1d_4/kernel/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_4/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.06835859268903732
    }
  }
}

ops conv1d_4/kernel/Initializer/random_uniform/max name: "conv1d_4/kernel/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_4/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.06835859268903732
    }
  }
}

ops conv1d_4/kernel/Initializer/random_uniform/RandomUniform name: "conv1d_4/kernel/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "conv1d_4/kernel/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_4/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

ops conv1d_4/kernel/Initializer/random_uniform/sub name: "conv1d_4/kernel/Initializer/random_uniform/sub"
op: "Sub"
input: "conv1d_4/kernel/Initializer/random_uniform/max"
input: "conv1d_4/kernel/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_4/kernel"
    }
  }
}

ops conv1d_4/kernel/Initializer/random_uniform/mul name: "conv1d_4/kernel/Initializer/random_uniform/mul"
op: "Mul"
input: "conv1d_4/kernel/Initializer/random_uniform/RandomUniform"
input: "conv1d_4/kernel/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_4/kernel"
    }
  }
}

ops conv1d_4/kernel/Initializer/random_uniform name: "conv1d_4/kernel/Initializer/random_uniform"
op: "Add"
input: "conv1d_4/kernel/Initializer/random_uniform/mul"
input: "conv1d_4/kernel/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_4/kernel"
    }
  }
}

ops conv1d_4/kernel name: "conv1d_4/kernel"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_4/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 300
      }
      dim {
        size: 128
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops conv1d_4/kernel/Assign name: "conv1d_4/kernel/Assign"
op: "Assign"
input: "conv1d_4/kernel"
input: "conv1d_4/kernel/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_4/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops conv1d_4/kernel/read name: "conv1d_4/kernel/read"
op: "Identity"
input: "conv1d_4/kernel"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_4/kernel"
    }
  }
}

ops conv1d_4/bias/Initializer/zeros name: "conv1d_4/bias/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_4/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 128
        }
      }
      float_val: 0.0
    }
  }
}

ops conv1d_4/bias name: "conv1d_4/bias"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_4/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 128
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops conv1d_4/bias/Assign name: "conv1d_4/bias/Assign"
op: "Assign"
input: "conv1d_4/bias"
input: "conv1d_4/bias/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_4/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops conv1d_4/bias/read name: "conv1d_4/bias/read"
op: "Identity"
input: "conv1d_4/bias"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_4/bias"
    }
  }
}

ops conv1d_5/dilation_rate name: "conv1d_5/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}

ops conv1d_5/conv1d/ExpandDims/dim name: "conv1d_5/conv1d/ExpandDims/dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

ops conv1d_5/conv1d/ExpandDims name: "conv1d_5/conv1d/ExpandDims"
op: "ExpandDims"
input: "embedding_lookup_1"
input: "conv1d_5/conv1d/ExpandDims/dim"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tdim"
  value {
    type: DT_INT32
  }
}

ops conv1d_5/conv1d/ExpandDims_1/dim name: "conv1d_5/conv1d/ExpandDims_1/dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}

ops conv1d_5/conv1d/ExpandDims_1 name: "conv1d_5/conv1d/ExpandDims_1"
op: "ExpandDims"
input: "conv1d_4/kernel/read"
input: "conv1d_5/conv1d/ExpandDims_1/dim"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tdim"
  value {
    type: DT_INT32
  }
}

ops conv1d_5/conv1d/Conv2D name: "conv1d_5/conv1d/Conv2D"
op: "Conv2D"
input: "conv1d_5/conv1d/ExpandDims"
input: "conv1d_5/conv1d/ExpandDims_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "VALID"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

ops conv1d_5/conv1d/Squeeze name: "conv1d_5/conv1d/Squeeze"
op: "Squeeze"
input: "conv1d_5/conv1d/Conv2D"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "squeeze_dims"
  value {
    list {
      i: 1
    }
  }
}

ops conv1d_5/BiasAdd name: "conv1d_5/BiasAdd"
op: "BiasAdd"
input: "conv1d_5/conv1d/Squeeze"
input: "conv1d_4/bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

ops BiasAdd_4 name: "BiasAdd_4"
op: "BiasAdd"
input: "conv1d_5/BiasAdd"
input: "Variable_3/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

ops Relu_4 name: "Relu_4"
op: "Relu"
input: "BiasAdd_4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops max_pooling1d_5/ExpandDims/dim name: "max_pooling1d_5/ExpandDims/dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}

ops max_pooling1d_5/ExpandDims name: "max_pooling1d_5/ExpandDims"
op: "ExpandDims"
input: "Relu_4"
input: "max_pooling1d_5/ExpandDims/dim"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tdim"
  value {
    type: DT_INT32
  }
}

ops max_pooling1d_5/MaxPool name: "max_pooling1d_5/MaxPool"
op: "MaxPool"
input: "max_pooling1d_5/ExpandDims"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "ksize"
  value {
    list {
      i: 1
      i: 498
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "VALID"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}

ops max_pooling1d_5/Squeeze name: "max_pooling1d_5/Squeeze"
op: "Squeeze"
input: "max_pooling1d_5/MaxPool"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "squeeze_dims"
  value {
    list {
      i: 2
    }
  }
}

ops Const_6 name: "Const_6"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 128
        }
      }
      float_val: 0.10000000149011612
    }
  }
}

ops Variable_6 name: "Variable_6"
op: "VariableV2"
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 128
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops Variable_6/Assign name: "Variable_6/Assign"
op: "Assign"
input: "Variable_6"
input: "Const_6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_6"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops Variable_6/read name: "Variable_6/read"
op: "Identity"
input: "Variable_6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_6"
    }
  }
}

ops conv1d_5/kernel/Initializer/random_uniform/shape name: "conv1d_5/kernel/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_5/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\004\000\000\000,\001\000\000\200\000\000\000"
    }
  }
}

ops conv1d_5/kernel/Initializer/random_uniform/min name: "conv1d_5/kernel/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_5/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.05920027941465378
    }
  }
}

ops conv1d_5/kernel/Initializer/random_uniform/max name: "conv1d_5/kernel/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_5/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.05920027941465378
    }
  }
}

ops conv1d_5/kernel/Initializer/random_uniform/RandomUniform name: "conv1d_5/kernel/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "conv1d_5/kernel/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_5/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

ops conv1d_5/kernel/Initializer/random_uniform/sub name: "conv1d_5/kernel/Initializer/random_uniform/sub"
op: "Sub"
input: "conv1d_5/kernel/Initializer/random_uniform/max"
input: "conv1d_5/kernel/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_5/kernel"
    }
  }
}

ops conv1d_5/kernel/Initializer/random_uniform/mul name: "conv1d_5/kernel/Initializer/random_uniform/mul"
op: "Mul"
input: "conv1d_5/kernel/Initializer/random_uniform/RandomUniform"
input: "conv1d_5/kernel/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_5/kernel"
    }
  }
}

ops conv1d_5/kernel/Initializer/random_uniform name: "conv1d_5/kernel/Initializer/random_uniform"
op: "Add"
input: "conv1d_5/kernel/Initializer/random_uniform/mul"
input: "conv1d_5/kernel/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_5/kernel"
    }
  }
}

ops conv1d_5/kernel name: "conv1d_5/kernel"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_5/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 4
      }
      dim {
        size: 300
      }
      dim {
        size: 128
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops conv1d_5/kernel/Assign name: "conv1d_5/kernel/Assign"
op: "Assign"
input: "conv1d_5/kernel"
input: "conv1d_5/kernel/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_5/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops conv1d_5/kernel/read name: "conv1d_5/kernel/read"
op: "Identity"
input: "conv1d_5/kernel"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_5/kernel"
    }
  }
}

ops conv1d_5/bias/Initializer/zeros name: "conv1d_5/bias/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_5/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 128
        }
      }
      float_val: 0.0
    }
  }
}

ops conv1d_5/bias name: "conv1d_5/bias"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_5/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 128
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops conv1d_5/bias/Assign name: "conv1d_5/bias/Assign"
op: "Assign"
input: "conv1d_5/bias"
input: "conv1d_5/bias/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_5/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops conv1d_5/bias/read name: "conv1d_5/bias/read"
op: "Identity"
input: "conv1d_5/bias"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_5/bias"
    }
  }
}

ops conv1d_6/dilation_rate name: "conv1d_6/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}

ops conv1d_6/conv1d/ExpandDims/dim name: "conv1d_6/conv1d/ExpandDims/dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

ops conv1d_6/conv1d/ExpandDims name: "conv1d_6/conv1d/ExpandDims"
op: "ExpandDims"
input: "embedding_lookup_1"
input: "conv1d_6/conv1d/ExpandDims/dim"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tdim"
  value {
    type: DT_INT32
  }
}

ops conv1d_6/conv1d/ExpandDims_1/dim name: "conv1d_6/conv1d/ExpandDims_1/dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}

ops conv1d_6/conv1d/ExpandDims_1 name: "conv1d_6/conv1d/ExpandDims_1"
op: "ExpandDims"
input: "conv1d_5/kernel/read"
input: "conv1d_6/conv1d/ExpandDims_1/dim"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tdim"
  value {
    type: DT_INT32
  }
}

ops conv1d_6/conv1d/Conv2D name: "conv1d_6/conv1d/Conv2D"
op: "Conv2D"
input: "conv1d_6/conv1d/ExpandDims"
input: "conv1d_6/conv1d/ExpandDims_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "VALID"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

ops conv1d_6/conv1d/Squeeze name: "conv1d_6/conv1d/Squeeze"
op: "Squeeze"
input: "conv1d_6/conv1d/Conv2D"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "squeeze_dims"
  value {
    list {
      i: 1
    }
  }
}

ops conv1d_6/BiasAdd name: "conv1d_6/BiasAdd"
op: "BiasAdd"
input: "conv1d_6/conv1d/Squeeze"
input: "conv1d_5/bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

ops BiasAdd_5 name: "BiasAdd_5"
op: "BiasAdd"
input: "conv1d_6/BiasAdd"
input: "Variable_3/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

ops Relu_5 name: "Relu_5"
op: "Relu"
input: "BiasAdd_5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops max_pooling1d_6/ExpandDims/dim name: "max_pooling1d_6/ExpandDims/dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}

ops max_pooling1d_6/ExpandDims name: "max_pooling1d_6/ExpandDims"
op: "ExpandDims"
input: "Relu_5"
input: "max_pooling1d_6/ExpandDims/dim"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tdim"
  value {
    type: DT_INT32
  }
}

ops max_pooling1d_6/MaxPool name: "max_pooling1d_6/MaxPool"
op: "MaxPool"
input: "max_pooling1d_6/ExpandDims"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "ksize"
  value {
    list {
      i: 1
      i: 497
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "VALID"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}

ops max_pooling1d_6/Squeeze name: "max_pooling1d_6/Squeeze"
op: "Squeeze"
input: "max_pooling1d_6/MaxPool"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "squeeze_dims"
  value {
    list {
      i: 2
    }
  }
}

ops concat/axis name: "concat/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}

ops concat name: "concat"
op: "ConcatV2"
input: "max_pooling1d/Squeeze"
input: "max_pooling1d_2/Squeeze"
input: "max_pooling1d_3/Squeeze"
input: "max_pooling1d_4/Squeeze"
input: "max_pooling1d_5/Squeeze"
input: "max_pooling1d_6/Squeeze"
input: "concat/axis"
attr {
  key: "N"
  value {
    i: 6
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}

ops Reshape/shape name: "Reshape/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\377\377\377\377\000\003\000\000"
    }
  }
}

ops Reshape name: "Reshape"
op: "Reshape"
input: "concat"
input: "Reshape/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

ops dropout/Shape name: "dropout/Shape"
op: "Shape"
input: "Reshape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

ops dropout/random_uniform/min name: "dropout/random_uniform/min"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

ops dropout/random_uniform/max name: "dropout/random_uniform/max"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

ops dropout/random_uniform/RandomUniform name: "dropout/random_uniform/RandomUniform"
op: "RandomUniform"
input: "dropout/Shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

ops dropout/random_uniform/sub name: "dropout/random_uniform/sub"
op: "Sub"
input: "dropout/random_uniform/max"
input: "dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops dropout/random_uniform/mul name: "dropout/random_uniform/mul"
op: "Mul"
input: "dropout/random_uniform/RandomUniform"
input: "dropout/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops dropout/random_uniform name: "dropout/random_uniform"
op: "Add"
input: "dropout/random_uniform/mul"
input: "dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops dropout/add name: "dropout/add"
op: "Add"
input: "keep_prob_pl"
input: "dropout/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops dropout/Floor name: "dropout/Floor"
op: "Floor"
input: "dropout/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops dropout/div name: "dropout/div"
op: "RealDiv"
input: "Reshape"
input: "keep_prob_pl"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops dropout/mul name: "dropout/mul"
op: "Mul"
input: "dropout/div"
input: "dropout/Floor"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops dense/kernel/Initializer/random_uniform/shape name: "dense/kernel/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\000\003\000\000d\000\000\000"
    }
  }
}

ops dense/kernel/Initializer/random_uniform/min name: "dense/kernel/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.08314109593629837
    }
  }
}

ops dense/kernel/Initializer/random_uniform/max name: "dense/kernel/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.08314109593629837
    }
  }
}

ops dense/kernel/Initializer/random_uniform/RandomUniform name: "dense/kernel/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "dense/kernel/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

ops dense/kernel/Initializer/random_uniform/sub name: "dense/kernel/Initializer/random_uniform/sub"
op: "Sub"
input: "dense/kernel/Initializer/random_uniform/max"
input: "dense/kernel/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/kernel"
    }
  }
}

ops dense/kernel/Initializer/random_uniform/mul name: "dense/kernel/Initializer/random_uniform/mul"
op: "Mul"
input: "dense/kernel/Initializer/random_uniform/RandomUniform"
input: "dense/kernel/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/kernel"
    }
  }
}

ops dense/kernel/Initializer/random_uniform name: "dense/kernel/Initializer/random_uniform"
op: "Add"
input: "dense/kernel/Initializer/random_uniform/mul"
input: "dense/kernel/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/kernel"
    }
  }
}

ops dense/kernel name: "dense/kernel"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 768
      }
      dim {
        size: 100
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops dense/kernel/Assign name: "dense/kernel/Assign"
op: "Assign"
input: "dense/kernel"
input: "dense/kernel/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops dense/kernel/read name: "dense/kernel/read"
op: "Identity"
input: "dense/kernel"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/kernel"
    }
  }
}

ops dense/bias/Initializer/zeros name: "dense/bias/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 100
        }
      }
      float_val: 0.0
    }
  }
}

ops dense/bias name: "dense/bias"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops dense/bias/Assign name: "dense/bias/Assign"
op: "Assign"
input: "dense/bias"
input: "dense/bias/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops dense/bias/read name: "dense/bias/read"
op: "Identity"
input: "dense/bias"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/bias"
    }
  }
}

ops dense/MatMul name: "dense/MatMul"
op: "MatMul"
input: "dropout/mul"
input: "dense/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

ops dense/BiasAdd name: "dense/BiasAdd"
op: "BiasAdd"
input: "dense/MatMul"
input: "dense/bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

ops p_features_pl name: "p_features_pl"
op: "Placeholder"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: -1
      }
      dim {
        size: 10001
      }
    }
  }
}

ops Identity name: "Identity"
op: "Identity"
input: "dense/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops concat_1/axis name: "concat_1/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

ops concat_1 name: "concat_1"
op: "ConcatV2"
input: "p_features_pl"
input: "Identity"
input: "concat_1/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}

ops fully_connected/weights/Initializer/random_uniform/shape name: "fully_connected/weights/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "u\'\000\000\004\000\000\000"
    }
  }
}

ops fully_connected/weights/Initializer/random_uniform/min name: "fully_connected/weights/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.024367302656173706
    }
  }
}

ops fully_connected/weights/Initializer/random_uniform/max name: "fully_connected/weights/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.024367302656173706
    }
  }
}

ops fully_connected/weights/Initializer/random_uniform/RandomUniform name: "fully_connected/weights/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "fully_connected/weights/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

ops fully_connected/weights/Initializer/random_uniform/sub name: "fully_connected/weights/Initializer/random_uniform/sub"
op: "Sub"
input: "fully_connected/weights/Initializer/random_uniform/max"
input: "fully_connected/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected/weights"
    }
  }
}

ops fully_connected/weights/Initializer/random_uniform/mul name: "fully_connected/weights/Initializer/random_uniform/mul"
op: "Mul"
input: "fully_connected/weights/Initializer/random_uniform/RandomUniform"
input: "fully_connected/weights/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected/weights"
    }
  }
}

ops fully_connected/weights/Initializer/random_uniform name: "fully_connected/weights/Initializer/random_uniform"
op: "Add"
input: "fully_connected/weights/Initializer/random_uniform/mul"
input: "fully_connected/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected/weights"
    }
  }
}

ops fully_connected/weights name: "fully_connected/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 10101
      }
      dim {
        size: 4
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops fully_connected/weights/Assign name: "fully_connected/weights/Assign"
op: "Assign"
input: "fully_connected/weights"
input: "fully_connected/weights/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops fully_connected/weights/read name: "fully_connected/weights/read"
op: "Identity"
input: "fully_connected/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected/weights"
    }
  }
}

ops fully_connected/biases/Initializer/zeros name: "fully_connected/biases/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 4
        }
      }
      float_val: 0.0
    }
  }
}

ops fully_connected/biases name: "fully_connected/biases"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 4
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops fully_connected/biases/Assign name: "fully_connected/biases/Assign"
op: "Assign"
input: "fully_connected/biases"
input: "fully_connected/biases/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops fully_connected/biases/read name: "fully_connected/biases/read"
op: "Identity"
input: "fully_connected/biases"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected/biases"
    }
  }
}

ops fully_connected/MatMul name: "fully_connected/MatMul"
op: "MatMul"
input: "concat_1"
input: "fully_connected/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

ops fully_connected/BiasAdd name: "fully_connected/BiasAdd"
op: "BiasAdd"
input: "fully_connected/MatMul"
input: "fully_connected/biases/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

ops dropout_1/Shape name: "dropout_1/Shape"
op: "Shape"
input: "fully_connected/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

ops dropout_1/random_uniform/min name: "dropout_1/random_uniform/min"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

ops dropout_1/random_uniform/max name: "dropout_1/random_uniform/max"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

ops dropout_1/random_uniform/RandomUniform name: "dropout_1/random_uniform/RandomUniform"
op: "RandomUniform"
input: "dropout_1/Shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

ops dropout_1/random_uniform/sub name: "dropout_1/random_uniform/sub"
op: "Sub"
input: "dropout_1/random_uniform/max"
input: "dropout_1/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops dropout_1/random_uniform/mul name: "dropout_1/random_uniform/mul"
op: "Mul"
input: "dropout_1/random_uniform/RandomUniform"
input: "dropout_1/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops dropout_1/random_uniform name: "dropout_1/random_uniform"
op: "Add"
input: "dropout_1/random_uniform/mul"
input: "dropout_1/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops dropout_1/add name: "dropout_1/add"
op: "Add"
input: "keep_prob_pl"
input: "dropout_1/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops dropout_1/Floor name: "dropout_1/Floor"
op: "Floor"
input: "dropout_1/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops dropout_1/div name: "dropout_1/div"
op: "RealDiv"
input: "fully_connected/BiasAdd"
input: "keep_prob_pl"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops dropout_1/mul name: "dropout_1/mul"
op: "Mul"
input: "dropout_1/div"
input: "dropout_1/Floor"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops Reshape_1/shape/1 name: "Reshape_1/shape/1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 4
    }
  }
}

ops Reshape_1/shape name: "Reshape_1/shape"
op: "Pack"
input: "strided_slice"
input: "Reshape_1/shape/1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "axis"
  value {
    i: 0
  }
}

ops Reshape_1 name: "Reshape_1"
op: "Reshape"
input: "dropout_1/mul"
input: "Reshape_1/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

ops SparseSoftmaxCrossEntropyWithLogits/Shape name: "SparseSoftmaxCrossEntropyWithLogits/Shape"
op: "Shape"
input: "stances_pl"
attr {
  key: "T"
  value {
    type: DT_INT64
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

ops SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits name: "SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
op: "SparseSoftmaxCrossEntropyWithLogits"
input: "Reshape_1"
input: "stances_pl"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tlabels"
  value {
    type: DT_INT64
  }
}

ops Const_7 name: "Const_7"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}

ops p_loss name: "p_loss"
op: "Sum"
input: "SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
input: "Const_7"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

ops Softmax name: "Softmax"
op: "Softmax"
input: "Reshape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops p_predict/dimension name: "p_predict/dimension"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

ops p_predict name: "p_predict"
op: "ArgMax"
input: "Softmax"
input: "p_predict/dimension"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "output_type"
  value {
    type: DT_INT64
  }
}

ops Identity_1 name: "Identity_1"
op: "Identity"
input: "dense/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_gradient_op_type"
  value {
    s: "FlipGradient0"
  }
}

ops fully_connected_1/weights/Initializer/random_uniform/shape name: "fully_connected_1/weights/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected_1/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "d\000\000\000d\000\000\000"
    }
  }
}

ops fully_connected_1/weights/Initializer/random_uniform/min name: "fully_connected_1/weights/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected_1/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.17320507764816284
    }
  }
}

ops fully_connected_1/weights/Initializer/random_uniform/max name: "fully_connected_1/weights/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected_1/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.17320507764816284
    }
  }
}

ops fully_connected_1/weights/Initializer/random_uniform/RandomUniform name: "fully_connected_1/weights/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "fully_connected_1/weights/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected_1/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

ops fully_connected_1/weights/Initializer/random_uniform/sub name: "fully_connected_1/weights/Initializer/random_uniform/sub"
op: "Sub"
input: "fully_connected_1/weights/Initializer/random_uniform/max"
input: "fully_connected_1/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected_1/weights"
    }
  }
}

ops fully_connected_1/weights/Initializer/random_uniform/mul name: "fully_connected_1/weights/Initializer/random_uniform/mul"
op: "Mul"
input: "fully_connected_1/weights/Initializer/random_uniform/RandomUniform"
input: "fully_connected_1/weights/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected_1/weights"
    }
  }
}

ops fully_connected_1/weights/Initializer/random_uniform name: "fully_connected_1/weights/Initializer/random_uniform"
op: "Add"
input: "fully_connected_1/weights/Initializer/random_uniform/mul"
input: "fully_connected_1/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected_1/weights"
    }
  }
}

ops fully_connected_1/weights name: "fully_connected_1/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected_1/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
      dim {
        size: 100
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops fully_connected_1/weights/Assign name: "fully_connected_1/weights/Assign"
op: "Assign"
input: "fully_connected_1/weights"
input: "fully_connected_1/weights/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected_1/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops fully_connected_1/weights/read name: "fully_connected_1/weights/read"
op: "Identity"
input: "fully_connected_1/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected_1/weights"
    }
  }
}

ops fully_connected_1/biases/Initializer/zeros name: "fully_connected_1/biases/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected_1/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 100
        }
      }
      float_val: 0.0
    }
  }
}

ops fully_connected_1/biases name: "fully_connected_1/biases"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected_1/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops fully_connected_1/biases/Assign name: "fully_connected_1/biases/Assign"
op: "Assign"
input: "fully_connected_1/biases"
input: "fully_connected_1/biases/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected_1/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops fully_connected_1/biases/read name: "fully_connected_1/biases/read"
op: "Identity"
input: "fully_connected_1/biases"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected_1/biases"
    }
  }
}

ops fully_connected_1/MatMul name: "fully_connected_1/MatMul"
op: "MatMul"
input: "Identity_1"
input: "fully_connected_1/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

ops fully_connected_1/BiasAdd name: "fully_connected_1/BiasAdd"
op: "BiasAdd"
input: "fully_connected_1/MatMul"
input: "fully_connected_1/biases/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

ops Relu_6 name: "Relu_6"
op: "Relu"
input: "fully_connected_1/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops dropout_2/Shape name: "dropout_2/Shape"
op: "Shape"
input: "Relu_6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

ops dropout_2/random_uniform/min name: "dropout_2/random_uniform/min"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

ops dropout_2/random_uniform/max name: "dropout_2/random_uniform/max"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

ops dropout_2/random_uniform/RandomUniform name: "dropout_2/random_uniform/RandomUniform"
op: "RandomUniform"
input: "dropout_2/Shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

ops dropout_2/random_uniform/sub name: "dropout_2/random_uniform/sub"
op: "Sub"
input: "dropout_2/random_uniform/max"
input: "dropout_2/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops dropout_2/random_uniform/mul name: "dropout_2/random_uniform/mul"
op: "Mul"
input: "dropout_2/random_uniform/RandomUniform"
input: "dropout_2/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops dropout_2/random_uniform name: "dropout_2/random_uniform"
op: "Add"
input: "dropout_2/random_uniform/mul"
input: "dropout_2/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops dropout_2/add name: "dropout_2/add"
op: "Add"
input: "keep_prob_pl"
input: "dropout_2/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops dropout_2/Floor name: "dropout_2/Floor"
op: "Floor"
input: "dropout_2/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops dropout_2/div name: "dropout_2/div"
op: "RealDiv"
input: "Relu_6"
input: "keep_prob_pl"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops dropout_2/mul name: "dropout_2/mul"
op: "Mul"
input: "dropout_2/div"
input: "dropout_2/Floor"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops fully_connected_2/weights/Initializer/random_uniform/shape name: "fully_connected_2/weights/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected_2/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "d\000\000\000\003\000\000\000"
    }
  }
}

ops fully_connected_2/weights/Initializer/random_uniform/min name: "fully_connected_2/weights/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected_2/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.24135538935661316
    }
  }
}

ops fully_connected_2/weights/Initializer/random_uniform/max name: "fully_connected_2/weights/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected_2/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.24135538935661316
    }
  }
}

ops fully_connected_2/weights/Initializer/random_uniform/RandomUniform name: "fully_connected_2/weights/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "fully_connected_2/weights/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected_2/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

ops fully_connected_2/weights/Initializer/random_uniform/sub name: "fully_connected_2/weights/Initializer/random_uniform/sub"
op: "Sub"
input: "fully_connected_2/weights/Initializer/random_uniform/max"
input: "fully_connected_2/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected_2/weights"
    }
  }
}

ops fully_connected_2/weights/Initializer/random_uniform/mul name: "fully_connected_2/weights/Initializer/random_uniform/mul"
op: "Mul"
input: "fully_connected_2/weights/Initializer/random_uniform/RandomUniform"
input: "fully_connected_2/weights/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected_2/weights"
    }
  }
}

ops fully_connected_2/weights/Initializer/random_uniform name: "fully_connected_2/weights/Initializer/random_uniform"
op: "Add"
input: "fully_connected_2/weights/Initializer/random_uniform/mul"
input: "fully_connected_2/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected_2/weights"
    }
  }
}

ops fully_connected_2/weights name: "fully_connected_2/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected_2/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
      dim {
        size: 3
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops fully_connected_2/weights/Assign name: "fully_connected_2/weights/Assign"
op: "Assign"
input: "fully_connected_2/weights"
input: "fully_connected_2/weights/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected_2/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops fully_connected_2/weights/read name: "fully_connected_2/weights/read"
op: "Identity"
input: "fully_connected_2/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected_2/weights"
    }
  }
}

ops fully_connected_2/biases/Initializer/zeros name: "fully_connected_2/biases/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected_2/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 3
        }
      }
      float_val: 0.0
    }
  }
}

ops fully_connected_2/biases name: "fully_connected_2/biases"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected_2/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops fully_connected_2/biases/Assign name: "fully_connected_2/biases/Assign"
op: "Assign"
input: "fully_connected_2/biases"
input: "fully_connected_2/biases/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected_2/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops fully_connected_2/biases/read name: "fully_connected_2/biases/read"
op: "Identity"
input: "fully_connected_2/biases"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected_2/biases"
    }
  }
}

ops fully_connected_2/MatMul name: "fully_connected_2/MatMul"
op: "MatMul"
input: "dropout_2/mul"
input: "fully_connected_2/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

ops fully_connected_2/BiasAdd name: "fully_connected_2/BiasAdd"
op: "BiasAdd"
input: "fully_connected_2/MatMul"
input: "fully_connected_2/biases/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

ops dropout_3/Shape name: "dropout_3/Shape"
op: "Shape"
input: "fully_connected_2/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

ops dropout_3/random_uniform/min name: "dropout_3/random_uniform/min"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

ops dropout_3/random_uniform/max name: "dropout_3/random_uniform/max"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

ops dropout_3/random_uniform/RandomUniform name: "dropout_3/random_uniform/RandomUniform"
op: "RandomUniform"
input: "dropout_3/Shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

ops dropout_3/random_uniform/sub name: "dropout_3/random_uniform/sub"
op: "Sub"
input: "dropout_3/random_uniform/max"
input: "dropout_3/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops dropout_3/random_uniform/mul name: "dropout_3/random_uniform/mul"
op: "Mul"
input: "dropout_3/random_uniform/RandomUniform"
input: "dropout_3/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops dropout_3/random_uniform name: "dropout_3/random_uniform"
op: "Add"
input: "dropout_3/random_uniform/mul"
input: "dropout_3/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops dropout_3/add name: "dropout_3/add"
op: "Add"
input: "keep_prob_pl"
input: "dropout_3/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops dropout_3/Floor name: "dropout_3/Floor"
op: "Floor"
input: "dropout_3/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops dropout_3/div name: "dropout_3/div"
op: "RealDiv"
input: "fully_connected_2/BiasAdd"
input: "keep_prob_pl"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops dropout_3/mul name: "dropout_3/mul"
op: "Mul"
input: "dropout_3/div"
input: "dropout_3/Floor"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops Reshape_2/shape/1 name: "Reshape_2/shape/1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 3
    }
  }
}

ops Reshape_2/shape name: "Reshape_2/shape"
op: "Pack"
input: "strided_slice"
input: "Reshape_2/shape/1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "axis"
  value {
    i: 0
  }
}

ops Reshape_2 name: "Reshape_2"
op: "Reshape"
input: "dropout_3/mul"
input: "Reshape_2/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

ops SparseSoftmaxCrossEntropyWithLogits_1/Shape name: "SparseSoftmaxCrossEntropyWithLogits_1/Shape"
op: "Shape"
input: "domains_pl"
attr {
  key: "T"
  value {
    type: DT_INT64
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

ops SparseSoftmaxCrossEntropyWithLogits_1/SparseSoftmaxCrossEntropyWithLogits name: "SparseSoftmaxCrossEntropyWithLogits_1/SparseSoftmaxCrossEntropyWithLogits"
op: "SparseSoftmaxCrossEntropyWithLogits"
input: "Reshape_2"
input: "domains_pl"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tlabels"
  value {
    type: DT_INT64
  }
}

ops Const_8 name: "Const_8"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}

ops d_loss name: "d_loss"
op: "Sum"
input: "SparseSoftmaxCrossEntropyWithLogits_1/SparseSoftmaxCrossEntropyWithLogits"
input: "Const_8"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

ops Softmax_1 name: "Softmax_1"
op: "Softmax"
input: "Reshape_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops d_predict/dimension name: "d_predict/dimension"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

ops d_predict name: "d_predict"
op: "ArgMax"
input: "Softmax_1"
input: "d_predict/dimension"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "output_type"
  value {
    type: DT_INT64
  }
}

ops L2Loss name: "L2Loss"
op: "L2Loss"
input: "Variable_1/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops L2Loss_1 name: "L2Loss_1"
op: "L2Loss"
input: "conv1d/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops L2Loss_2 name: "L2Loss_2"
op: "L2Loss"
input: "Variable_2/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops L2Loss_3 name: "L2Loss_3"
op: "L2Loss"
input: "conv1d_1/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops L2Loss_4 name: "L2Loss_4"
op: "L2Loss"
input: "Variable_3/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops L2Loss_5 name: "L2Loss_5"
op: "L2Loss"
input: "conv1d_2/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops L2Loss_6 name: "L2Loss_6"
op: "L2Loss"
input: "Variable_4/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops L2Loss_7 name: "L2Loss_7"
op: "L2Loss"
input: "conv1d_3/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops L2Loss_8 name: "L2Loss_8"
op: "L2Loss"
input: "Variable_5/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops L2Loss_9 name: "L2Loss_9"
op: "L2Loss"
input: "conv1d_4/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops L2Loss_10 name: "L2Loss_10"
op: "L2Loss"
input: "Variable_6/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops L2Loss_11 name: "L2Loss_11"
op: "L2Loss"
input: "conv1d_5/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops L2Loss_12 name: "L2Loss_12"
op: "L2Loss"
input: "dense/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops L2Loss_13 name: "L2Loss_13"
op: "L2Loss"
input: "fully_connected/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops L2Loss_14 name: "L2Loss_14"
op: "L2Loss"
input: "fully_connected_1/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops L2Loss_15 name: "L2Loss_15"
op: "L2Loss"
input: "fully_connected_2/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops AddN name: "AddN"
op: "AddN"
input: "L2Loss"
input: "L2Loss_1"
input: "L2Loss_2"
input: "L2Loss_3"
input: "L2Loss_4"
input: "L2Loss_5"
input: "L2Loss_6"
input: "L2Loss_7"
input: "L2Loss_8"
input: "L2Loss_9"
input: "L2Loss_10"
input: "L2Loss_11"
input: "L2Loss_12"
input: "L2Loss_13"
input: "L2Loss_14"
input: "L2Loss_15"
attr {
  key: "N"
  value {
    i: 16
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops l2_loss/y name: "l2_loss/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.009999999776482582
    }
  }
}

ops l2_loss name: "l2_loss"
op: "Mul"
input: "AddN"
input: "l2_loss/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops mul/x name: "mul/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.5
    }
  }
}

ops mul name: "mul"
op: "Mul"
input: "mul/x"
input: "p_loss"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops mul_1/x name: "mul_1/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.5
    }
  }
}

ops mul_1 name: "mul_1"
op: "Mul"
input: "mul_1/x"
input: "d_loss"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops add name: "add"
op: "Add"
input: "mul"
input: "mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops add_1 name: "add_1"
op: "Add"
input: "add"
input: "l2_loss"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops gradients/Shape name: "gradients/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}

ops gradients/grad_ys_0 name: "gradients/grad_ys_0"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

ops gradients/Fill name: "gradients/Fill"
op: "Fill"
input: "gradients/Shape"
input: "gradients/grad_ys_0"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops gradients/l2_loss_grad/Mul name: "gradients/l2_loss_grad/Mul"
op: "Mul"
input: "gradients/Fill"
input: "l2_loss/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops gradients/l2_loss_grad/Mul_1 name: "gradients/l2_loss_grad/Mul_1"
op: "Mul"
input: "gradients/Fill"
input: "AddN"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops gradients/mul_grad/Mul name: "gradients/mul_grad/Mul"
op: "Mul"
input: "gradients/Fill"
input: "p_loss"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops gradients/mul_grad/Mul_1 name: "gradients/mul_grad/Mul_1"
op: "Mul"
input: "gradients/Fill"
input: "mul/x"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops gradients/mul_1_grad/Mul name: "gradients/mul_1_grad/Mul"
op: "Mul"
input: "gradients/Fill"
input: "d_loss"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops gradients/mul_1_grad/Mul_1 name: "gradients/mul_1_grad/Mul_1"
op: "Mul"
input: "gradients/Fill"
input: "mul_1/x"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops gradients/p_loss_grad/Reshape/shape name: "gradients/p_loss_grad/Reshape/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}

ops gradients/p_loss_grad/Reshape name: "gradients/p_loss_grad/Reshape"
op: "Reshape"
input: "gradients/mul_grad/Mul_1"
input: "gradients/p_loss_grad/Reshape/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

ops gradients/p_loss_grad/Shape name: "gradients/p_loss_grad/Shape"
op: "Shape"
input: "SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

ops gradients/p_loss_grad/Tile name: "gradients/p_loss_grad/Tile"
op: "Tile"
input: "gradients/p_loss_grad/Reshape"
input: "gradients/p_loss_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}

ops gradients/d_loss_grad/Reshape/shape name: "gradients/d_loss_grad/Reshape/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}

ops gradients/d_loss_grad/Reshape name: "gradients/d_loss_grad/Reshape"
op: "Reshape"
input: "gradients/mul_1_grad/Mul_1"
input: "gradients/d_loss_grad/Reshape/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

ops gradients/d_loss_grad/Shape name: "gradients/d_loss_grad/Shape"
op: "Shape"
input: "SparseSoftmaxCrossEntropyWithLogits_1/SparseSoftmaxCrossEntropyWithLogits"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

ops gradients/d_loss_grad/Tile name: "gradients/d_loss_grad/Tile"
op: "Tile"
input: "gradients/d_loss_grad/Reshape"
input: "gradients/d_loss_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}

ops gradients/L2Loss_grad/mul name: "gradients/L2Loss_grad/mul"
op: "Mul"
input: "Variable_1/read"
input: "gradients/l2_loss_grad/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops gradients/L2Loss_1_grad/mul name: "gradients/L2Loss_1_grad/mul"
op: "Mul"
input: "conv1d/kernel/read"
input: "gradients/l2_loss_grad/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops gradients/L2Loss_2_grad/mul name: "gradients/L2Loss_2_grad/mul"
op: "Mul"
input: "Variable_2/read"
input: "gradients/l2_loss_grad/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops gradients/L2Loss_3_grad/mul name: "gradients/L2Loss_3_grad/mul"
op: "Mul"
input: "conv1d_1/kernel/read"
input: "gradients/l2_loss_grad/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops gradients/L2Loss_4_grad/mul name: "gradients/L2Loss_4_grad/mul"
op: "Mul"
input: "Variable_3/read"
input: "gradients/l2_loss_grad/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops gradients/L2Loss_5_grad/mul name: "gradients/L2Loss_5_grad/mul"
op: "Mul"
input: "conv1d_2/kernel/read"
input: "gradients/l2_loss_grad/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops gradients/L2Loss_6_grad/mul name: "gradients/L2Loss_6_grad/mul"
op: "Mul"
input: "Variable_4/read"
input: "gradients/l2_loss_grad/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops gradients/L2Loss_7_grad/mul name: "gradients/L2Loss_7_grad/mul"
op: "Mul"
input: "conv1d_3/kernel/read"
input: "gradients/l2_loss_grad/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops gradients/L2Loss_8_grad/mul name: "gradients/L2Loss_8_grad/mul"
op: "Mul"
input: "Variable_5/read"
input: "gradients/l2_loss_grad/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops gradients/L2Loss_9_grad/mul name: "gradients/L2Loss_9_grad/mul"
op: "Mul"
input: "conv1d_4/kernel/read"
input: "gradients/l2_loss_grad/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops gradients/L2Loss_10_grad/mul name: "gradients/L2Loss_10_grad/mul"
op: "Mul"
input: "Variable_6/read"
input: "gradients/l2_loss_grad/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops gradients/L2Loss_11_grad/mul name: "gradients/L2Loss_11_grad/mul"
op: "Mul"
input: "conv1d_5/kernel/read"
input: "gradients/l2_loss_grad/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops gradients/L2Loss_12_grad/mul name: "gradients/L2Loss_12_grad/mul"
op: "Mul"
input: "dense/kernel/read"
input: "gradients/l2_loss_grad/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops gradients/L2Loss_13_grad/mul name: "gradients/L2Loss_13_grad/mul"
op: "Mul"
input: "fully_connected/weights/read"
input: "gradients/l2_loss_grad/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops gradients/L2Loss_14_grad/mul name: "gradients/L2Loss_14_grad/mul"
op: "Mul"
input: "fully_connected_1/weights/read"
input: "gradients/l2_loss_grad/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops gradients/L2Loss_15_grad/mul name: "gradients/L2Loss_15_grad/mul"
op: "Mul"
input: "fully_connected_2/weights/read"
input: "gradients/l2_loss_grad/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops gradients/zeros_like name: "gradients/zeros_like"
op: "ZerosLike"
input: "SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops gradients/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/PreventGradient name: "gradients/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/PreventGradient"
op: "PreventGradient"
input: "SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "message"
  value {
    s: "Currently there is no way to take the second derivative of sparse_softmax_cross_entropy_with_logits due to the fused implementation\'s interaction with tf.gradients()"
  }
}

ops gradients/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims/dim name: "gradients/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims/dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}

ops gradients/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims name: "gradients/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims"
op: "ExpandDims"
input: "gradients/p_loss_grad/Tile"
input: "gradients/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims/dim"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tdim"
  value {
    type: DT_INT32
  }
}

ops gradients/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/mul name: "gradients/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/mul"
op: "Mul"
input: "gradients/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims"
input: "gradients/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/PreventGradient"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops gradients/zeros_like_1 name: "gradients/zeros_like_1"
op: "ZerosLike"
input: "SparseSoftmaxCrossEntropyWithLogits_1/SparseSoftmaxCrossEntropyWithLogits:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops gradients/SparseSoftmaxCrossEntropyWithLogits_1/SparseSoftmaxCrossEntropyWithLogits_grad/PreventGradient name: "gradients/SparseSoftmaxCrossEntropyWithLogits_1/SparseSoftmaxCrossEntropyWithLogits_grad/PreventGradient"
op: "PreventGradient"
input: "SparseSoftmaxCrossEntropyWithLogits_1/SparseSoftmaxCrossEntropyWithLogits:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "message"
  value {
    s: "Currently there is no way to take the second derivative of sparse_softmax_cross_entropy_with_logits due to the fused implementation\'s interaction with tf.gradients()"
  }
}

ops gradients/SparseSoftmaxCrossEntropyWithLogits_1/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims/dim name: "gradients/SparseSoftmaxCrossEntropyWithLogits_1/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims/dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}

ops gradients/SparseSoftmaxCrossEntropyWithLogits_1/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims name: "gradients/SparseSoftmaxCrossEntropyWithLogits_1/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims"
op: "ExpandDims"
input: "gradients/d_loss_grad/Tile"
input: "gradients/SparseSoftmaxCrossEntropyWithLogits_1/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims/dim"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tdim"
  value {
    type: DT_INT32
  }
}

ops gradients/SparseSoftmaxCrossEntropyWithLogits_1/SparseSoftmaxCrossEntropyWithLogits_grad/mul name: "gradients/SparseSoftmaxCrossEntropyWithLogits_1/SparseSoftmaxCrossEntropyWithLogits_grad/mul"
op: "Mul"
input: "gradients/SparseSoftmaxCrossEntropyWithLogits_1/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims"
input: "gradients/SparseSoftmaxCrossEntropyWithLogits_1/SparseSoftmaxCrossEntropyWithLogits_grad/PreventGradient"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops gradients/Reshape_1_grad/Shape name: "gradients/Reshape_1_grad/Shape"
op: "Shape"
input: "dropout_1/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

ops gradients/Reshape_1_grad/Reshape name: "gradients/Reshape_1_grad/Reshape"
op: "Reshape"
input: "gradients/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/mul"
input: "gradients/Reshape_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

ops gradients/Reshape_2_grad/Shape name: "gradients/Reshape_2_grad/Shape"
op: "Shape"
input: "dropout_3/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

ops gradients/Reshape_2_grad/Reshape name: "gradients/Reshape_2_grad/Reshape"
op: "Reshape"
input: "gradients/SparseSoftmaxCrossEntropyWithLogits_1/SparseSoftmaxCrossEntropyWithLogits_grad/mul"
input: "gradients/Reshape_2_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

ops gradients/dropout_1/mul_grad/Shape name: "gradients/dropout_1/mul_grad/Shape"
op: "Shape"
input: "dropout_1/div"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

ops gradients/dropout_1/mul_grad/Shape_1 name: "gradients/dropout_1/mul_grad/Shape_1"
op: "Shape"
input: "dropout_1/Floor"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

ops gradients/dropout_1/mul_grad/BroadcastGradientArgs name: "gradients/dropout_1/mul_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/dropout_1/mul_grad/Shape"
input: "gradients/dropout_1/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

ops gradients/dropout_1/mul_grad/mul name: "gradients/dropout_1/mul_grad/mul"
op: "Mul"
input: "gradients/Reshape_1_grad/Reshape"
input: "dropout_1/Floor"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops gradients/dropout_1/mul_grad/Sum name: "gradients/dropout_1/mul_grad/Sum"
op: "Sum"
input: "gradients/dropout_1/mul_grad/mul"
input: "gradients/dropout_1/mul_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

ops gradients/dropout_1/mul_grad/Reshape name: "gradients/dropout_1/mul_grad/Reshape"
op: "Reshape"
input: "gradients/dropout_1/mul_grad/Sum"
input: "gradients/dropout_1/mul_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

ops gradients/dropout_1/mul_grad/mul_1 name: "gradients/dropout_1/mul_grad/mul_1"
op: "Mul"
input: "dropout_1/div"
input: "gradients/Reshape_1_grad/Reshape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops gradients/dropout_1/mul_grad/Sum_1 name: "gradients/dropout_1/mul_grad/Sum_1"
op: "Sum"
input: "gradients/dropout_1/mul_grad/mul_1"
input: "gradients/dropout_1/mul_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

ops gradients/dropout_1/mul_grad/Reshape_1 name: "gradients/dropout_1/mul_grad/Reshape_1"
op: "Reshape"
input: "gradients/dropout_1/mul_grad/Sum_1"
input: "gradients/dropout_1/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

ops gradients/dropout_3/mul_grad/Shape name: "gradients/dropout_3/mul_grad/Shape"
op: "Shape"
input: "dropout_3/div"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

ops gradients/dropout_3/mul_grad/Shape_1 name: "gradients/dropout_3/mul_grad/Shape_1"
op: "Shape"
input: "dropout_3/Floor"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

ops gradients/dropout_3/mul_grad/BroadcastGradientArgs name: "gradients/dropout_3/mul_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/dropout_3/mul_grad/Shape"
input: "gradients/dropout_3/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

ops gradients/dropout_3/mul_grad/mul name: "gradients/dropout_3/mul_grad/mul"
op: "Mul"
input: "gradients/Reshape_2_grad/Reshape"
input: "dropout_3/Floor"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops gradients/dropout_3/mul_grad/Sum name: "gradients/dropout_3/mul_grad/Sum"
op: "Sum"
input: "gradients/dropout_3/mul_grad/mul"
input: "gradients/dropout_3/mul_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

ops gradients/dropout_3/mul_grad/Reshape name: "gradients/dropout_3/mul_grad/Reshape"
op: "Reshape"
input: "gradients/dropout_3/mul_grad/Sum"
input: "gradients/dropout_3/mul_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

ops gradients/dropout_3/mul_grad/mul_1 name: "gradients/dropout_3/mul_grad/mul_1"
op: "Mul"
input: "dropout_3/div"
input: "gradients/Reshape_2_grad/Reshape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops gradients/dropout_3/mul_grad/Sum_1 name: "gradients/dropout_3/mul_grad/Sum_1"
op: "Sum"
input: "gradients/dropout_3/mul_grad/mul_1"
input: "gradients/dropout_3/mul_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

ops gradients/dropout_3/mul_grad/Reshape_1 name: "gradients/dropout_3/mul_grad/Reshape_1"
op: "Reshape"
input: "gradients/dropout_3/mul_grad/Sum_1"
input: "gradients/dropout_3/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

ops gradients/dropout_1/div_grad/Shape name: "gradients/dropout_1/div_grad/Shape"
op: "Shape"
input: "fully_connected/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

ops gradients/dropout_1/div_grad/Shape_1 name: "gradients/dropout_1/div_grad/Shape_1"
op: "Shape"
input: "keep_prob_pl"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

ops gradients/dropout_1/div_grad/BroadcastGradientArgs name: "gradients/dropout_1/div_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/dropout_1/div_grad/Shape"
input: "gradients/dropout_1/div_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

ops gradients/dropout_1/div_grad/RealDiv name: "gradients/dropout_1/div_grad/RealDiv"
op: "RealDiv"
input: "gradients/dropout_1/mul_grad/Reshape"
input: "keep_prob_pl"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops gradients/dropout_1/div_grad/Sum name: "gradients/dropout_1/div_grad/Sum"
op: "Sum"
input: "gradients/dropout_1/div_grad/RealDiv"
input: "gradients/dropout_1/div_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

ops gradients/dropout_1/div_grad/Reshape name: "gradients/dropout_1/div_grad/Reshape"
op: "Reshape"
input: "gradients/dropout_1/div_grad/Sum"
input: "gradients/dropout_1/div_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

ops gradients/dropout_1/div_grad/Neg name: "gradients/dropout_1/div_grad/Neg"
op: "Neg"
input: "fully_connected/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops gradients/dropout_1/div_grad/RealDiv_1 name: "gradients/dropout_1/div_grad/RealDiv_1"
op: "RealDiv"
input: "gradients/dropout_1/div_grad/Neg"
input: "keep_prob_pl"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops gradients/dropout_1/div_grad/RealDiv_2 name: "gradients/dropout_1/div_grad/RealDiv_2"
op: "RealDiv"
input: "gradients/dropout_1/div_grad/RealDiv_1"
input: "keep_prob_pl"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops gradients/dropout_1/div_grad/mul name: "gradients/dropout_1/div_grad/mul"
op: "Mul"
input: "gradients/dropout_1/mul_grad/Reshape"
input: "gradients/dropout_1/div_grad/RealDiv_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops gradients/dropout_1/div_grad/Sum_1 name: "gradients/dropout_1/div_grad/Sum_1"
op: "Sum"
input: "gradients/dropout_1/div_grad/mul"
input: "gradients/dropout_1/div_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

ops gradients/dropout_1/div_grad/Reshape_1 name: "gradients/dropout_1/div_grad/Reshape_1"
op: "Reshape"
input: "gradients/dropout_1/div_grad/Sum_1"
input: "gradients/dropout_1/div_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

ops gradients/dropout_3/div_grad/Shape name: "gradients/dropout_3/div_grad/Shape"
op: "Shape"
input: "fully_connected_2/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

ops gradients/dropout_3/div_grad/Shape_1 name: "gradients/dropout_3/div_grad/Shape_1"
op: "Shape"
input: "keep_prob_pl"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

ops gradients/dropout_3/div_grad/BroadcastGradientArgs name: "gradients/dropout_3/div_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/dropout_3/div_grad/Shape"
input: "gradients/dropout_3/div_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

ops gradients/dropout_3/div_grad/RealDiv name: "gradients/dropout_3/div_grad/RealDiv"
op: "RealDiv"
input: "gradients/dropout_3/mul_grad/Reshape"
input: "keep_prob_pl"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops gradients/dropout_3/div_grad/Sum name: "gradients/dropout_3/div_grad/Sum"
op: "Sum"
input: "gradients/dropout_3/div_grad/RealDiv"
input: "gradients/dropout_3/div_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

ops gradients/dropout_3/div_grad/Reshape name: "gradients/dropout_3/div_grad/Reshape"
op: "Reshape"
input: "gradients/dropout_3/div_grad/Sum"
input: "gradients/dropout_3/div_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

ops gradients/dropout_3/div_grad/Neg name: "gradients/dropout_3/div_grad/Neg"
op: "Neg"
input: "fully_connected_2/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops gradients/dropout_3/div_grad/RealDiv_1 name: "gradients/dropout_3/div_grad/RealDiv_1"
op: "RealDiv"
input: "gradients/dropout_3/div_grad/Neg"
input: "keep_prob_pl"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops gradients/dropout_3/div_grad/RealDiv_2 name: "gradients/dropout_3/div_grad/RealDiv_2"
op: "RealDiv"
input: "gradients/dropout_3/div_grad/RealDiv_1"
input: "keep_prob_pl"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops gradients/dropout_3/div_grad/mul name: "gradients/dropout_3/div_grad/mul"
op: "Mul"
input: "gradients/dropout_3/mul_grad/Reshape"
input: "gradients/dropout_3/div_grad/RealDiv_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops gradients/dropout_3/div_grad/Sum_1 name: "gradients/dropout_3/div_grad/Sum_1"
op: "Sum"
input: "gradients/dropout_3/div_grad/mul"
input: "gradients/dropout_3/div_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

ops gradients/dropout_3/div_grad/Reshape_1 name: "gradients/dropout_3/div_grad/Reshape_1"
op: "Reshape"
input: "gradients/dropout_3/div_grad/Sum_1"
input: "gradients/dropout_3/div_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

ops gradients/fully_connected/BiasAdd_grad/BiasAddGrad name: "gradients/fully_connected/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/dropout_1/div_grad/Reshape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

ops gradients/fully_connected_2/BiasAdd_grad/BiasAddGrad name: "gradients/fully_connected_2/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/dropout_3/div_grad/Reshape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

ops gradients/fully_connected/MatMul_grad/MatMul name: "gradients/fully_connected/MatMul_grad/MatMul"
op: "MatMul"
input: "gradients/dropout_1/div_grad/Reshape"
input: "fully_connected/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}

ops gradients/fully_connected/MatMul_grad/MatMul_1 name: "gradients/fully_connected/MatMul_grad/MatMul_1"
op: "MatMul"
input: "concat_1"
input: "gradients/dropout_1/div_grad/Reshape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

ops gradients/fully_connected_2/MatMul_grad/MatMul name: "gradients/fully_connected_2/MatMul_grad/MatMul"
op: "MatMul"
input: "gradients/dropout_3/div_grad/Reshape"
input: "fully_connected_2/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}

ops gradients/fully_connected_2/MatMul_grad/MatMul_1 name: "gradients/fully_connected_2/MatMul_grad/MatMul_1"
op: "MatMul"
input: "dropout_2/mul"
input: "gradients/dropout_3/div_grad/Reshape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

ops gradients/concat_1_grad/Rank name: "gradients/concat_1_grad/Rank"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}

ops gradients/concat_1_grad/mod name: "gradients/concat_1_grad/mod"
op: "FloorMod"
input: "concat_1/axis"
input: "gradients/concat_1_grad/Rank"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

ops gradients/concat_1_grad/Shape name: "gradients/concat_1_grad/Shape"
op: "Shape"
input: "p_features_pl"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

ops gradients/concat_1_grad/ShapeN name: "gradients/concat_1_grad/ShapeN"
op: "ShapeN"
input: "p_features_pl"
input: "Identity"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

ops gradients/concat_1_grad/ConcatOffset name: "gradients/concat_1_grad/ConcatOffset"
op: "ConcatOffset"
input: "gradients/concat_1_grad/mod"
input: "gradients/concat_1_grad/ShapeN"
input: "gradients/concat_1_grad/ShapeN:1"
attr {
  key: "N"
  value {
    i: 2
  }
}

ops gradients/concat_1_grad/Slice name: "gradients/concat_1_grad/Slice"
op: "Slice"
input: "gradients/fully_connected/MatMul_grad/MatMul"
input: "gradients/concat_1_grad/ConcatOffset"
input: "gradients/concat_1_grad/ShapeN"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops gradients/concat_1_grad/Slice_1 name: "gradients/concat_1_grad/Slice_1"
op: "Slice"
input: "gradients/fully_connected/MatMul_grad/MatMul"
input: "gradients/concat_1_grad/ConcatOffset:1"
input: "gradients/concat_1_grad/ShapeN:1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops gradients/AddN name: "gradients/AddN"
op: "AddN"
input: "gradients/L2Loss_13_grad/mul"
input: "gradients/fully_connected/MatMul_grad/MatMul_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/L2Loss_13_grad/mul"
    }
  }
}

ops gradients/dropout_2/mul_grad/Shape name: "gradients/dropout_2/mul_grad/Shape"
op: "Shape"
input: "dropout_2/div"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

ops gradients/dropout_2/mul_grad/Shape_1 name: "gradients/dropout_2/mul_grad/Shape_1"
op: "Shape"
input: "dropout_2/Floor"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

ops gradients/dropout_2/mul_grad/BroadcastGradientArgs name: "gradients/dropout_2/mul_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/dropout_2/mul_grad/Shape"
input: "gradients/dropout_2/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

ops gradients/dropout_2/mul_grad/mul name: "gradients/dropout_2/mul_grad/mul"
op: "Mul"
input: "gradients/fully_connected_2/MatMul_grad/MatMul"
input: "dropout_2/Floor"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops gradients/dropout_2/mul_grad/Sum name: "gradients/dropout_2/mul_grad/Sum"
op: "Sum"
input: "gradients/dropout_2/mul_grad/mul"
input: "gradients/dropout_2/mul_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

ops gradients/dropout_2/mul_grad/Reshape name: "gradients/dropout_2/mul_grad/Reshape"
op: "Reshape"
input: "gradients/dropout_2/mul_grad/Sum"
input: "gradients/dropout_2/mul_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

ops gradients/dropout_2/mul_grad/mul_1 name: "gradients/dropout_2/mul_grad/mul_1"
op: "Mul"
input: "dropout_2/div"
input: "gradients/fully_connected_2/MatMul_grad/MatMul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops gradients/dropout_2/mul_grad/Sum_1 name: "gradients/dropout_2/mul_grad/Sum_1"
op: "Sum"
input: "gradients/dropout_2/mul_grad/mul_1"
input: "gradients/dropout_2/mul_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

ops gradients/dropout_2/mul_grad/Reshape_1 name: "gradients/dropout_2/mul_grad/Reshape_1"
op: "Reshape"
input: "gradients/dropout_2/mul_grad/Sum_1"
input: "gradients/dropout_2/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

ops gradients/AddN_1 name: "gradients/AddN_1"
op: "AddN"
input: "gradients/L2Loss_15_grad/mul"
input: "gradients/fully_connected_2/MatMul_grad/MatMul_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/L2Loss_15_grad/mul"
    }
  }
}

ops gradients/dropout_2/div_grad/Shape name: "gradients/dropout_2/div_grad/Shape"
op: "Shape"
input: "Relu_6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

ops gradients/dropout_2/div_grad/Shape_1 name: "gradients/dropout_2/div_grad/Shape_1"
op: "Shape"
input: "keep_prob_pl"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

ops gradients/dropout_2/div_grad/BroadcastGradientArgs name: "gradients/dropout_2/div_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/dropout_2/div_grad/Shape"
input: "gradients/dropout_2/div_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

ops gradients/dropout_2/div_grad/RealDiv name: "gradients/dropout_2/div_grad/RealDiv"
op: "RealDiv"
input: "gradients/dropout_2/mul_grad/Reshape"
input: "keep_prob_pl"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops gradients/dropout_2/div_grad/Sum name: "gradients/dropout_2/div_grad/Sum"
op: "Sum"
input: "gradients/dropout_2/div_grad/RealDiv"
input: "gradients/dropout_2/div_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

ops gradients/dropout_2/div_grad/Reshape name: "gradients/dropout_2/div_grad/Reshape"
op: "Reshape"
input: "gradients/dropout_2/div_grad/Sum"
input: "gradients/dropout_2/div_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

ops gradients/dropout_2/div_grad/Neg name: "gradients/dropout_2/div_grad/Neg"
op: "Neg"
input: "Relu_6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops gradients/dropout_2/div_grad/RealDiv_1 name: "gradients/dropout_2/div_grad/RealDiv_1"
op: "RealDiv"
input: "gradients/dropout_2/div_grad/Neg"
input: "keep_prob_pl"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops gradients/dropout_2/div_grad/RealDiv_2 name: "gradients/dropout_2/div_grad/RealDiv_2"
op: "RealDiv"
input: "gradients/dropout_2/div_grad/RealDiv_1"
input: "keep_prob_pl"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops gradients/dropout_2/div_grad/mul name: "gradients/dropout_2/div_grad/mul"
op: "Mul"
input: "gradients/dropout_2/mul_grad/Reshape"
input: "gradients/dropout_2/div_grad/RealDiv_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops gradients/dropout_2/div_grad/Sum_1 name: "gradients/dropout_2/div_grad/Sum_1"
op: "Sum"
input: "gradients/dropout_2/div_grad/mul"
input: "gradients/dropout_2/div_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

ops gradients/dropout_2/div_grad/Reshape_1 name: "gradients/dropout_2/div_grad/Reshape_1"
op: "Reshape"
input: "gradients/dropout_2/div_grad/Sum_1"
input: "gradients/dropout_2/div_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

ops gradients/Relu_6_grad/ReluGrad name: "gradients/Relu_6_grad/ReluGrad"
op: "ReluGrad"
input: "gradients/dropout_2/div_grad/Reshape"
input: "Relu_6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops gradients/fully_connected_1/BiasAdd_grad/BiasAddGrad name: "gradients/fully_connected_1/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/Relu_6_grad/ReluGrad"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

ops gradients/fully_connected_1/MatMul_grad/MatMul name: "gradients/fully_connected_1/MatMul_grad/MatMul"
op: "MatMul"
input: "gradients/Relu_6_grad/ReluGrad"
input: "fully_connected_1/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}

ops gradients/fully_connected_1/MatMul_grad/MatMul_1 name: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
op: "MatMul"
input: "Identity_1"
input: "gradients/Relu_6_grad/ReluGrad"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

ops gradients/Identity_1_grad/Neg name: "gradients/Identity_1_grad/Neg"
op: "Neg"
input: "gradients/fully_connected_1/MatMul_grad/MatMul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops gradients/Identity_1_grad/mul name: "gradients/Identity_1_grad/mul"
op: "Mul"
input: "gradients/Identity_1_grad/Neg"
input: "gr_pl"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops gradients/AddN_2 name: "gradients/AddN_2"
op: "AddN"
input: "gradients/L2Loss_14_grad/mul"
input: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/L2Loss_14_grad/mul"
    }
  }
}

ops gradients/AddN_3 name: "gradients/AddN_3"
op: "AddN"
input: "gradients/concat_1_grad/Slice_1"
input: "gradients/Identity_1_grad/mul"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/concat_1_grad/Slice_1"
    }
  }
}

ops gradients/dense/BiasAdd_grad/BiasAddGrad name: "gradients/dense/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/AddN_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

ops gradients/dense/MatMul_grad/MatMul name: "gradients/dense/MatMul_grad/MatMul"
op: "MatMul"
input: "gradients/AddN_3"
input: "dense/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}

ops gradients/dense/MatMul_grad/MatMul_1 name: "gradients/dense/MatMul_grad/MatMul_1"
op: "MatMul"
input: "dropout/mul"
input: "gradients/AddN_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

ops gradients/dropout/mul_grad/Shape name: "gradients/dropout/mul_grad/Shape"
op: "Shape"
input: "dropout/div"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

ops gradients/dropout/mul_grad/Shape_1 name: "gradients/dropout/mul_grad/Shape_1"
op: "Shape"
input: "dropout/Floor"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

ops gradients/dropout/mul_grad/BroadcastGradientArgs name: "gradients/dropout/mul_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/dropout/mul_grad/Shape"
input: "gradients/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

ops gradients/dropout/mul_grad/mul name: "gradients/dropout/mul_grad/mul"
op: "Mul"
input: "gradients/dense/MatMul_grad/MatMul"
input: "dropout/Floor"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops gradients/dropout/mul_grad/Sum name: "gradients/dropout/mul_grad/Sum"
op: "Sum"
input: "gradients/dropout/mul_grad/mul"
input: "gradients/dropout/mul_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

ops gradients/dropout/mul_grad/Reshape name: "gradients/dropout/mul_grad/Reshape"
op: "Reshape"
input: "gradients/dropout/mul_grad/Sum"
input: "gradients/dropout/mul_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

ops gradients/dropout/mul_grad/mul_1 name: "gradients/dropout/mul_grad/mul_1"
op: "Mul"
input: "dropout/div"
input: "gradients/dense/MatMul_grad/MatMul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops gradients/dropout/mul_grad/Sum_1 name: "gradients/dropout/mul_grad/Sum_1"
op: "Sum"
input: "gradients/dropout/mul_grad/mul_1"
input: "gradients/dropout/mul_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

ops gradients/dropout/mul_grad/Reshape_1 name: "gradients/dropout/mul_grad/Reshape_1"
op: "Reshape"
input: "gradients/dropout/mul_grad/Sum_1"
input: "gradients/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

ops gradients/AddN_4 name: "gradients/AddN_4"
op: "AddN"
input: "gradients/L2Loss_12_grad/mul"
input: "gradients/dense/MatMul_grad/MatMul_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/L2Loss_12_grad/mul"
    }
  }
}

ops gradients/dropout/div_grad/Shape name: "gradients/dropout/div_grad/Shape"
op: "Shape"
input: "Reshape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

ops gradients/dropout/div_grad/Shape_1 name: "gradients/dropout/div_grad/Shape_1"
op: "Shape"
input: "keep_prob_pl"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

ops gradients/dropout/div_grad/BroadcastGradientArgs name: "gradients/dropout/div_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/dropout/div_grad/Shape"
input: "gradients/dropout/div_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

ops gradients/dropout/div_grad/RealDiv name: "gradients/dropout/div_grad/RealDiv"
op: "RealDiv"
input: "gradients/dropout/mul_grad/Reshape"
input: "keep_prob_pl"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops gradients/dropout/div_grad/Sum name: "gradients/dropout/div_grad/Sum"
op: "Sum"
input: "gradients/dropout/div_grad/RealDiv"
input: "gradients/dropout/div_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

ops gradients/dropout/div_grad/Reshape name: "gradients/dropout/div_grad/Reshape"
op: "Reshape"
input: "gradients/dropout/div_grad/Sum"
input: "gradients/dropout/div_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

ops gradients/dropout/div_grad/Neg name: "gradients/dropout/div_grad/Neg"
op: "Neg"
input: "Reshape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops gradients/dropout/div_grad/RealDiv_1 name: "gradients/dropout/div_grad/RealDiv_1"
op: "RealDiv"
input: "gradients/dropout/div_grad/Neg"
input: "keep_prob_pl"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops gradients/dropout/div_grad/RealDiv_2 name: "gradients/dropout/div_grad/RealDiv_2"
op: "RealDiv"
input: "gradients/dropout/div_grad/RealDiv_1"
input: "keep_prob_pl"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops gradients/dropout/div_grad/mul name: "gradients/dropout/div_grad/mul"
op: "Mul"
input: "gradients/dropout/mul_grad/Reshape"
input: "gradients/dropout/div_grad/RealDiv_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops gradients/dropout/div_grad/Sum_1 name: "gradients/dropout/div_grad/Sum_1"
op: "Sum"
input: "gradients/dropout/div_grad/mul"
input: "gradients/dropout/div_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

ops gradients/dropout/div_grad/Reshape_1 name: "gradients/dropout/div_grad/Reshape_1"
op: "Reshape"
input: "gradients/dropout/div_grad/Sum_1"
input: "gradients/dropout/div_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

ops gradients/Reshape_grad/Shape name: "gradients/Reshape_grad/Shape"
op: "Shape"
input: "concat"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

ops gradients/Reshape_grad/Reshape name: "gradients/Reshape_grad/Reshape"
op: "Reshape"
input: "gradients/dropout/div_grad/Reshape"
input: "gradients/Reshape_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

ops gradients/concat_grad/Rank name: "gradients/concat_grad/Rank"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 3
    }
  }
}

ops gradients/concat_grad/mod name: "gradients/concat_grad/mod"
op: "FloorMod"
input: "concat/axis"
input: "gradients/concat_grad/Rank"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

ops gradients/concat_grad/Shape name: "gradients/concat_grad/Shape"
op: "Shape"
input: "max_pooling1d/Squeeze"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

ops gradients/concat_grad/ShapeN name: "gradients/concat_grad/ShapeN"
op: "ShapeN"
input: "max_pooling1d/Squeeze"
input: "max_pooling1d_2/Squeeze"
input: "max_pooling1d_3/Squeeze"
input: "max_pooling1d_4/Squeeze"
input: "max_pooling1d_5/Squeeze"
input: "max_pooling1d_6/Squeeze"
attr {
  key: "N"
  value {
    i: 6
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

ops gradients/concat_grad/ConcatOffset name: "gradients/concat_grad/ConcatOffset"
op: "ConcatOffset"
input: "gradients/concat_grad/mod"
input: "gradients/concat_grad/ShapeN"
input: "gradients/concat_grad/ShapeN:1"
input: "gradients/concat_grad/ShapeN:2"
input: "gradients/concat_grad/ShapeN:3"
input: "gradients/concat_grad/ShapeN:4"
input: "gradients/concat_grad/ShapeN:5"
attr {
  key: "N"
  value {
    i: 6
  }
}

ops gradients/concat_grad/Slice name: "gradients/concat_grad/Slice"
op: "Slice"
input: "gradients/Reshape_grad/Reshape"
input: "gradients/concat_grad/ConcatOffset"
input: "gradients/concat_grad/ShapeN"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops gradients/concat_grad/Slice_1 name: "gradients/concat_grad/Slice_1"
op: "Slice"
input: "gradients/Reshape_grad/Reshape"
input: "gradients/concat_grad/ConcatOffset:1"
input: "gradients/concat_grad/ShapeN:1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops gradients/concat_grad/Slice_2 name: "gradients/concat_grad/Slice_2"
op: "Slice"
input: "gradients/Reshape_grad/Reshape"
input: "gradients/concat_grad/ConcatOffset:2"
input: "gradients/concat_grad/ShapeN:2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops gradients/concat_grad/Slice_3 name: "gradients/concat_grad/Slice_3"
op: "Slice"
input: "gradients/Reshape_grad/Reshape"
input: "gradients/concat_grad/ConcatOffset:3"
input: "gradients/concat_grad/ShapeN:3"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops gradients/concat_grad/Slice_4 name: "gradients/concat_grad/Slice_4"
op: "Slice"
input: "gradients/Reshape_grad/Reshape"
input: "gradients/concat_grad/ConcatOffset:4"
input: "gradients/concat_grad/ShapeN:4"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops gradients/concat_grad/Slice_5 name: "gradients/concat_grad/Slice_5"
op: "Slice"
input: "gradients/Reshape_grad/Reshape"
input: "gradients/concat_grad/ConcatOffset:5"
input: "gradients/concat_grad/ShapeN:5"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops gradients/max_pooling1d/Squeeze_grad/Shape name: "gradients/max_pooling1d/Squeeze_grad/Shape"
op: "Shape"
input: "max_pooling1d/MaxPool"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

ops gradients/max_pooling1d/Squeeze_grad/Reshape name: "gradients/max_pooling1d/Squeeze_grad/Reshape"
op: "Reshape"
input: "gradients/concat_grad/Slice"
input: "gradients/max_pooling1d/Squeeze_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

ops gradients/max_pooling1d_2/Squeeze_grad/Shape name: "gradients/max_pooling1d_2/Squeeze_grad/Shape"
op: "Shape"
input: "max_pooling1d_2/MaxPool"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

ops gradients/max_pooling1d_2/Squeeze_grad/Reshape name: "gradients/max_pooling1d_2/Squeeze_grad/Reshape"
op: "Reshape"
input: "gradients/concat_grad/Slice_1"
input: "gradients/max_pooling1d_2/Squeeze_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

ops gradients/max_pooling1d_3/Squeeze_grad/Shape name: "gradients/max_pooling1d_3/Squeeze_grad/Shape"
op: "Shape"
input: "max_pooling1d_3/MaxPool"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

ops gradients/max_pooling1d_3/Squeeze_grad/Reshape name: "gradients/max_pooling1d_3/Squeeze_grad/Reshape"
op: "Reshape"
input: "gradients/concat_grad/Slice_2"
input: "gradients/max_pooling1d_3/Squeeze_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

ops gradients/max_pooling1d_4/Squeeze_grad/Shape name: "gradients/max_pooling1d_4/Squeeze_grad/Shape"
op: "Shape"
input: "max_pooling1d_4/MaxPool"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

ops gradients/max_pooling1d_4/Squeeze_grad/Reshape name: "gradients/max_pooling1d_4/Squeeze_grad/Reshape"
op: "Reshape"
input: "gradients/concat_grad/Slice_3"
input: "gradients/max_pooling1d_4/Squeeze_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

ops gradients/max_pooling1d_5/Squeeze_grad/Shape name: "gradients/max_pooling1d_5/Squeeze_grad/Shape"
op: "Shape"
input: "max_pooling1d_5/MaxPool"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

ops gradients/max_pooling1d_5/Squeeze_grad/Reshape name: "gradients/max_pooling1d_5/Squeeze_grad/Reshape"
op: "Reshape"
input: "gradients/concat_grad/Slice_4"
input: "gradients/max_pooling1d_5/Squeeze_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

ops gradients/max_pooling1d_6/Squeeze_grad/Shape name: "gradients/max_pooling1d_6/Squeeze_grad/Shape"
op: "Shape"
input: "max_pooling1d_6/MaxPool"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

ops gradients/max_pooling1d_6/Squeeze_grad/Reshape name: "gradients/max_pooling1d_6/Squeeze_grad/Reshape"
op: "Reshape"
input: "gradients/concat_grad/Slice_5"
input: "gradients/max_pooling1d_6/Squeeze_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

ops gradients/max_pooling1d/MaxPool_grad/MaxPoolGrad name: "gradients/max_pooling1d/MaxPool_grad/MaxPoolGrad"
op: "MaxPoolGrad"
input: "max_pooling1d/ExpandDims"
input: "max_pooling1d/MaxPool"
input: "gradients/max_pooling1d/Squeeze_grad/Reshape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "ksize"
  value {
    list {
      i: 1
      i: 49
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "VALID"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}

ops gradients/max_pooling1d_2/MaxPool_grad/MaxPoolGrad name: "gradients/max_pooling1d_2/MaxPool_grad/MaxPoolGrad"
op: "MaxPoolGrad"
input: "max_pooling1d_2/ExpandDims"
input: "max_pooling1d_2/MaxPool"
input: "gradients/max_pooling1d_2/Squeeze_grad/Reshape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "ksize"
  value {
    list {
      i: 1
      i: 48
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "VALID"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}

ops gradients/max_pooling1d_3/MaxPool_grad/MaxPoolGrad name: "gradients/max_pooling1d_3/MaxPool_grad/MaxPoolGrad"
op: "MaxPoolGrad"
input: "max_pooling1d_3/ExpandDims"
input: "max_pooling1d_3/MaxPool"
input: "gradients/max_pooling1d_3/Squeeze_grad/Reshape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "ksize"
  value {
    list {
      i: 1
      i: 47
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "VALID"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}

ops gradients/max_pooling1d_4/MaxPool_grad/MaxPoolGrad name: "gradients/max_pooling1d_4/MaxPool_grad/MaxPoolGrad"
op: "MaxPoolGrad"
input: "max_pooling1d_4/ExpandDims"
input: "max_pooling1d_4/MaxPool"
input: "gradients/max_pooling1d_4/Squeeze_grad/Reshape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "ksize"
  value {
    list {
      i: 1
      i: 499
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "VALID"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}

ops gradients/max_pooling1d_5/MaxPool_grad/MaxPoolGrad name: "gradients/max_pooling1d_5/MaxPool_grad/MaxPoolGrad"
op: "MaxPoolGrad"
input: "max_pooling1d_5/ExpandDims"
input: "max_pooling1d_5/MaxPool"
input: "gradients/max_pooling1d_5/Squeeze_grad/Reshape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "ksize"
  value {
    list {
      i: 1
      i: 498
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "VALID"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}

ops gradients/max_pooling1d_6/MaxPool_grad/MaxPoolGrad name: "gradients/max_pooling1d_6/MaxPool_grad/MaxPoolGrad"
op: "MaxPoolGrad"
input: "max_pooling1d_6/ExpandDims"
input: "max_pooling1d_6/MaxPool"
input: "gradients/max_pooling1d_6/Squeeze_grad/Reshape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "ksize"
  value {
    list {
      i: 1
      i: 497
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "VALID"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}

ops gradients/max_pooling1d/ExpandDims_grad/Shape name: "gradients/max_pooling1d/ExpandDims_grad/Shape"
op: "Shape"
input: "Relu"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

ops gradients/max_pooling1d/ExpandDims_grad/Reshape name: "gradients/max_pooling1d/ExpandDims_grad/Reshape"
op: "Reshape"
input: "gradients/max_pooling1d/MaxPool_grad/MaxPoolGrad"
input: "gradients/max_pooling1d/ExpandDims_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

ops gradients/max_pooling1d_2/ExpandDims_grad/Shape name: "gradients/max_pooling1d_2/ExpandDims_grad/Shape"
op: "Shape"
input: "Relu_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

ops gradients/max_pooling1d_2/ExpandDims_grad/Reshape name: "gradients/max_pooling1d_2/ExpandDims_grad/Reshape"
op: "Reshape"
input: "gradients/max_pooling1d_2/MaxPool_grad/MaxPoolGrad"
input: "gradients/max_pooling1d_2/ExpandDims_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

ops gradients/max_pooling1d_3/ExpandDims_grad/Shape name: "gradients/max_pooling1d_3/ExpandDims_grad/Shape"
op: "Shape"
input: "Relu_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

ops gradients/max_pooling1d_3/ExpandDims_grad/Reshape name: "gradients/max_pooling1d_3/ExpandDims_grad/Reshape"
op: "Reshape"
input: "gradients/max_pooling1d_3/MaxPool_grad/MaxPoolGrad"
input: "gradients/max_pooling1d_3/ExpandDims_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

ops gradients/max_pooling1d_4/ExpandDims_grad/Shape name: "gradients/max_pooling1d_4/ExpandDims_grad/Shape"
op: "Shape"
input: "Relu_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

ops gradients/max_pooling1d_4/ExpandDims_grad/Reshape name: "gradients/max_pooling1d_4/ExpandDims_grad/Reshape"
op: "Reshape"
input: "gradients/max_pooling1d_4/MaxPool_grad/MaxPoolGrad"
input: "gradients/max_pooling1d_4/ExpandDims_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

ops gradients/max_pooling1d_5/ExpandDims_grad/Shape name: "gradients/max_pooling1d_5/ExpandDims_grad/Shape"
op: "Shape"
input: "Relu_4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

ops gradients/max_pooling1d_5/ExpandDims_grad/Reshape name: "gradients/max_pooling1d_5/ExpandDims_grad/Reshape"
op: "Reshape"
input: "gradients/max_pooling1d_5/MaxPool_grad/MaxPoolGrad"
input: "gradients/max_pooling1d_5/ExpandDims_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

ops gradients/max_pooling1d_6/ExpandDims_grad/Shape name: "gradients/max_pooling1d_6/ExpandDims_grad/Shape"
op: "Shape"
input: "Relu_5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

ops gradients/max_pooling1d_6/ExpandDims_grad/Reshape name: "gradients/max_pooling1d_6/ExpandDims_grad/Reshape"
op: "Reshape"
input: "gradients/max_pooling1d_6/MaxPool_grad/MaxPoolGrad"
input: "gradients/max_pooling1d_6/ExpandDims_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

ops gradients/Relu_grad/ReluGrad name: "gradients/Relu_grad/ReluGrad"
op: "ReluGrad"
input: "gradients/max_pooling1d/ExpandDims_grad/Reshape"
input: "Relu"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops gradients/Relu_1_grad/ReluGrad name: "gradients/Relu_1_grad/ReluGrad"
op: "ReluGrad"
input: "gradients/max_pooling1d_2/ExpandDims_grad/Reshape"
input: "Relu_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops gradients/Relu_2_grad/ReluGrad name: "gradients/Relu_2_grad/ReluGrad"
op: "ReluGrad"
input: "gradients/max_pooling1d_3/ExpandDims_grad/Reshape"
input: "Relu_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops gradients/Relu_3_grad/ReluGrad name: "gradients/Relu_3_grad/ReluGrad"
op: "ReluGrad"
input: "gradients/max_pooling1d_4/ExpandDims_grad/Reshape"
input: "Relu_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops gradients/Relu_4_grad/ReluGrad name: "gradients/Relu_4_grad/ReluGrad"
op: "ReluGrad"
input: "gradients/max_pooling1d_5/ExpandDims_grad/Reshape"
input: "Relu_4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops gradients/Relu_5_grad/ReluGrad name: "gradients/Relu_5_grad/ReluGrad"
op: "ReluGrad"
input: "gradients/max_pooling1d_6/ExpandDims_grad/Reshape"
input: "Relu_5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops gradients/BiasAdd_grad/BiasAddGrad name: "gradients/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/Relu_grad/ReluGrad"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

ops gradients/BiasAdd_1_grad/BiasAddGrad name: "gradients/BiasAdd_1_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/Relu_1_grad/ReluGrad"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

ops gradients/BiasAdd_2_grad/BiasAddGrad name: "gradients/BiasAdd_2_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/Relu_2_grad/ReluGrad"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

ops gradients/BiasAdd_3_grad/BiasAddGrad name: "gradients/BiasAdd_3_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/Relu_3_grad/ReluGrad"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

ops gradients/BiasAdd_4_grad/BiasAddGrad name: "gradients/BiasAdd_4_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/Relu_4_grad/ReluGrad"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

ops gradients/BiasAdd_5_grad/BiasAddGrad name: "gradients/BiasAdd_5_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/Relu_5_grad/ReluGrad"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

ops gradients/conv1d/BiasAdd_grad/BiasAddGrad name: "gradients/conv1d/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/Relu_grad/ReluGrad"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

ops gradients/AddN_5 name: "gradients/AddN_5"
op: "AddN"
input: "gradients/L2Loss_grad/mul"
input: "gradients/BiasAdd_grad/BiasAddGrad"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/L2Loss_grad/mul"
    }
  }
}

ops gradients/conv1d_2/BiasAdd_grad/BiasAddGrad name: "gradients/conv1d_2/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/Relu_1_grad/ReluGrad"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

ops gradients/AddN_6 name: "gradients/AddN_6"
op: "AddN"
input: "gradients/L2Loss_2_grad/mul"
input: "gradients/BiasAdd_1_grad/BiasAddGrad"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/L2Loss_2_grad/mul"
    }
  }
}

ops gradients/conv1d_3/BiasAdd_grad/BiasAddGrad name: "gradients/conv1d_3/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/Relu_2_grad/ReluGrad"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

ops gradients/conv1d_4/BiasAdd_grad/BiasAddGrad name: "gradients/conv1d_4/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/Relu_3_grad/ReluGrad"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

ops gradients/conv1d_5/BiasAdd_grad/BiasAddGrad name: "gradients/conv1d_5/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/Relu_4_grad/ReluGrad"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

ops gradients/conv1d_6/BiasAdd_grad/BiasAddGrad name: "gradients/conv1d_6/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/Relu_5_grad/ReluGrad"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

ops gradients/AddN_7 name: "gradients/AddN_7"
op: "AddN"
input: "gradients/L2Loss_4_grad/mul"
input: "gradients/BiasAdd_2_grad/BiasAddGrad"
input: "gradients/BiasAdd_3_grad/BiasAddGrad"
input: "gradients/BiasAdd_4_grad/BiasAddGrad"
input: "gradients/BiasAdd_5_grad/BiasAddGrad"
attr {
  key: "N"
  value {
    i: 5
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/L2Loss_4_grad/mul"
    }
  }
}

ops gradients/conv1d/conv1d_2/Squeeze_grad/Shape name: "gradients/conv1d/conv1d_2/Squeeze_grad/Shape"
op: "Shape"
input: "conv1d/conv1d_2/Conv2D"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

ops gradients/conv1d/conv1d_2/Squeeze_grad/Reshape name: "gradients/conv1d/conv1d_2/Squeeze_grad/Reshape"
op: "Reshape"
input: "gradients/Relu_grad/ReluGrad"
input: "gradients/conv1d/conv1d_2/Squeeze_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

ops gradients/conv1d_2/conv1d/Squeeze_grad/Shape name: "gradients/conv1d_2/conv1d/Squeeze_grad/Shape"
op: "Shape"
input: "conv1d_2/conv1d/Conv2D"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

ops gradients/conv1d_2/conv1d/Squeeze_grad/Reshape name: "gradients/conv1d_2/conv1d/Squeeze_grad/Reshape"
op: "Reshape"
input: "gradients/Relu_1_grad/ReluGrad"
input: "gradients/conv1d_2/conv1d/Squeeze_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

ops gradients/conv1d_3/conv1d/Squeeze_grad/Shape name: "gradients/conv1d_3/conv1d/Squeeze_grad/Shape"
op: "Shape"
input: "conv1d_3/conv1d/Conv2D"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

ops gradients/conv1d_3/conv1d/Squeeze_grad/Reshape name: "gradients/conv1d_3/conv1d/Squeeze_grad/Reshape"
op: "Reshape"
input: "gradients/Relu_2_grad/ReluGrad"
input: "gradients/conv1d_3/conv1d/Squeeze_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

ops gradients/conv1d_4/conv1d/Squeeze_grad/Shape name: "gradients/conv1d_4/conv1d/Squeeze_grad/Shape"
op: "Shape"
input: "conv1d_4/conv1d/Conv2D"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

ops gradients/conv1d_4/conv1d/Squeeze_grad/Reshape name: "gradients/conv1d_4/conv1d/Squeeze_grad/Reshape"
op: "Reshape"
input: "gradients/Relu_3_grad/ReluGrad"
input: "gradients/conv1d_4/conv1d/Squeeze_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

ops gradients/conv1d_5/conv1d/Squeeze_grad/Shape name: "gradients/conv1d_5/conv1d/Squeeze_grad/Shape"
op: "Shape"
input: "conv1d_5/conv1d/Conv2D"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

ops gradients/conv1d_5/conv1d/Squeeze_grad/Reshape name: "gradients/conv1d_5/conv1d/Squeeze_grad/Reshape"
op: "Reshape"
input: "gradients/Relu_4_grad/ReluGrad"
input: "gradients/conv1d_5/conv1d/Squeeze_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

ops gradients/conv1d_6/conv1d/Squeeze_grad/Shape name: "gradients/conv1d_6/conv1d/Squeeze_grad/Shape"
op: "Shape"
input: "conv1d_6/conv1d/Conv2D"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

ops gradients/conv1d_6/conv1d/Squeeze_grad/Reshape name: "gradients/conv1d_6/conv1d/Squeeze_grad/Reshape"
op: "Reshape"
input: "gradients/Relu_5_grad/ReluGrad"
input: "gradients/conv1d_6/conv1d/Squeeze_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

ops gradients/conv1d/conv1d_2/Conv2D_grad/ShapeN name: "gradients/conv1d/conv1d_2/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "conv1d/conv1d_2/ExpandDims"
input: "conv1d/conv1d_2/ExpandDims_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

ops gradients/conv1d/conv1d_2/Conv2D_grad/Const name: "gradients/conv1d/conv1d_2/Conv2D_grad/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\002\000\000\000,\001\000\000\200\000\000\000"
    }
  }
}

ops gradients/conv1d/conv1d_2/Conv2D_grad/Conv2DBackpropInput name: "gradients/conv1d/conv1d_2/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/conv1d/conv1d_2/Conv2D_grad/ShapeN"
input: "conv1d/conv1d_2/ExpandDims_1"
input: "gradients/conv1d/conv1d_2/Squeeze_grad/Reshape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "VALID"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

ops gradients/conv1d/conv1d_2/Conv2D_grad/Conv2DBackpropFilter name: "gradients/conv1d/conv1d_2/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "conv1d/conv1d_2/ExpandDims"
input: "gradients/conv1d/conv1d_2/Conv2D_grad/Const"
input: "gradients/conv1d/conv1d_2/Squeeze_grad/Reshape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "VALID"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

ops gradients/conv1d_2/conv1d/Conv2D_grad/ShapeN name: "gradients/conv1d_2/conv1d/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "conv1d_2/conv1d/ExpandDims"
input: "conv1d_2/conv1d/ExpandDims_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

ops gradients/conv1d_2/conv1d/Conv2D_grad/Const name: "gradients/conv1d_2/conv1d/Conv2D_grad/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\003\000\000\000,\001\000\000\200\000\000\000"
    }
  }
}

ops gradients/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput name: "gradients/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/conv1d_2/conv1d/Conv2D_grad/ShapeN"
input: "conv1d_2/conv1d/ExpandDims_1"
input: "gradients/conv1d_2/conv1d/Squeeze_grad/Reshape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "VALID"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

ops gradients/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter name: "gradients/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "conv1d_2/conv1d/ExpandDims"
input: "gradients/conv1d_2/conv1d/Conv2D_grad/Const"
input: "gradients/conv1d_2/conv1d/Squeeze_grad/Reshape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "VALID"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

ops gradients/conv1d_3/conv1d/Conv2D_grad/ShapeN name: "gradients/conv1d_3/conv1d/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "conv1d_3/conv1d/ExpandDims"
input: "conv1d_3/conv1d/ExpandDims_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

ops gradients/conv1d_3/conv1d/Conv2D_grad/Const name: "gradients/conv1d_3/conv1d/Conv2D_grad/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\004\000\000\000,\001\000\000\200\000\000\000"
    }
  }
}

ops gradients/conv1d_3/conv1d/Conv2D_grad/Conv2DBackpropInput name: "gradients/conv1d_3/conv1d/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/conv1d_3/conv1d/Conv2D_grad/ShapeN"
input: "conv1d_3/conv1d/ExpandDims_1"
input: "gradients/conv1d_3/conv1d/Squeeze_grad/Reshape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "VALID"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

ops gradients/conv1d_3/conv1d/Conv2D_grad/Conv2DBackpropFilter name: "gradients/conv1d_3/conv1d/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "conv1d_3/conv1d/ExpandDims"
input: "gradients/conv1d_3/conv1d/Conv2D_grad/Const"
input: "gradients/conv1d_3/conv1d/Squeeze_grad/Reshape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "VALID"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

ops gradients/conv1d_4/conv1d/Conv2D_grad/ShapeN name: "gradients/conv1d_4/conv1d/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "conv1d_4/conv1d/ExpandDims"
input: "conv1d_4/conv1d/ExpandDims_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

ops gradients/conv1d_4/conv1d/Conv2D_grad/Const name: "gradients/conv1d_4/conv1d/Conv2D_grad/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\002\000\000\000,\001\000\000\200\000\000\000"
    }
  }
}

ops gradients/conv1d_4/conv1d/Conv2D_grad/Conv2DBackpropInput name: "gradients/conv1d_4/conv1d/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/conv1d_4/conv1d/Conv2D_grad/ShapeN"
input: "conv1d_4/conv1d/ExpandDims_1"
input: "gradients/conv1d_4/conv1d/Squeeze_grad/Reshape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "VALID"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

ops gradients/conv1d_4/conv1d/Conv2D_grad/Conv2DBackpropFilter name: "gradients/conv1d_4/conv1d/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "conv1d_4/conv1d/ExpandDims"
input: "gradients/conv1d_4/conv1d/Conv2D_grad/Const"
input: "gradients/conv1d_4/conv1d/Squeeze_grad/Reshape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "VALID"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

ops gradients/conv1d_5/conv1d/Conv2D_grad/ShapeN name: "gradients/conv1d_5/conv1d/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "conv1d_5/conv1d/ExpandDims"
input: "conv1d_5/conv1d/ExpandDims_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

ops gradients/conv1d_5/conv1d/Conv2D_grad/Const name: "gradients/conv1d_5/conv1d/Conv2D_grad/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\003\000\000\000,\001\000\000\200\000\000\000"
    }
  }
}

ops gradients/conv1d_5/conv1d/Conv2D_grad/Conv2DBackpropInput name: "gradients/conv1d_5/conv1d/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/conv1d_5/conv1d/Conv2D_grad/ShapeN"
input: "conv1d_5/conv1d/ExpandDims_1"
input: "gradients/conv1d_5/conv1d/Squeeze_grad/Reshape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "VALID"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

ops gradients/conv1d_5/conv1d/Conv2D_grad/Conv2DBackpropFilter name: "gradients/conv1d_5/conv1d/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "conv1d_5/conv1d/ExpandDims"
input: "gradients/conv1d_5/conv1d/Conv2D_grad/Const"
input: "gradients/conv1d_5/conv1d/Squeeze_grad/Reshape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "VALID"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

ops gradients/conv1d_6/conv1d/Conv2D_grad/ShapeN name: "gradients/conv1d_6/conv1d/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "conv1d_6/conv1d/ExpandDims"
input: "conv1d_6/conv1d/ExpandDims_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

ops gradients/conv1d_6/conv1d/Conv2D_grad/Const name: "gradients/conv1d_6/conv1d/Conv2D_grad/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\004\000\000\000,\001\000\000\200\000\000\000"
    }
  }
}

ops gradients/conv1d_6/conv1d/Conv2D_grad/Conv2DBackpropInput name: "gradients/conv1d_6/conv1d/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/conv1d_6/conv1d/Conv2D_grad/ShapeN"
input: "conv1d_6/conv1d/ExpandDims_1"
input: "gradients/conv1d_6/conv1d/Squeeze_grad/Reshape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "VALID"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

ops gradients/conv1d_6/conv1d/Conv2D_grad/Conv2DBackpropFilter name: "gradients/conv1d_6/conv1d/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "conv1d_6/conv1d/ExpandDims"
input: "gradients/conv1d_6/conv1d/Conv2D_grad/Const"
input: "gradients/conv1d_6/conv1d/Squeeze_grad/Reshape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "VALID"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

ops gradients/conv1d/conv1d_2/ExpandDims_1_grad/Shape name: "gradients/conv1d/conv1d_2/ExpandDims_1_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\002\000\000\000,\001\000\000\200\000\000\000"
    }
  }
}

ops gradients/conv1d/conv1d_2/ExpandDims_1_grad/Reshape name: "gradients/conv1d/conv1d_2/ExpandDims_1_grad/Reshape"
op: "Reshape"
input: "gradients/conv1d/conv1d_2/Conv2D_grad/Conv2DBackpropFilter"
input: "gradients/conv1d/conv1d_2/ExpandDims_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

ops gradients/conv1d_2/conv1d/ExpandDims_1_grad/Shape name: "gradients/conv1d_2/conv1d/ExpandDims_1_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\003\000\000\000,\001\000\000\200\000\000\000"
    }
  }
}

ops gradients/conv1d_2/conv1d/ExpandDims_1_grad/Reshape name: "gradients/conv1d_2/conv1d/ExpandDims_1_grad/Reshape"
op: "Reshape"
input: "gradients/conv1d_2/conv1d/Conv2D_grad/Conv2DBackpropFilter"
input: "gradients/conv1d_2/conv1d/ExpandDims_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

ops gradients/conv1d_3/conv1d/ExpandDims_1_grad/Shape name: "gradients/conv1d_3/conv1d/ExpandDims_1_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\004\000\000\000,\001\000\000\200\000\000\000"
    }
  }
}

ops gradients/conv1d_3/conv1d/ExpandDims_1_grad/Reshape name: "gradients/conv1d_3/conv1d/ExpandDims_1_grad/Reshape"
op: "Reshape"
input: "gradients/conv1d_3/conv1d/Conv2D_grad/Conv2DBackpropFilter"
input: "gradients/conv1d_3/conv1d/ExpandDims_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

ops gradients/conv1d_4/conv1d/ExpandDims_1_grad/Shape name: "gradients/conv1d_4/conv1d/ExpandDims_1_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\002\000\000\000,\001\000\000\200\000\000\000"
    }
  }
}

ops gradients/conv1d_4/conv1d/ExpandDims_1_grad/Reshape name: "gradients/conv1d_4/conv1d/ExpandDims_1_grad/Reshape"
op: "Reshape"
input: "gradients/conv1d_4/conv1d/Conv2D_grad/Conv2DBackpropFilter"
input: "gradients/conv1d_4/conv1d/ExpandDims_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

ops gradients/conv1d_5/conv1d/ExpandDims_1_grad/Shape name: "gradients/conv1d_5/conv1d/ExpandDims_1_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\003\000\000\000,\001\000\000\200\000\000\000"
    }
  }
}

ops gradients/conv1d_5/conv1d/ExpandDims_1_grad/Reshape name: "gradients/conv1d_5/conv1d/ExpandDims_1_grad/Reshape"
op: "Reshape"
input: "gradients/conv1d_5/conv1d/Conv2D_grad/Conv2DBackpropFilter"
input: "gradients/conv1d_5/conv1d/ExpandDims_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

ops gradients/conv1d_6/conv1d/ExpandDims_1_grad/Shape name: "gradients/conv1d_6/conv1d/ExpandDims_1_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\004\000\000\000,\001\000\000\200\000\000\000"
    }
  }
}

ops gradients/conv1d_6/conv1d/ExpandDims_1_grad/Reshape name: "gradients/conv1d_6/conv1d/ExpandDims_1_grad/Reshape"
op: "Reshape"
input: "gradients/conv1d_6/conv1d/Conv2D_grad/Conv2DBackpropFilter"
input: "gradients/conv1d_6/conv1d/ExpandDims_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

ops gradients/AddN_8 name: "gradients/AddN_8"
op: "AddN"
input: "gradients/L2Loss_1_grad/mul"
input: "gradients/conv1d/conv1d_2/ExpandDims_1_grad/Reshape"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/L2Loss_1_grad/mul"
    }
  }
}

ops gradients/AddN_9 name: "gradients/AddN_9"
op: "AddN"
input: "gradients/L2Loss_3_grad/mul"
input: "gradients/conv1d_2/conv1d/ExpandDims_1_grad/Reshape"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/L2Loss_3_grad/mul"
    }
  }
}

ops gradients/AddN_10 name: "gradients/AddN_10"
op: "AddN"
input: "gradients/L2Loss_5_grad/mul"
input: "gradients/conv1d_3/conv1d/ExpandDims_1_grad/Reshape"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/L2Loss_5_grad/mul"
    }
  }
}

ops gradients/AddN_11 name: "gradients/AddN_11"
op: "AddN"
input: "gradients/L2Loss_7_grad/mul"
input: "gradients/conv1d_4/conv1d/ExpandDims_1_grad/Reshape"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/L2Loss_7_grad/mul"
    }
  }
}

ops gradients/AddN_12 name: "gradients/AddN_12"
op: "AddN"
input: "gradients/L2Loss_9_grad/mul"
input: "gradients/conv1d_5/conv1d/ExpandDims_1_grad/Reshape"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/L2Loss_9_grad/mul"
    }
  }
}

ops gradients/AddN_13 name: "gradients/AddN_13"
op: "AddN"
input: "gradients/L2Loss_11_grad/mul"
input: "gradients/conv1d_6/conv1d/ExpandDims_1_grad/Reshape"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/L2Loss_11_grad/mul"
    }
  }
}

ops global_norm/L2Loss name: "global_norm/L2Loss"
op: "L2Loss"
input: "gradients/AddN_5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/L2Loss_grad/mul"
    }
  }
}

ops global_norm/L2Loss_1 name: "global_norm/L2Loss_1"
op: "L2Loss"
input: "gradients/AddN_8"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/L2Loss_1_grad/mul"
    }
  }
}

ops global_norm/L2Loss_2 name: "global_norm/L2Loss_2"
op: "L2Loss"
input: "gradients/conv1d/BiasAdd_grad/BiasAddGrad"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/conv1d/BiasAdd_grad/BiasAddGrad"
    }
  }
}

ops global_norm/L2Loss_3 name: "global_norm/L2Loss_3"
op: "L2Loss"
input: "gradients/AddN_6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/L2Loss_2_grad/mul"
    }
  }
}

ops global_norm/L2Loss_4 name: "global_norm/L2Loss_4"
op: "L2Loss"
input: "gradients/AddN_9"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/L2Loss_3_grad/mul"
    }
  }
}

ops global_norm/L2Loss_5 name: "global_norm/L2Loss_5"
op: "L2Loss"
input: "gradients/conv1d_2/BiasAdd_grad/BiasAddGrad"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/conv1d_2/BiasAdd_grad/BiasAddGrad"
    }
  }
}

ops global_norm/L2Loss_6 name: "global_norm/L2Loss_6"
op: "L2Loss"
input: "gradients/AddN_7"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/L2Loss_4_grad/mul"
    }
  }
}

ops global_norm/L2Loss_7 name: "global_norm/L2Loss_7"
op: "L2Loss"
input: "gradients/AddN_10"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/L2Loss_5_grad/mul"
    }
  }
}

ops global_norm/L2Loss_8 name: "global_norm/L2Loss_8"
op: "L2Loss"
input: "gradients/conv1d_3/BiasAdd_grad/BiasAddGrad"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/conv1d_3/BiasAdd_grad/BiasAddGrad"
    }
  }
}

ops global_norm/L2Loss_9 name: "global_norm/L2Loss_9"
op: "L2Loss"
input: "gradients/L2Loss_6_grad/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/L2Loss_6_grad/mul"
    }
  }
}

ops global_norm/L2Loss_10 name: "global_norm/L2Loss_10"
op: "L2Loss"
input: "gradients/AddN_11"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/L2Loss_7_grad/mul"
    }
  }
}

ops global_norm/L2Loss_11 name: "global_norm/L2Loss_11"
op: "L2Loss"
input: "gradients/conv1d_4/BiasAdd_grad/BiasAddGrad"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/conv1d_4/BiasAdd_grad/BiasAddGrad"
    }
  }
}

ops global_norm/L2Loss_12 name: "global_norm/L2Loss_12"
op: "L2Loss"
input: "gradients/L2Loss_8_grad/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/L2Loss_8_grad/mul"
    }
  }
}

ops global_norm/L2Loss_13 name: "global_norm/L2Loss_13"
op: "L2Loss"
input: "gradients/AddN_12"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/L2Loss_9_grad/mul"
    }
  }
}

ops global_norm/L2Loss_14 name: "global_norm/L2Loss_14"
op: "L2Loss"
input: "gradients/conv1d_5/BiasAdd_grad/BiasAddGrad"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/conv1d_5/BiasAdd_grad/BiasAddGrad"
    }
  }
}

ops global_norm/L2Loss_15 name: "global_norm/L2Loss_15"
op: "L2Loss"
input: "gradients/L2Loss_10_grad/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/L2Loss_10_grad/mul"
    }
  }
}

ops global_norm/L2Loss_16 name: "global_norm/L2Loss_16"
op: "L2Loss"
input: "gradients/AddN_13"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/L2Loss_11_grad/mul"
    }
  }
}

ops global_norm/L2Loss_17 name: "global_norm/L2Loss_17"
op: "L2Loss"
input: "gradients/conv1d_6/BiasAdd_grad/BiasAddGrad"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/conv1d_6/BiasAdd_grad/BiasAddGrad"
    }
  }
}

ops global_norm/L2Loss_18 name: "global_norm/L2Loss_18"
op: "L2Loss"
input: "gradients/AddN_4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/L2Loss_12_grad/mul"
    }
  }
}

ops global_norm/L2Loss_19 name: "global_norm/L2Loss_19"
op: "L2Loss"
input: "gradients/dense/BiasAdd_grad/BiasAddGrad"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/dense/BiasAdd_grad/BiasAddGrad"
    }
  }
}

ops global_norm/L2Loss_20 name: "global_norm/L2Loss_20"
op: "L2Loss"
input: "gradients/AddN"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/L2Loss_13_grad/mul"
    }
  }
}

ops global_norm/L2Loss_21 name: "global_norm/L2Loss_21"
op: "L2Loss"
input: "gradients/fully_connected/BiasAdd_grad/BiasAddGrad"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/fully_connected/BiasAdd_grad/BiasAddGrad"
    }
  }
}

ops global_norm/L2Loss_22 name: "global_norm/L2Loss_22"
op: "L2Loss"
input: "gradients/AddN_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/L2Loss_14_grad/mul"
    }
  }
}

ops global_norm/L2Loss_23 name: "global_norm/L2Loss_23"
op: "L2Loss"
input: "gradients/fully_connected_1/BiasAdd_grad/BiasAddGrad"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/fully_connected_1/BiasAdd_grad/BiasAddGrad"
    }
  }
}

ops global_norm/L2Loss_24 name: "global_norm/L2Loss_24"
op: "L2Loss"
input: "gradients/AddN_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/L2Loss_15_grad/mul"
    }
  }
}

ops global_norm/L2Loss_25 name: "global_norm/L2Loss_25"
op: "L2Loss"
input: "gradients/fully_connected_2/BiasAdd_grad/BiasAddGrad"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/fully_connected_2/BiasAdd_grad/BiasAddGrad"
    }
  }
}

ops global_norm/stack name: "global_norm/stack"
op: "Pack"
input: "global_norm/L2Loss"
input: "global_norm/L2Loss_1"
input: "global_norm/L2Loss_2"
input: "global_norm/L2Loss_3"
input: "global_norm/L2Loss_4"
input: "global_norm/L2Loss_5"
input: "global_norm/L2Loss_6"
input: "global_norm/L2Loss_7"
input: "global_norm/L2Loss_8"
input: "global_norm/L2Loss_9"
input: "global_norm/L2Loss_10"
input: "global_norm/L2Loss_11"
input: "global_norm/L2Loss_12"
input: "global_norm/L2Loss_13"
input: "global_norm/L2Loss_14"
input: "global_norm/L2Loss_15"
input: "global_norm/L2Loss_16"
input: "global_norm/L2Loss_17"
input: "global_norm/L2Loss_18"
input: "global_norm/L2Loss_19"
input: "global_norm/L2Loss_20"
input: "global_norm/L2Loss_21"
input: "global_norm/L2Loss_22"
input: "global_norm/L2Loss_23"
input: "global_norm/L2Loss_24"
input: "global_norm/L2Loss_25"
attr {
  key: "N"
  value {
    i: 26
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "axis"
  value {
    i: 0
  }
}

ops global_norm/Const name: "global_norm/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}

ops global_norm/Sum name: "global_norm/Sum"
op: "Sum"
input: "global_norm/stack"
input: "global_norm/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

ops global_norm/Const_1 name: "global_norm/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 2.0
    }
  }
}

ops global_norm/mul name: "global_norm/mul"
op: "Mul"
input: "global_norm/Sum"
input: "global_norm/Const_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops global_norm/global_norm name: "global_norm/global_norm"
op: "Sqrt"
input: "global_norm/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops clip_by_global_norm/truediv/x name: "clip_by_global_norm/truediv/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

ops clip_by_global_norm/truediv name: "clip_by_global_norm/truediv"
op: "RealDiv"
input: "clip_by_global_norm/truediv/x"
input: "global_norm/global_norm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops clip_by_global_norm/Const name: "clip_by_global_norm/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

ops clip_by_global_norm/truediv_1/y name: "clip_by_global_norm/truediv_1/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 5.0
    }
  }
}

ops clip_by_global_norm/truediv_1 name: "clip_by_global_norm/truediv_1"
op: "RealDiv"
input: "clip_by_global_norm/Const"
input: "clip_by_global_norm/truediv_1/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops clip_by_global_norm/Minimum name: "clip_by_global_norm/Minimum"
op: "Minimum"
input: "clip_by_global_norm/truediv"
input: "clip_by_global_norm/truediv_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops clip_by_global_norm/mul/x name: "clip_by_global_norm/mul/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 5.0
    }
  }
}

ops clip_by_global_norm/mul name: "clip_by_global_norm/mul"
op: "Mul"
input: "clip_by_global_norm/mul/x"
input: "clip_by_global_norm/Minimum"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

ops clip_by_global_norm/mul_1 name: "clip_by_global_norm/mul_1"
op: "Mul"
input: "gradients/AddN_5"
input: "clip_by_global_norm/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/L2Loss_grad/mul"
    }
  }
}

ops clip_by_global_norm/clip_by_global_norm/_0 name: "clip_by_global_norm/clip_by_global_norm/_0"
op: "Identity"
input: "clip_by_global_norm/mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/L2Loss_grad/mul"
    }
  }
}

ops clip_by_global_norm/mul_2 name: "clip_by_global_norm/mul_2"
op: "Mul"
input: "gradients/AddN_8"
input: "clip_by_global_norm/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/L2Loss_1_grad/mul"
    }
  }
}

ops clip_by_global_norm/clip_by_global_norm/_1 name: "clip_by_global_norm/clip_by_global_norm/_1"
op: "Identity"
input: "clip_by_global_norm/mul_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/L2Loss_1_grad/mul"
    }
  }
}

ops clip_by_global_norm/mul_3 name: "clip_by_global_norm/mul_3"
op: "Mul"
input: "gradients/conv1d/BiasAdd_grad/BiasAddGrad"
input: "clip_by_global_norm/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/conv1d/BiasAdd_grad/BiasAddGrad"
    }
  }
}

ops clip_by_global_norm/clip_by_global_norm/_2 name: "clip_by_global_norm/clip_by_global_norm/_2"
op: "Identity"
input: "clip_by_global_norm/mul_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/conv1d/BiasAdd_grad/BiasAddGrad"
    }
  }
}

ops clip_by_global_norm/mul_4 name: "clip_by_global_norm/mul_4"
op: "Mul"
input: "gradients/AddN_6"
input: "clip_by_global_norm/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/L2Loss_2_grad/mul"
    }
  }
}

ops clip_by_global_norm/clip_by_global_norm/_3 name: "clip_by_global_norm/clip_by_global_norm/_3"
op: "Identity"
input: "clip_by_global_norm/mul_4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/L2Loss_2_grad/mul"
    }
  }
}

ops clip_by_global_norm/mul_5 name: "clip_by_global_norm/mul_5"
op: "Mul"
input: "gradients/AddN_9"
input: "clip_by_global_norm/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/L2Loss_3_grad/mul"
    }
  }
}

ops clip_by_global_norm/clip_by_global_norm/_4 name: "clip_by_global_norm/clip_by_global_norm/_4"
op: "Identity"
input: "clip_by_global_norm/mul_5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/L2Loss_3_grad/mul"
    }
  }
}

ops clip_by_global_norm/mul_6 name: "clip_by_global_norm/mul_6"
op: "Mul"
input: "gradients/conv1d_2/BiasAdd_grad/BiasAddGrad"
input: "clip_by_global_norm/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/conv1d_2/BiasAdd_grad/BiasAddGrad"
    }
  }
}

ops clip_by_global_norm/clip_by_global_norm/_5 name: "clip_by_global_norm/clip_by_global_norm/_5"
op: "Identity"
input: "clip_by_global_norm/mul_6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/conv1d_2/BiasAdd_grad/BiasAddGrad"
    }
  }
}

ops clip_by_global_norm/mul_7 name: "clip_by_global_norm/mul_7"
op: "Mul"
input: "gradients/AddN_7"
input: "clip_by_global_norm/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/L2Loss_4_grad/mul"
    }
  }
}

ops clip_by_global_norm/clip_by_global_norm/_6 name: "clip_by_global_norm/clip_by_global_norm/_6"
op: "Identity"
input: "clip_by_global_norm/mul_7"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/L2Loss_4_grad/mul"
    }
  }
}

ops clip_by_global_norm/mul_8 name: "clip_by_global_norm/mul_8"
op: "Mul"
input: "gradients/AddN_10"
input: "clip_by_global_norm/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/L2Loss_5_grad/mul"
    }
  }
}

ops clip_by_global_norm/clip_by_global_norm/_7 name: "clip_by_global_norm/clip_by_global_norm/_7"
op: "Identity"
input: "clip_by_global_norm/mul_8"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/L2Loss_5_grad/mul"
    }
  }
}

ops clip_by_global_norm/mul_9 name: "clip_by_global_norm/mul_9"
op: "Mul"
input: "gradients/conv1d_3/BiasAdd_grad/BiasAddGrad"
input: "clip_by_global_norm/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/conv1d_3/BiasAdd_grad/BiasAddGrad"
    }
  }
}

ops clip_by_global_norm/clip_by_global_norm/_8 name: "clip_by_global_norm/clip_by_global_norm/_8"
op: "Identity"
input: "clip_by_global_norm/mul_9"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/conv1d_3/BiasAdd_grad/BiasAddGrad"
    }
  }
}

ops clip_by_global_norm/mul_10 name: "clip_by_global_norm/mul_10"
op: "Mul"
input: "gradients/L2Loss_6_grad/mul"
input: "clip_by_global_norm/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/L2Loss_6_grad/mul"
    }
  }
}

ops clip_by_global_norm/clip_by_global_norm/_9 name: "clip_by_global_norm/clip_by_global_norm/_9"
op: "Identity"
input: "clip_by_global_norm/mul_10"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/L2Loss_6_grad/mul"
    }
  }
}

ops clip_by_global_norm/mul_11 name: "clip_by_global_norm/mul_11"
op: "Mul"
input: "gradients/AddN_11"
input: "clip_by_global_norm/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/L2Loss_7_grad/mul"
    }
  }
}

ops clip_by_global_norm/clip_by_global_norm/_10 name: "clip_by_global_norm/clip_by_global_norm/_10"
op: "Identity"
input: "clip_by_global_norm/mul_11"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/L2Loss_7_grad/mul"
    }
  }
}

ops clip_by_global_norm/mul_12 name: "clip_by_global_norm/mul_12"
op: "Mul"
input: "gradients/conv1d_4/BiasAdd_grad/BiasAddGrad"
input: "clip_by_global_norm/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/conv1d_4/BiasAdd_grad/BiasAddGrad"
    }
  }
}

ops clip_by_global_norm/clip_by_global_norm/_11 name: "clip_by_global_norm/clip_by_global_norm/_11"
op: "Identity"
input: "clip_by_global_norm/mul_12"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/conv1d_4/BiasAdd_grad/BiasAddGrad"
    }
  }
}

ops clip_by_global_norm/mul_13 name: "clip_by_global_norm/mul_13"
op: "Mul"
input: "gradients/L2Loss_8_grad/mul"
input: "clip_by_global_norm/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/L2Loss_8_grad/mul"
    }
  }
}

ops clip_by_global_norm/clip_by_global_norm/_12 name: "clip_by_global_norm/clip_by_global_norm/_12"
op: "Identity"
input: "clip_by_global_norm/mul_13"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/L2Loss_8_grad/mul"
    }
  }
}

ops clip_by_global_norm/mul_14 name: "clip_by_global_norm/mul_14"
op: "Mul"
input: "gradients/AddN_12"
input: "clip_by_global_norm/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/L2Loss_9_grad/mul"
    }
  }
}

ops clip_by_global_norm/clip_by_global_norm/_13 name: "clip_by_global_norm/clip_by_global_norm/_13"
op: "Identity"
input: "clip_by_global_norm/mul_14"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/L2Loss_9_grad/mul"
    }
  }
}

ops clip_by_global_norm/mul_15 name: "clip_by_global_norm/mul_15"
op: "Mul"
input: "gradients/conv1d_5/BiasAdd_grad/BiasAddGrad"
input: "clip_by_global_norm/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/conv1d_5/BiasAdd_grad/BiasAddGrad"
    }
  }
}

ops clip_by_global_norm/clip_by_global_norm/_14 name: "clip_by_global_norm/clip_by_global_norm/_14"
op: "Identity"
input: "clip_by_global_norm/mul_15"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/conv1d_5/BiasAdd_grad/BiasAddGrad"
    }
  }
}

ops clip_by_global_norm/mul_16 name: "clip_by_global_norm/mul_16"
op: "Mul"
input: "gradients/L2Loss_10_grad/mul"
input: "clip_by_global_norm/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/L2Loss_10_grad/mul"
    }
  }
}

ops clip_by_global_norm/clip_by_global_norm/_15 name: "clip_by_global_norm/clip_by_global_norm/_15"
op: "Identity"
input: "clip_by_global_norm/mul_16"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/L2Loss_10_grad/mul"
    }
  }
}

ops clip_by_global_norm/mul_17 name: "clip_by_global_norm/mul_17"
op: "Mul"
input: "gradients/AddN_13"
input: "clip_by_global_norm/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/L2Loss_11_grad/mul"
    }
  }
}

ops clip_by_global_norm/clip_by_global_norm/_16 name: "clip_by_global_norm/clip_by_global_norm/_16"
op: "Identity"
input: "clip_by_global_norm/mul_17"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/L2Loss_11_grad/mul"
    }
  }
}

ops clip_by_global_norm/mul_18 name: "clip_by_global_norm/mul_18"
op: "Mul"
input: "gradients/conv1d_6/BiasAdd_grad/BiasAddGrad"
input: "clip_by_global_norm/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/conv1d_6/BiasAdd_grad/BiasAddGrad"
    }
  }
}

ops clip_by_global_norm/clip_by_global_norm/_17 name: "clip_by_global_norm/clip_by_global_norm/_17"
op: "Identity"
input: "clip_by_global_norm/mul_18"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/conv1d_6/BiasAdd_grad/BiasAddGrad"
    }
  }
}

ops clip_by_global_norm/mul_19 name: "clip_by_global_norm/mul_19"
op: "Mul"
input: "gradients/AddN_4"
input: "clip_by_global_norm/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/L2Loss_12_grad/mul"
    }
  }
}

ops clip_by_global_norm/clip_by_global_norm/_18 name: "clip_by_global_norm/clip_by_global_norm/_18"
op: "Identity"
input: "clip_by_global_norm/mul_19"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/L2Loss_12_grad/mul"
    }
  }
}

ops clip_by_global_norm/mul_20 name: "clip_by_global_norm/mul_20"
op: "Mul"
input: "gradients/dense/BiasAdd_grad/BiasAddGrad"
input: "clip_by_global_norm/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/dense/BiasAdd_grad/BiasAddGrad"
    }
  }
}

ops clip_by_global_norm/clip_by_global_norm/_19 name: "clip_by_global_norm/clip_by_global_norm/_19"
op: "Identity"
input: "clip_by_global_norm/mul_20"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/dense/BiasAdd_grad/BiasAddGrad"
    }
  }
}

ops clip_by_global_norm/mul_21 name: "clip_by_global_norm/mul_21"
op: "Mul"
input: "gradients/AddN"
input: "clip_by_global_norm/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/L2Loss_13_grad/mul"
    }
  }
}

ops clip_by_global_norm/clip_by_global_norm/_20 name: "clip_by_global_norm/clip_by_global_norm/_20"
op: "Identity"
input: "clip_by_global_norm/mul_21"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/L2Loss_13_grad/mul"
    }
  }
}

ops clip_by_global_norm/mul_22 name: "clip_by_global_norm/mul_22"
op: "Mul"
input: "gradients/fully_connected/BiasAdd_grad/BiasAddGrad"
input: "clip_by_global_norm/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/fully_connected/BiasAdd_grad/BiasAddGrad"
    }
  }
}

ops clip_by_global_norm/clip_by_global_norm/_21 name: "clip_by_global_norm/clip_by_global_norm/_21"
op: "Identity"
input: "clip_by_global_norm/mul_22"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/fully_connected/BiasAdd_grad/BiasAddGrad"
    }
  }
}

ops clip_by_global_norm/mul_23 name: "clip_by_global_norm/mul_23"
op: "Mul"
input: "gradients/AddN_2"
input: "clip_by_global_norm/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/L2Loss_14_grad/mul"
    }
  }
}

ops clip_by_global_norm/clip_by_global_norm/_22 name: "clip_by_global_norm/clip_by_global_norm/_22"
op: "Identity"
input: "clip_by_global_norm/mul_23"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/L2Loss_14_grad/mul"
    }
  }
}

ops clip_by_global_norm/mul_24 name: "clip_by_global_norm/mul_24"
op: "Mul"
input: "gradients/fully_connected_1/BiasAdd_grad/BiasAddGrad"
input: "clip_by_global_norm/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/fully_connected_1/BiasAdd_grad/BiasAddGrad"
    }
  }
}

ops clip_by_global_norm/clip_by_global_norm/_23 name: "clip_by_global_norm/clip_by_global_norm/_23"
op: "Identity"
input: "clip_by_global_norm/mul_24"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/fully_connected_1/BiasAdd_grad/BiasAddGrad"
    }
  }
}

ops clip_by_global_norm/mul_25 name: "clip_by_global_norm/mul_25"
op: "Mul"
input: "gradients/AddN_1"
input: "clip_by_global_norm/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/L2Loss_15_grad/mul"
    }
  }
}

ops clip_by_global_norm/clip_by_global_norm/_24 name: "clip_by_global_norm/clip_by_global_norm/_24"
op: "Identity"
input: "clip_by_global_norm/mul_25"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/L2Loss_15_grad/mul"
    }
  }
}

ops clip_by_global_norm/mul_26 name: "clip_by_global_norm/mul_26"
op: "Mul"
input: "gradients/fully_connected_2/BiasAdd_grad/BiasAddGrad"
input: "clip_by_global_norm/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/fully_connected_2/BiasAdd_grad/BiasAddGrad"
    }
  }
}

ops clip_by_global_norm/clip_by_global_norm/_25 name: "clip_by_global_norm/clip_by_global_norm/_25"
op: "Identity"
input: "clip_by_global_norm/mul_26"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/fully_connected_2/BiasAdd_grad/BiasAddGrad"
    }
  }
}

ops beta1_power/initial_value name: "beta1_power/initial_value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_1"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.8999999761581421
    }
  }
}

ops beta1_power name: "beta1_power"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_1"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops beta1_power/Assign name: "beta1_power/Assign"
op: "Assign"
input: "beta1_power"
input: "beta1_power/initial_value"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_1"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops beta1_power/read name: "beta1_power/read"
op: "Identity"
input: "beta1_power"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_1"
    }
  }
}

ops beta2_power/initial_value name: "beta2_power/initial_value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_1"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.9990000128746033
    }
  }
}

ops beta2_power name: "beta2_power"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_1"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops beta2_power/Assign name: "beta2_power/Assign"
op: "Assign"
input: "beta2_power"
input: "beta2_power/initial_value"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_1"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops beta2_power/read name: "beta2_power/read"
op: "Identity"
input: "beta2_power"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_1"
    }
  }
}

ops Variable_1/Adam/Initializer/zeros name: "Variable_1/Adam/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_1"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 128
        }
      }
      float_val: 0.0
    }
  }
}

ops Variable_1/Adam name: "Variable_1/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_1"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 128
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops Variable_1/Adam/Assign name: "Variable_1/Adam/Assign"
op: "Assign"
input: "Variable_1/Adam"
input: "Variable_1/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_1"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops Variable_1/Adam/read name: "Variable_1/Adam/read"
op: "Identity"
input: "Variable_1/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_1"
    }
  }
}

ops Variable_1/Adam_1/Initializer/zeros name: "Variable_1/Adam_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_1"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 128
        }
      }
      float_val: 0.0
    }
  }
}

ops Variable_1/Adam_1 name: "Variable_1/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_1"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 128
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops Variable_1/Adam_1/Assign name: "Variable_1/Adam_1/Assign"
op: "Assign"
input: "Variable_1/Adam_1"
input: "Variable_1/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_1"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops Variable_1/Adam_1/read name: "Variable_1/Adam_1/read"
op: "Identity"
input: "Variable_1/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_1"
    }
  }
}

ops conv1d/kernel/Adam/Initializer/zeros name: "conv1d/kernel/Adam/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 2
        }
        dim {
          size: 300
        }
        dim {
          size: 128
        }
      }
      float_val: 0.0
    }
  }
}

ops conv1d/kernel/Adam name: "conv1d/kernel/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 2
      }
      dim {
        size: 300
      }
      dim {
        size: 128
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops conv1d/kernel/Adam/Assign name: "conv1d/kernel/Adam/Assign"
op: "Assign"
input: "conv1d/kernel/Adam"
input: "conv1d/kernel/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops conv1d/kernel/Adam/read name: "conv1d/kernel/Adam/read"
op: "Identity"
input: "conv1d/kernel/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d/kernel"
    }
  }
}

ops conv1d/kernel/Adam_1/Initializer/zeros name: "conv1d/kernel/Adam_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 2
        }
        dim {
          size: 300
        }
        dim {
          size: 128
        }
      }
      float_val: 0.0
    }
  }
}

ops conv1d/kernel/Adam_1 name: "conv1d/kernel/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 2
      }
      dim {
        size: 300
      }
      dim {
        size: 128
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops conv1d/kernel/Adam_1/Assign name: "conv1d/kernel/Adam_1/Assign"
op: "Assign"
input: "conv1d/kernel/Adam_1"
input: "conv1d/kernel/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops conv1d/kernel/Adam_1/read name: "conv1d/kernel/Adam_1/read"
op: "Identity"
input: "conv1d/kernel/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d/kernel"
    }
  }
}

ops conv1d/bias/Adam/Initializer/zeros name: "conv1d/bias/Adam/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 128
        }
      }
      float_val: 0.0
    }
  }
}

ops conv1d/bias/Adam name: "conv1d/bias/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 128
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops conv1d/bias/Adam/Assign name: "conv1d/bias/Adam/Assign"
op: "Assign"
input: "conv1d/bias/Adam"
input: "conv1d/bias/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops conv1d/bias/Adam/read name: "conv1d/bias/Adam/read"
op: "Identity"
input: "conv1d/bias/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d/bias"
    }
  }
}

ops conv1d/bias/Adam_1/Initializer/zeros name: "conv1d/bias/Adam_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 128
        }
      }
      float_val: 0.0
    }
  }
}

ops conv1d/bias/Adam_1 name: "conv1d/bias/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 128
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops conv1d/bias/Adam_1/Assign name: "conv1d/bias/Adam_1/Assign"
op: "Assign"
input: "conv1d/bias/Adam_1"
input: "conv1d/bias/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops conv1d/bias/Adam_1/read name: "conv1d/bias/Adam_1/read"
op: "Identity"
input: "conv1d/bias/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d/bias"
    }
  }
}

ops Variable_2/Adam/Initializer/zeros name: "Variable_2/Adam/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_2"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 128
        }
      }
      float_val: 0.0
    }
  }
}

ops Variable_2/Adam name: "Variable_2/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_2"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 128
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops Variable_2/Adam/Assign name: "Variable_2/Adam/Assign"
op: "Assign"
input: "Variable_2/Adam"
input: "Variable_2/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_2"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops Variable_2/Adam/read name: "Variable_2/Adam/read"
op: "Identity"
input: "Variable_2/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_2"
    }
  }
}

ops Variable_2/Adam_1/Initializer/zeros name: "Variable_2/Adam_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_2"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 128
        }
      }
      float_val: 0.0
    }
  }
}

ops Variable_2/Adam_1 name: "Variable_2/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_2"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 128
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops Variable_2/Adam_1/Assign name: "Variable_2/Adam_1/Assign"
op: "Assign"
input: "Variable_2/Adam_1"
input: "Variable_2/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_2"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops Variable_2/Adam_1/read name: "Variable_2/Adam_1/read"
op: "Identity"
input: "Variable_2/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_2"
    }
  }
}

ops conv1d_1/kernel/Adam/Initializer/zeros name: "conv1d_1/kernel/Adam/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_1/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 3
        }
        dim {
          size: 300
        }
        dim {
          size: 128
        }
      }
      float_val: 0.0
    }
  }
}

ops conv1d_1/kernel/Adam name: "conv1d_1/kernel/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_1/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 300
      }
      dim {
        size: 128
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops conv1d_1/kernel/Adam/Assign name: "conv1d_1/kernel/Adam/Assign"
op: "Assign"
input: "conv1d_1/kernel/Adam"
input: "conv1d_1/kernel/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_1/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops conv1d_1/kernel/Adam/read name: "conv1d_1/kernel/Adam/read"
op: "Identity"
input: "conv1d_1/kernel/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_1/kernel"
    }
  }
}

ops conv1d_1/kernel/Adam_1/Initializer/zeros name: "conv1d_1/kernel/Adam_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_1/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 3
        }
        dim {
          size: 300
        }
        dim {
          size: 128
        }
      }
      float_val: 0.0
    }
  }
}

ops conv1d_1/kernel/Adam_1 name: "conv1d_1/kernel/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_1/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 300
      }
      dim {
        size: 128
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops conv1d_1/kernel/Adam_1/Assign name: "conv1d_1/kernel/Adam_1/Assign"
op: "Assign"
input: "conv1d_1/kernel/Adam_1"
input: "conv1d_1/kernel/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_1/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops conv1d_1/kernel/Adam_1/read name: "conv1d_1/kernel/Adam_1/read"
op: "Identity"
input: "conv1d_1/kernel/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_1/kernel"
    }
  }
}

ops conv1d_1/bias/Adam/Initializer/zeros name: "conv1d_1/bias/Adam/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_1/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 128
        }
      }
      float_val: 0.0
    }
  }
}

ops conv1d_1/bias/Adam name: "conv1d_1/bias/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_1/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 128
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops conv1d_1/bias/Adam/Assign name: "conv1d_1/bias/Adam/Assign"
op: "Assign"
input: "conv1d_1/bias/Adam"
input: "conv1d_1/bias/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_1/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops conv1d_1/bias/Adam/read name: "conv1d_1/bias/Adam/read"
op: "Identity"
input: "conv1d_1/bias/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_1/bias"
    }
  }
}

ops conv1d_1/bias/Adam_1/Initializer/zeros name: "conv1d_1/bias/Adam_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_1/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 128
        }
      }
      float_val: 0.0
    }
  }
}

ops conv1d_1/bias/Adam_1 name: "conv1d_1/bias/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_1/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 128
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops conv1d_1/bias/Adam_1/Assign name: "conv1d_1/bias/Adam_1/Assign"
op: "Assign"
input: "conv1d_1/bias/Adam_1"
input: "conv1d_1/bias/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_1/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops conv1d_1/bias/Adam_1/read name: "conv1d_1/bias/Adam_1/read"
op: "Identity"
input: "conv1d_1/bias/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_1/bias"
    }
  }
}

ops Variable_3/Adam/Initializer/zeros name: "Variable_3/Adam/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_3"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 128
        }
      }
      float_val: 0.0
    }
  }
}

ops Variable_3/Adam name: "Variable_3/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_3"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 128
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops Variable_3/Adam/Assign name: "Variable_3/Adam/Assign"
op: "Assign"
input: "Variable_3/Adam"
input: "Variable_3/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_3"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops Variable_3/Adam/read name: "Variable_3/Adam/read"
op: "Identity"
input: "Variable_3/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_3"
    }
  }
}

ops Variable_3/Adam_1/Initializer/zeros name: "Variable_3/Adam_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_3"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 128
        }
      }
      float_val: 0.0
    }
  }
}

ops Variable_3/Adam_1 name: "Variable_3/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_3"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 128
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops Variable_3/Adam_1/Assign name: "Variable_3/Adam_1/Assign"
op: "Assign"
input: "Variable_3/Adam_1"
input: "Variable_3/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_3"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops Variable_3/Adam_1/read name: "Variable_3/Adam_1/read"
op: "Identity"
input: "Variable_3/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_3"
    }
  }
}

ops conv1d_2/kernel/Adam/Initializer/zeros name: "conv1d_2/kernel/Adam/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_2/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 4
        }
        dim {
          size: 300
        }
        dim {
          size: 128
        }
      }
      float_val: 0.0
    }
  }
}

ops conv1d_2/kernel/Adam name: "conv1d_2/kernel/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_2/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 4
      }
      dim {
        size: 300
      }
      dim {
        size: 128
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops conv1d_2/kernel/Adam/Assign name: "conv1d_2/kernel/Adam/Assign"
op: "Assign"
input: "conv1d_2/kernel/Adam"
input: "conv1d_2/kernel/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_2/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops conv1d_2/kernel/Adam/read name: "conv1d_2/kernel/Adam/read"
op: "Identity"
input: "conv1d_2/kernel/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_2/kernel"
    }
  }
}

ops conv1d_2/kernel/Adam_1/Initializer/zeros name: "conv1d_2/kernel/Adam_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_2/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 4
        }
        dim {
          size: 300
        }
        dim {
          size: 128
        }
      }
      float_val: 0.0
    }
  }
}

ops conv1d_2/kernel/Adam_1 name: "conv1d_2/kernel/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_2/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 4
      }
      dim {
        size: 300
      }
      dim {
        size: 128
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops conv1d_2/kernel/Adam_1/Assign name: "conv1d_2/kernel/Adam_1/Assign"
op: "Assign"
input: "conv1d_2/kernel/Adam_1"
input: "conv1d_2/kernel/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_2/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops conv1d_2/kernel/Adam_1/read name: "conv1d_2/kernel/Adam_1/read"
op: "Identity"
input: "conv1d_2/kernel/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_2/kernel"
    }
  }
}

ops conv1d_2/bias/Adam/Initializer/zeros name: "conv1d_2/bias/Adam/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_2/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 128
        }
      }
      float_val: 0.0
    }
  }
}

ops conv1d_2/bias/Adam name: "conv1d_2/bias/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_2/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 128
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops conv1d_2/bias/Adam/Assign name: "conv1d_2/bias/Adam/Assign"
op: "Assign"
input: "conv1d_2/bias/Adam"
input: "conv1d_2/bias/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_2/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops conv1d_2/bias/Adam/read name: "conv1d_2/bias/Adam/read"
op: "Identity"
input: "conv1d_2/bias/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_2/bias"
    }
  }
}

ops conv1d_2/bias/Adam_1/Initializer/zeros name: "conv1d_2/bias/Adam_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_2/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 128
        }
      }
      float_val: 0.0
    }
  }
}

ops conv1d_2/bias/Adam_1 name: "conv1d_2/bias/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_2/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 128
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops conv1d_2/bias/Adam_1/Assign name: "conv1d_2/bias/Adam_1/Assign"
op: "Assign"
input: "conv1d_2/bias/Adam_1"
input: "conv1d_2/bias/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_2/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops conv1d_2/bias/Adam_1/read name: "conv1d_2/bias/Adam_1/read"
op: "Identity"
input: "conv1d_2/bias/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_2/bias"
    }
  }
}

ops Variable_4/Adam/Initializer/zeros name: "Variable_4/Adam/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_4"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 128
        }
      }
      float_val: 0.0
    }
  }
}

ops Variable_4/Adam name: "Variable_4/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_4"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 128
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops Variable_4/Adam/Assign name: "Variable_4/Adam/Assign"
op: "Assign"
input: "Variable_4/Adam"
input: "Variable_4/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_4"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops Variable_4/Adam/read name: "Variable_4/Adam/read"
op: "Identity"
input: "Variable_4/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_4"
    }
  }
}

ops Variable_4/Adam_1/Initializer/zeros name: "Variable_4/Adam_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_4"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 128
        }
      }
      float_val: 0.0
    }
  }
}

ops Variable_4/Adam_1 name: "Variable_4/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_4"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 128
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops Variable_4/Adam_1/Assign name: "Variable_4/Adam_1/Assign"
op: "Assign"
input: "Variable_4/Adam_1"
input: "Variable_4/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_4"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops Variable_4/Adam_1/read name: "Variable_4/Adam_1/read"
op: "Identity"
input: "Variable_4/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_4"
    }
  }
}

ops conv1d_3/kernel/Adam/Initializer/zeros name: "conv1d_3/kernel/Adam/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_3/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 2
        }
        dim {
          size: 300
        }
        dim {
          size: 128
        }
      }
      float_val: 0.0
    }
  }
}

ops conv1d_3/kernel/Adam name: "conv1d_3/kernel/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_3/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 2
      }
      dim {
        size: 300
      }
      dim {
        size: 128
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops conv1d_3/kernel/Adam/Assign name: "conv1d_3/kernel/Adam/Assign"
op: "Assign"
input: "conv1d_3/kernel/Adam"
input: "conv1d_3/kernel/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_3/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops conv1d_3/kernel/Adam/read name: "conv1d_3/kernel/Adam/read"
op: "Identity"
input: "conv1d_3/kernel/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_3/kernel"
    }
  }
}

ops conv1d_3/kernel/Adam_1/Initializer/zeros name: "conv1d_3/kernel/Adam_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_3/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 2
        }
        dim {
          size: 300
        }
        dim {
          size: 128
        }
      }
      float_val: 0.0
    }
  }
}

ops conv1d_3/kernel/Adam_1 name: "conv1d_3/kernel/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_3/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 2
      }
      dim {
        size: 300
      }
      dim {
        size: 128
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops conv1d_3/kernel/Adam_1/Assign name: "conv1d_3/kernel/Adam_1/Assign"
op: "Assign"
input: "conv1d_3/kernel/Adam_1"
input: "conv1d_3/kernel/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_3/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops conv1d_3/kernel/Adam_1/read name: "conv1d_3/kernel/Adam_1/read"
op: "Identity"
input: "conv1d_3/kernel/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_3/kernel"
    }
  }
}

ops conv1d_3/bias/Adam/Initializer/zeros name: "conv1d_3/bias/Adam/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_3/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 128
        }
      }
      float_val: 0.0
    }
  }
}

ops conv1d_3/bias/Adam name: "conv1d_3/bias/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_3/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 128
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops conv1d_3/bias/Adam/Assign name: "conv1d_3/bias/Adam/Assign"
op: "Assign"
input: "conv1d_3/bias/Adam"
input: "conv1d_3/bias/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_3/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops conv1d_3/bias/Adam/read name: "conv1d_3/bias/Adam/read"
op: "Identity"
input: "conv1d_3/bias/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_3/bias"
    }
  }
}

ops conv1d_3/bias/Adam_1/Initializer/zeros name: "conv1d_3/bias/Adam_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_3/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 128
        }
      }
      float_val: 0.0
    }
  }
}

ops conv1d_3/bias/Adam_1 name: "conv1d_3/bias/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_3/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 128
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops conv1d_3/bias/Adam_1/Assign name: "conv1d_3/bias/Adam_1/Assign"
op: "Assign"
input: "conv1d_3/bias/Adam_1"
input: "conv1d_3/bias/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_3/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops conv1d_3/bias/Adam_1/read name: "conv1d_3/bias/Adam_1/read"
op: "Identity"
input: "conv1d_3/bias/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_3/bias"
    }
  }
}

ops Variable_5/Adam/Initializer/zeros name: "Variable_5/Adam/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_5"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 128
        }
      }
      float_val: 0.0
    }
  }
}

ops Variable_5/Adam name: "Variable_5/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_5"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 128
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops Variable_5/Adam/Assign name: "Variable_5/Adam/Assign"
op: "Assign"
input: "Variable_5/Adam"
input: "Variable_5/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_5"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops Variable_5/Adam/read name: "Variable_5/Adam/read"
op: "Identity"
input: "Variable_5/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_5"
    }
  }
}

ops Variable_5/Adam_1/Initializer/zeros name: "Variable_5/Adam_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_5"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 128
        }
      }
      float_val: 0.0
    }
  }
}

ops Variable_5/Adam_1 name: "Variable_5/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_5"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 128
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops Variable_5/Adam_1/Assign name: "Variable_5/Adam_1/Assign"
op: "Assign"
input: "Variable_5/Adam_1"
input: "Variable_5/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_5"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops Variable_5/Adam_1/read name: "Variable_5/Adam_1/read"
op: "Identity"
input: "Variable_5/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_5"
    }
  }
}

ops conv1d_4/kernel/Adam/Initializer/zeros name: "conv1d_4/kernel/Adam/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_4/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 3
        }
        dim {
          size: 300
        }
        dim {
          size: 128
        }
      }
      float_val: 0.0
    }
  }
}

ops conv1d_4/kernel/Adam name: "conv1d_4/kernel/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_4/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 300
      }
      dim {
        size: 128
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops conv1d_4/kernel/Adam/Assign name: "conv1d_4/kernel/Adam/Assign"
op: "Assign"
input: "conv1d_4/kernel/Adam"
input: "conv1d_4/kernel/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_4/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops conv1d_4/kernel/Adam/read name: "conv1d_4/kernel/Adam/read"
op: "Identity"
input: "conv1d_4/kernel/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_4/kernel"
    }
  }
}

ops conv1d_4/kernel/Adam_1/Initializer/zeros name: "conv1d_4/kernel/Adam_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_4/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 3
        }
        dim {
          size: 300
        }
        dim {
          size: 128
        }
      }
      float_val: 0.0
    }
  }
}

ops conv1d_4/kernel/Adam_1 name: "conv1d_4/kernel/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_4/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 300
      }
      dim {
        size: 128
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops conv1d_4/kernel/Adam_1/Assign name: "conv1d_4/kernel/Adam_1/Assign"
op: "Assign"
input: "conv1d_4/kernel/Adam_1"
input: "conv1d_4/kernel/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_4/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops conv1d_4/kernel/Adam_1/read name: "conv1d_4/kernel/Adam_1/read"
op: "Identity"
input: "conv1d_4/kernel/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_4/kernel"
    }
  }
}

ops conv1d_4/bias/Adam/Initializer/zeros name: "conv1d_4/bias/Adam/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_4/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 128
        }
      }
      float_val: 0.0
    }
  }
}

ops conv1d_4/bias/Adam name: "conv1d_4/bias/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_4/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 128
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops conv1d_4/bias/Adam/Assign name: "conv1d_4/bias/Adam/Assign"
op: "Assign"
input: "conv1d_4/bias/Adam"
input: "conv1d_4/bias/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_4/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops conv1d_4/bias/Adam/read name: "conv1d_4/bias/Adam/read"
op: "Identity"
input: "conv1d_4/bias/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_4/bias"
    }
  }
}

ops conv1d_4/bias/Adam_1/Initializer/zeros name: "conv1d_4/bias/Adam_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_4/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 128
        }
      }
      float_val: 0.0
    }
  }
}

ops conv1d_4/bias/Adam_1 name: "conv1d_4/bias/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_4/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 128
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops conv1d_4/bias/Adam_1/Assign name: "conv1d_4/bias/Adam_1/Assign"
op: "Assign"
input: "conv1d_4/bias/Adam_1"
input: "conv1d_4/bias/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_4/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops conv1d_4/bias/Adam_1/read name: "conv1d_4/bias/Adam_1/read"
op: "Identity"
input: "conv1d_4/bias/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_4/bias"
    }
  }
}

ops Variable_6/Adam/Initializer/zeros name: "Variable_6/Adam/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_6"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 128
        }
      }
      float_val: 0.0
    }
  }
}

ops Variable_6/Adam name: "Variable_6/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_6"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 128
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops Variable_6/Adam/Assign name: "Variable_6/Adam/Assign"
op: "Assign"
input: "Variable_6/Adam"
input: "Variable_6/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_6"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops Variable_6/Adam/read name: "Variable_6/Adam/read"
op: "Identity"
input: "Variable_6/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_6"
    }
  }
}

ops Variable_6/Adam_1/Initializer/zeros name: "Variable_6/Adam_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_6"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 128
        }
      }
      float_val: 0.0
    }
  }
}

ops Variable_6/Adam_1 name: "Variable_6/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_6"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 128
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops Variable_6/Adam_1/Assign name: "Variable_6/Adam_1/Assign"
op: "Assign"
input: "Variable_6/Adam_1"
input: "Variable_6/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_6"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops Variable_6/Adam_1/read name: "Variable_6/Adam_1/read"
op: "Identity"
input: "Variable_6/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_6"
    }
  }
}

ops conv1d_5/kernel/Adam/Initializer/zeros name: "conv1d_5/kernel/Adam/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_5/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 4
        }
        dim {
          size: 300
        }
        dim {
          size: 128
        }
      }
      float_val: 0.0
    }
  }
}

ops conv1d_5/kernel/Adam name: "conv1d_5/kernel/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_5/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 4
      }
      dim {
        size: 300
      }
      dim {
        size: 128
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops conv1d_5/kernel/Adam/Assign name: "conv1d_5/kernel/Adam/Assign"
op: "Assign"
input: "conv1d_5/kernel/Adam"
input: "conv1d_5/kernel/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_5/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops conv1d_5/kernel/Adam/read name: "conv1d_5/kernel/Adam/read"
op: "Identity"
input: "conv1d_5/kernel/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_5/kernel"
    }
  }
}

ops conv1d_5/kernel/Adam_1/Initializer/zeros name: "conv1d_5/kernel/Adam_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_5/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 4
        }
        dim {
          size: 300
        }
        dim {
          size: 128
        }
      }
      float_val: 0.0
    }
  }
}

ops conv1d_5/kernel/Adam_1 name: "conv1d_5/kernel/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_5/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 4
      }
      dim {
        size: 300
      }
      dim {
        size: 128
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops conv1d_5/kernel/Adam_1/Assign name: "conv1d_5/kernel/Adam_1/Assign"
op: "Assign"
input: "conv1d_5/kernel/Adam_1"
input: "conv1d_5/kernel/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_5/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops conv1d_5/kernel/Adam_1/read name: "conv1d_5/kernel/Adam_1/read"
op: "Identity"
input: "conv1d_5/kernel/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_5/kernel"
    }
  }
}

ops conv1d_5/bias/Adam/Initializer/zeros name: "conv1d_5/bias/Adam/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_5/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 128
        }
      }
      float_val: 0.0
    }
  }
}

ops conv1d_5/bias/Adam name: "conv1d_5/bias/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_5/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 128
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops conv1d_5/bias/Adam/Assign name: "conv1d_5/bias/Adam/Assign"
op: "Assign"
input: "conv1d_5/bias/Adam"
input: "conv1d_5/bias/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_5/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops conv1d_5/bias/Adam/read name: "conv1d_5/bias/Adam/read"
op: "Identity"
input: "conv1d_5/bias/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_5/bias"
    }
  }
}

ops conv1d_5/bias/Adam_1/Initializer/zeros name: "conv1d_5/bias/Adam_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_5/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 128
        }
      }
      float_val: 0.0
    }
  }
}

ops conv1d_5/bias/Adam_1 name: "conv1d_5/bias/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_5/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 128
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops conv1d_5/bias/Adam_1/Assign name: "conv1d_5/bias/Adam_1/Assign"
op: "Assign"
input: "conv1d_5/bias/Adam_1"
input: "conv1d_5/bias/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_5/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops conv1d_5/bias/Adam_1/read name: "conv1d_5/bias/Adam_1/read"
op: "Identity"
input: "conv1d_5/bias/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_5/bias"
    }
  }
}

ops dense/kernel/Adam/Initializer/zeros name: "dense/kernel/Adam/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 768
        }
        dim {
          size: 100
        }
      }
      float_val: 0.0
    }
  }
}

ops dense/kernel/Adam name: "dense/kernel/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 768
      }
      dim {
        size: 100
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops dense/kernel/Adam/Assign name: "dense/kernel/Adam/Assign"
op: "Assign"
input: "dense/kernel/Adam"
input: "dense/kernel/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops dense/kernel/Adam/read name: "dense/kernel/Adam/read"
op: "Identity"
input: "dense/kernel/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/kernel"
    }
  }
}

ops dense/kernel/Adam_1/Initializer/zeros name: "dense/kernel/Adam_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 768
        }
        dim {
          size: 100
        }
      }
      float_val: 0.0
    }
  }
}

ops dense/kernel/Adam_1 name: "dense/kernel/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 768
      }
      dim {
        size: 100
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops dense/kernel/Adam_1/Assign name: "dense/kernel/Adam_1/Assign"
op: "Assign"
input: "dense/kernel/Adam_1"
input: "dense/kernel/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops dense/kernel/Adam_1/read name: "dense/kernel/Adam_1/read"
op: "Identity"
input: "dense/kernel/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/kernel"
    }
  }
}

ops dense/bias/Adam/Initializer/zeros name: "dense/bias/Adam/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 100
        }
      }
      float_val: 0.0
    }
  }
}

ops dense/bias/Adam name: "dense/bias/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops dense/bias/Adam/Assign name: "dense/bias/Adam/Assign"
op: "Assign"
input: "dense/bias/Adam"
input: "dense/bias/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops dense/bias/Adam/read name: "dense/bias/Adam/read"
op: "Identity"
input: "dense/bias/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/bias"
    }
  }
}

ops dense/bias/Adam_1/Initializer/zeros name: "dense/bias/Adam_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 100
        }
      }
      float_val: 0.0
    }
  }
}

ops dense/bias/Adam_1 name: "dense/bias/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops dense/bias/Adam_1/Assign name: "dense/bias/Adam_1/Assign"
op: "Assign"
input: "dense/bias/Adam_1"
input: "dense/bias/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops dense/bias/Adam_1/read name: "dense/bias/Adam_1/read"
op: "Identity"
input: "dense/bias/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/bias"
    }
  }
}

ops fully_connected/weights/Adam/Initializer/zeros name: "fully_connected/weights/Adam/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 10101
        }
        dim {
          size: 4
        }
      }
      float_val: 0.0
    }
  }
}

ops fully_connected/weights/Adam name: "fully_connected/weights/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 10101
      }
      dim {
        size: 4
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops fully_connected/weights/Adam/Assign name: "fully_connected/weights/Adam/Assign"
op: "Assign"
input: "fully_connected/weights/Adam"
input: "fully_connected/weights/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops fully_connected/weights/Adam/read name: "fully_connected/weights/Adam/read"
op: "Identity"
input: "fully_connected/weights/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected/weights"
    }
  }
}

ops fully_connected/weights/Adam_1/Initializer/zeros name: "fully_connected/weights/Adam_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 10101
        }
        dim {
          size: 4
        }
      }
      float_val: 0.0
    }
  }
}

ops fully_connected/weights/Adam_1 name: "fully_connected/weights/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 10101
      }
      dim {
        size: 4
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops fully_connected/weights/Adam_1/Assign name: "fully_connected/weights/Adam_1/Assign"
op: "Assign"
input: "fully_connected/weights/Adam_1"
input: "fully_connected/weights/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops fully_connected/weights/Adam_1/read name: "fully_connected/weights/Adam_1/read"
op: "Identity"
input: "fully_connected/weights/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected/weights"
    }
  }
}

ops fully_connected/biases/Adam/Initializer/zeros name: "fully_connected/biases/Adam/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 4
        }
      }
      float_val: 0.0
    }
  }
}

ops fully_connected/biases/Adam name: "fully_connected/biases/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 4
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops fully_connected/biases/Adam/Assign name: "fully_connected/biases/Adam/Assign"
op: "Assign"
input: "fully_connected/biases/Adam"
input: "fully_connected/biases/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops fully_connected/biases/Adam/read name: "fully_connected/biases/Adam/read"
op: "Identity"
input: "fully_connected/biases/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected/biases"
    }
  }
}

ops fully_connected/biases/Adam_1/Initializer/zeros name: "fully_connected/biases/Adam_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 4
        }
      }
      float_val: 0.0
    }
  }
}

ops fully_connected/biases/Adam_1 name: "fully_connected/biases/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 4
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops fully_connected/biases/Adam_1/Assign name: "fully_connected/biases/Adam_1/Assign"
op: "Assign"
input: "fully_connected/biases/Adam_1"
input: "fully_connected/biases/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops fully_connected/biases/Adam_1/read name: "fully_connected/biases/Adam_1/read"
op: "Identity"
input: "fully_connected/biases/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected/biases"
    }
  }
}

ops fully_connected_1/weights/Adam/Initializer/zeros name: "fully_connected_1/weights/Adam/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected_1/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 100
        }
        dim {
          size: 100
        }
      }
      float_val: 0.0
    }
  }
}

ops fully_connected_1/weights/Adam name: "fully_connected_1/weights/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected_1/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
      dim {
        size: 100
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops fully_connected_1/weights/Adam/Assign name: "fully_connected_1/weights/Adam/Assign"
op: "Assign"
input: "fully_connected_1/weights/Adam"
input: "fully_connected_1/weights/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected_1/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops fully_connected_1/weights/Adam/read name: "fully_connected_1/weights/Adam/read"
op: "Identity"
input: "fully_connected_1/weights/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected_1/weights"
    }
  }
}

ops fully_connected_1/weights/Adam_1/Initializer/zeros name: "fully_connected_1/weights/Adam_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected_1/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 100
        }
        dim {
          size: 100
        }
      }
      float_val: 0.0
    }
  }
}

ops fully_connected_1/weights/Adam_1 name: "fully_connected_1/weights/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected_1/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
      dim {
        size: 100
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops fully_connected_1/weights/Adam_1/Assign name: "fully_connected_1/weights/Adam_1/Assign"
op: "Assign"
input: "fully_connected_1/weights/Adam_1"
input: "fully_connected_1/weights/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected_1/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops fully_connected_1/weights/Adam_1/read name: "fully_connected_1/weights/Adam_1/read"
op: "Identity"
input: "fully_connected_1/weights/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected_1/weights"
    }
  }
}

ops fully_connected_1/biases/Adam/Initializer/zeros name: "fully_connected_1/biases/Adam/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected_1/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 100
        }
      }
      float_val: 0.0
    }
  }
}

ops fully_connected_1/biases/Adam name: "fully_connected_1/biases/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected_1/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops fully_connected_1/biases/Adam/Assign name: "fully_connected_1/biases/Adam/Assign"
op: "Assign"
input: "fully_connected_1/biases/Adam"
input: "fully_connected_1/biases/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected_1/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops fully_connected_1/biases/Adam/read name: "fully_connected_1/biases/Adam/read"
op: "Identity"
input: "fully_connected_1/biases/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected_1/biases"
    }
  }
}

ops fully_connected_1/biases/Adam_1/Initializer/zeros name: "fully_connected_1/biases/Adam_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected_1/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 100
        }
      }
      float_val: 0.0
    }
  }
}

ops fully_connected_1/biases/Adam_1 name: "fully_connected_1/biases/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected_1/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops fully_connected_1/biases/Adam_1/Assign name: "fully_connected_1/biases/Adam_1/Assign"
op: "Assign"
input: "fully_connected_1/biases/Adam_1"
input: "fully_connected_1/biases/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected_1/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops fully_connected_1/biases/Adam_1/read name: "fully_connected_1/biases/Adam_1/read"
op: "Identity"
input: "fully_connected_1/biases/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected_1/biases"
    }
  }
}

ops fully_connected_2/weights/Adam/Initializer/zeros name: "fully_connected_2/weights/Adam/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected_2/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 100
        }
        dim {
          size: 3
        }
      }
      float_val: 0.0
    }
  }
}

ops fully_connected_2/weights/Adam name: "fully_connected_2/weights/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected_2/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
      dim {
        size: 3
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops fully_connected_2/weights/Adam/Assign name: "fully_connected_2/weights/Adam/Assign"
op: "Assign"
input: "fully_connected_2/weights/Adam"
input: "fully_connected_2/weights/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected_2/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops fully_connected_2/weights/Adam/read name: "fully_connected_2/weights/Adam/read"
op: "Identity"
input: "fully_connected_2/weights/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected_2/weights"
    }
  }
}

ops fully_connected_2/weights/Adam_1/Initializer/zeros name: "fully_connected_2/weights/Adam_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected_2/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 100
        }
        dim {
          size: 3
        }
      }
      float_val: 0.0
    }
  }
}

ops fully_connected_2/weights/Adam_1 name: "fully_connected_2/weights/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected_2/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
      dim {
        size: 3
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops fully_connected_2/weights/Adam_1/Assign name: "fully_connected_2/weights/Adam_1/Assign"
op: "Assign"
input: "fully_connected_2/weights/Adam_1"
input: "fully_connected_2/weights/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected_2/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops fully_connected_2/weights/Adam_1/read name: "fully_connected_2/weights/Adam_1/read"
op: "Identity"
input: "fully_connected_2/weights/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected_2/weights"
    }
  }
}

ops fully_connected_2/biases/Adam/Initializer/zeros name: "fully_connected_2/biases/Adam/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected_2/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 3
        }
      }
      float_val: 0.0
    }
  }
}

ops fully_connected_2/biases/Adam name: "fully_connected_2/biases/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected_2/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops fully_connected_2/biases/Adam/Assign name: "fully_connected_2/biases/Adam/Assign"
op: "Assign"
input: "fully_connected_2/biases/Adam"
input: "fully_connected_2/biases/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected_2/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops fully_connected_2/biases/Adam/read name: "fully_connected_2/biases/Adam/read"
op: "Identity"
input: "fully_connected_2/biases/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected_2/biases"
    }
  }
}

ops fully_connected_2/biases/Adam_1/Initializer/zeros name: "fully_connected_2/biases/Adam_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected_2/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 3
        }
      }
      float_val: 0.0
    }
  }
}

ops fully_connected_2/biases/Adam_1 name: "fully_connected_2/biases/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected_2/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

ops fully_connected_2/biases/Adam_1/Assign name: "fully_connected_2/biases/Adam_1/Assign"
op: "Assign"
input: "fully_connected_2/biases/Adam_1"
input: "fully_connected_2/biases/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected_2/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops fully_connected_2/biases/Adam_1/read name: "fully_connected_2/biases/Adam_1/read"
op: "Identity"
input: "fully_connected_2/biases/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected_2/biases"
    }
  }
}

ops Adam/beta1 name: "Adam/beta1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.8999999761581421
    }
  }
}

ops Adam/beta2 name: "Adam/beta2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.9990000128746033
    }
  }
}

ops Adam/epsilon name: "Adam/epsilon"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.99999993922529e-09
    }
  }
}

ops Adam/update_Variable_1/ApplyAdam name: "Adam/update_Variable_1/ApplyAdam"
op: "ApplyAdam"
input: "Variable_1"
input: "Variable_1/Adam"
input: "Variable_1/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "lr_pl"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "clip_by_global_norm/clip_by_global_norm/_0"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_1"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}

ops Adam/update_conv1d/kernel/ApplyAdam name: "Adam/update_conv1d/kernel/ApplyAdam"
op: "ApplyAdam"
input: "conv1d/kernel"
input: "conv1d/kernel/Adam"
input: "conv1d/kernel/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "lr_pl"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "clip_by_global_norm/clip_by_global_norm/_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}

ops Adam/update_conv1d/bias/ApplyAdam name: "Adam/update_conv1d/bias/ApplyAdam"
op: "ApplyAdam"
input: "conv1d/bias"
input: "conv1d/bias/Adam"
input: "conv1d/bias/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "lr_pl"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "clip_by_global_norm/clip_by_global_norm/_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}

ops Adam/update_Variable_2/ApplyAdam name: "Adam/update_Variable_2/ApplyAdam"
op: "ApplyAdam"
input: "Variable_2"
input: "Variable_2/Adam"
input: "Variable_2/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "lr_pl"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "clip_by_global_norm/clip_by_global_norm/_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_2"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}

ops Adam/update_conv1d_1/kernel/ApplyAdam name: "Adam/update_conv1d_1/kernel/ApplyAdam"
op: "ApplyAdam"
input: "conv1d_1/kernel"
input: "conv1d_1/kernel/Adam"
input: "conv1d_1/kernel/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "lr_pl"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "clip_by_global_norm/clip_by_global_norm/_4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_1/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}

ops Adam/update_conv1d_1/bias/ApplyAdam name: "Adam/update_conv1d_1/bias/ApplyAdam"
op: "ApplyAdam"
input: "conv1d_1/bias"
input: "conv1d_1/bias/Adam"
input: "conv1d_1/bias/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "lr_pl"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "clip_by_global_norm/clip_by_global_norm/_5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_1/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}

ops Adam/update_Variable_3/ApplyAdam name: "Adam/update_Variable_3/ApplyAdam"
op: "ApplyAdam"
input: "Variable_3"
input: "Variable_3/Adam"
input: "Variable_3/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "lr_pl"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "clip_by_global_norm/clip_by_global_norm/_6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_3"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}

ops Adam/update_conv1d_2/kernel/ApplyAdam name: "Adam/update_conv1d_2/kernel/ApplyAdam"
op: "ApplyAdam"
input: "conv1d_2/kernel"
input: "conv1d_2/kernel/Adam"
input: "conv1d_2/kernel/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "lr_pl"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "clip_by_global_norm/clip_by_global_norm/_7"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_2/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}

ops Adam/update_conv1d_2/bias/ApplyAdam name: "Adam/update_conv1d_2/bias/ApplyAdam"
op: "ApplyAdam"
input: "conv1d_2/bias"
input: "conv1d_2/bias/Adam"
input: "conv1d_2/bias/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "lr_pl"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "clip_by_global_norm/clip_by_global_norm/_8"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_2/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}

ops Adam/update_Variable_4/ApplyAdam name: "Adam/update_Variable_4/ApplyAdam"
op: "ApplyAdam"
input: "Variable_4"
input: "Variable_4/Adam"
input: "Variable_4/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "lr_pl"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "clip_by_global_norm/clip_by_global_norm/_9"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_4"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}

ops Adam/update_conv1d_3/kernel/ApplyAdam name: "Adam/update_conv1d_3/kernel/ApplyAdam"
op: "ApplyAdam"
input: "conv1d_3/kernel"
input: "conv1d_3/kernel/Adam"
input: "conv1d_3/kernel/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "lr_pl"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "clip_by_global_norm/clip_by_global_norm/_10"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_3/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}

ops Adam/update_conv1d_3/bias/ApplyAdam name: "Adam/update_conv1d_3/bias/ApplyAdam"
op: "ApplyAdam"
input: "conv1d_3/bias"
input: "conv1d_3/bias/Adam"
input: "conv1d_3/bias/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "lr_pl"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "clip_by_global_norm/clip_by_global_norm/_11"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_3/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}

ops Adam/update_Variable_5/ApplyAdam name: "Adam/update_Variable_5/ApplyAdam"
op: "ApplyAdam"
input: "Variable_5"
input: "Variable_5/Adam"
input: "Variable_5/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "lr_pl"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "clip_by_global_norm/clip_by_global_norm/_12"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_5"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}

ops Adam/update_conv1d_4/kernel/ApplyAdam name: "Adam/update_conv1d_4/kernel/ApplyAdam"
op: "ApplyAdam"
input: "conv1d_4/kernel"
input: "conv1d_4/kernel/Adam"
input: "conv1d_4/kernel/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "lr_pl"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "clip_by_global_norm/clip_by_global_norm/_13"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_4/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}

ops Adam/update_conv1d_4/bias/ApplyAdam name: "Adam/update_conv1d_4/bias/ApplyAdam"
op: "ApplyAdam"
input: "conv1d_4/bias"
input: "conv1d_4/bias/Adam"
input: "conv1d_4/bias/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "lr_pl"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "clip_by_global_norm/clip_by_global_norm/_14"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_4/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}

ops Adam/update_Variable_6/ApplyAdam name: "Adam/update_Variable_6/ApplyAdam"
op: "ApplyAdam"
input: "Variable_6"
input: "Variable_6/Adam"
input: "Variable_6/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "lr_pl"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "clip_by_global_norm/clip_by_global_norm/_15"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_6"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}

ops Adam/update_conv1d_5/kernel/ApplyAdam name: "Adam/update_conv1d_5/kernel/ApplyAdam"
op: "ApplyAdam"
input: "conv1d_5/kernel"
input: "conv1d_5/kernel/Adam"
input: "conv1d_5/kernel/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "lr_pl"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "clip_by_global_norm/clip_by_global_norm/_16"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_5/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}

ops Adam/update_conv1d_5/bias/ApplyAdam name: "Adam/update_conv1d_5/bias/ApplyAdam"
op: "ApplyAdam"
input: "conv1d_5/bias"
input: "conv1d_5/bias/Adam"
input: "conv1d_5/bias/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "lr_pl"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "clip_by_global_norm/clip_by_global_norm/_17"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_5/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}

ops Adam/update_dense/kernel/ApplyAdam name: "Adam/update_dense/kernel/ApplyAdam"
op: "ApplyAdam"
input: "dense/kernel"
input: "dense/kernel/Adam"
input: "dense/kernel/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "lr_pl"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "clip_by_global_norm/clip_by_global_norm/_18"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}

ops Adam/update_dense/bias/ApplyAdam name: "Adam/update_dense/bias/ApplyAdam"
op: "ApplyAdam"
input: "dense/bias"
input: "dense/bias/Adam"
input: "dense/bias/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "lr_pl"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "clip_by_global_norm/clip_by_global_norm/_19"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}

ops Adam/update_fully_connected/weights/ApplyAdam name: "Adam/update_fully_connected/weights/ApplyAdam"
op: "ApplyAdam"
input: "fully_connected/weights"
input: "fully_connected/weights/Adam"
input: "fully_connected/weights/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "lr_pl"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "clip_by_global_norm/clip_by_global_norm/_20"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}

ops Adam/update_fully_connected/biases/ApplyAdam name: "Adam/update_fully_connected/biases/ApplyAdam"
op: "ApplyAdam"
input: "fully_connected/biases"
input: "fully_connected/biases/Adam"
input: "fully_connected/biases/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "lr_pl"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "clip_by_global_norm/clip_by_global_norm/_21"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}

ops Adam/update_fully_connected_1/weights/ApplyAdam name: "Adam/update_fully_connected_1/weights/ApplyAdam"
op: "ApplyAdam"
input: "fully_connected_1/weights"
input: "fully_connected_1/weights/Adam"
input: "fully_connected_1/weights/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "lr_pl"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "clip_by_global_norm/clip_by_global_norm/_22"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected_1/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}

ops Adam/update_fully_connected_1/biases/ApplyAdam name: "Adam/update_fully_connected_1/biases/ApplyAdam"
op: "ApplyAdam"
input: "fully_connected_1/biases"
input: "fully_connected_1/biases/Adam"
input: "fully_connected_1/biases/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "lr_pl"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "clip_by_global_norm/clip_by_global_norm/_23"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected_1/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}

ops Adam/update_fully_connected_2/weights/ApplyAdam name: "Adam/update_fully_connected_2/weights/ApplyAdam"
op: "ApplyAdam"
input: "fully_connected_2/weights"
input: "fully_connected_2/weights/Adam"
input: "fully_connected_2/weights/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "lr_pl"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "clip_by_global_norm/clip_by_global_norm/_24"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected_2/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}

ops Adam/update_fully_connected_2/biases/ApplyAdam name: "Adam/update_fully_connected_2/biases/ApplyAdam"
op: "ApplyAdam"
input: "fully_connected_2/biases"
input: "fully_connected_2/biases/Adam"
input: "fully_connected_2/biases/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "lr_pl"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "clip_by_global_norm/clip_by_global_norm/_25"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected_2/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}

ops Adam/mul name: "Adam/mul"
op: "Mul"
input: "beta1_power/read"
input: "Adam/beta1"
input: "^Adam/update_Variable_1/ApplyAdam"
input: "^Adam/update_conv1d/kernel/ApplyAdam"
input: "^Adam/update_conv1d/bias/ApplyAdam"
input: "^Adam/update_Variable_2/ApplyAdam"
input: "^Adam/update_conv1d_1/kernel/ApplyAdam"
input: "^Adam/update_conv1d_1/bias/ApplyAdam"
input: "^Adam/update_Variable_3/ApplyAdam"
input: "^Adam/update_conv1d_2/kernel/ApplyAdam"
input: "^Adam/update_conv1d_2/bias/ApplyAdam"
input: "^Adam/update_Variable_4/ApplyAdam"
input: "^Adam/update_conv1d_3/kernel/ApplyAdam"
input: "^Adam/update_conv1d_3/bias/ApplyAdam"
input: "^Adam/update_Variable_5/ApplyAdam"
input: "^Adam/update_conv1d_4/kernel/ApplyAdam"
input: "^Adam/update_conv1d_4/bias/ApplyAdam"
input: "^Adam/update_Variable_6/ApplyAdam"
input: "^Adam/update_conv1d_5/kernel/ApplyAdam"
input: "^Adam/update_conv1d_5/bias/ApplyAdam"
input: "^Adam/update_dense/kernel/ApplyAdam"
input: "^Adam/update_dense/bias/ApplyAdam"
input: "^Adam/update_fully_connected/weights/ApplyAdam"
input: "^Adam/update_fully_connected/biases/ApplyAdam"
input: "^Adam/update_fully_connected_1/weights/ApplyAdam"
input: "^Adam/update_fully_connected_1/biases/ApplyAdam"
input: "^Adam/update_fully_connected_2/weights/ApplyAdam"
input: "^Adam/update_fully_connected_2/biases/ApplyAdam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_1"
    }
  }
}

ops Adam/Assign name: "Adam/Assign"
op: "Assign"
input: "beta1_power"
input: "Adam/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_1"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops Adam/mul_1 name: "Adam/mul_1"
op: "Mul"
input: "beta2_power/read"
input: "Adam/beta2"
input: "^Adam/update_Variable_1/ApplyAdam"
input: "^Adam/update_conv1d/kernel/ApplyAdam"
input: "^Adam/update_conv1d/bias/ApplyAdam"
input: "^Adam/update_Variable_2/ApplyAdam"
input: "^Adam/update_conv1d_1/kernel/ApplyAdam"
input: "^Adam/update_conv1d_1/bias/ApplyAdam"
input: "^Adam/update_Variable_3/ApplyAdam"
input: "^Adam/update_conv1d_2/kernel/ApplyAdam"
input: "^Adam/update_conv1d_2/bias/ApplyAdam"
input: "^Adam/update_Variable_4/ApplyAdam"
input: "^Adam/update_conv1d_3/kernel/ApplyAdam"
input: "^Adam/update_conv1d_3/bias/ApplyAdam"
input: "^Adam/update_Variable_5/ApplyAdam"
input: "^Adam/update_conv1d_4/kernel/ApplyAdam"
input: "^Adam/update_conv1d_4/bias/ApplyAdam"
input: "^Adam/update_Variable_6/ApplyAdam"
input: "^Adam/update_conv1d_5/kernel/ApplyAdam"
input: "^Adam/update_conv1d_5/bias/ApplyAdam"
input: "^Adam/update_dense/kernel/ApplyAdam"
input: "^Adam/update_dense/bias/ApplyAdam"
input: "^Adam/update_fully_connected/weights/ApplyAdam"
input: "^Adam/update_fully_connected/biases/ApplyAdam"
input: "^Adam/update_fully_connected_1/weights/ApplyAdam"
input: "^Adam/update_fully_connected_1/biases/ApplyAdam"
input: "^Adam/update_fully_connected_2/weights/ApplyAdam"
input: "^Adam/update_fully_connected_2/biases/ApplyAdam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_1"
    }
  }
}

ops Adam/Assign_1 name: "Adam/Assign_1"
op: "Assign"
input: "beta2_power"
input: "Adam/mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_1"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops Adam name: "Adam"
op: "NoOp"
input: "^Adam/update_Variable_1/ApplyAdam"
input: "^Adam/update_conv1d/kernel/ApplyAdam"
input: "^Adam/update_conv1d/bias/ApplyAdam"
input: "^Adam/update_Variable_2/ApplyAdam"
input: "^Adam/update_conv1d_1/kernel/ApplyAdam"
input: "^Adam/update_conv1d_1/bias/ApplyAdam"
input: "^Adam/update_Variable_3/ApplyAdam"
input: "^Adam/update_conv1d_2/kernel/ApplyAdam"
input: "^Adam/update_conv1d_2/bias/ApplyAdam"
input: "^Adam/update_Variable_4/ApplyAdam"
input: "^Adam/update_conv1d_3/kernel/ApplyAdam"
input: "^Adam/update_conv1d_3/bias/ApplyAdam"
input: "^Adam/update_Variable_5/ApplyAdam"
input: "^Adam/update_conv1d_4/kernel/ApplyAdam"
input: "^Adam/update_conv1d_4/bias/ApplyAdam"
input: "^Adam/update_Variable_6/ApplyAdam"
input: "^Adam/update_conv1d_5/kernel/ApplyAdam"
input: "^Adam/update_conv1d_5/bias/ApplyAdam"
input: "^Adam/update_dense/kernel/ApplyAdam"
input: "^Adam/update_dense/bias/ApplyAdam"
input: "^Adam/update_fully_connected/weights/ApplyAdam"
input: "^Adam/update_fully_connected/biases/ApplyAdam"
input: "^Adam/update_fully_connected_1/weights/ApplyAdam"
input: "^Adam/update_fully_connected_1/biases/ApplyAdam"
input: "^Adam/update_fully_connected_2/weights/ApplyAdam"
input: "^Adam/update_fully_connected_2/biases/ApplyAdam"
input: "^Adam/Assign"
input: "^Adam/Assign_1"

ops save/Const name: "save/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
      }
      string_val: "model"
    }
  }
}

ops save/SaveV2/tensor_names name: "save/SaveV2/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 81
        }
      }
      string_val: "Variable"
      string_val: "Variable_1"
      string_val: "Variable_1/Adam"
      string_val: "Variable_1/Adam_1"
      string_val: "Variable_2"
      string_val: "Variable_2/Adam"
      string_val: "Variable_2/Adam_1"
      string_val: "Variable_3"
      string_val: "Variable_3/Adam"
      string_val: "Variable_3/Adam_1"
      string_val: "Variable_4"
      string_val: "Variable_4/Adam"
      string_val: "Variable_4/Adam_1"
      string_val: "Variable_5"
      string_val: "Variable_5/Adam"
      string_val: "Variable_5/Adam_1"
      string_val: "Variable_6"
      string_val: "Variable_6/Adam"
      string_val: "Variable_6/Adam_1"
      string_val: "beta1_power"
      string_val: "beta2_power"
      string_val: "conv1d/bias"
      string_val: "conv1d/bias/Adam"
      string_val: "conv1d/bias/Adam_1"
      string_val: "conv1d/kernel"
      string_val: "conv1d/kernel/Adam"
      string_val: "conv1d/kernel/Adam_1"
      string_val: "conv1d_1/bias"
      string_val: "conv1d_1/bias/Adam"
      string_val: "conv1d_1/bias/Adam_1"
      string_val: "conv1d_1/kernel"
      string_val: "conv1d_1/kernel/Adam"
      string_val: "conv1d_1/kernel/Adam_1"
      string_val: "conv1d_2/bias"
      string_val: "conv1d_2/bias/Adam"
      string_val: "conv1d_2/bias/Adam_1"
      string_val: "conv1d_2/kernel"
      string_val: "conv1d_2/kernel/Adam"
      string_val: "conv1d_2/kernel/Adam_1"
      string_val: "conv1d_3/bias"
      string_val: "conv1d_3/bias/Adam"
      string_val: "conv1d_3/bias/Adam_1"
      string_val: "conv1d_3/kernel"
      string_val: "conv1d_3/kernel/Adam"
      string_val: "conv1d_3/kernel/Adam_1"
      string_val: "conv1d_4/bias"
      string_val: "conv1d_4/bias/Adam"
      string_val: "conv1d_4/bias/Adam_1"
      string_val: "conv1d_4/kernel"
      string_val: "conv1d_4/kernel/Adam"
      string_val: "conv1d_4/kernel/Adam_1"
      string_val: "conv1d_5/bias"
      string_val: "conv1d_5/bias/Adam"
      string_val: "conv1d_5/bias/Adam_1"
      string_val: "conv1d_5/kernel"
      string_val: "conv1d_5/kernel/Adam"
      string_val: "conv1d_5/kernel/Adam_1"
      string_val: "dense/bias"
      string_val: "dense/bias/Adam"
      string_val: "dense/bias/Adam_1"
      string_val: "dense/kernel"
      string_val: "dense/kernel/Adam"
      string_val: "dense/kernel/Adam_1"
      string_val: "fully_connected/biases"
      string_val: "fully_connected/biases/Adam"
      string_val: "fully_connected/biases/Adam_1"
      string_val: "fully_connected/weights"
      string_val: "fully_connected/weights/Adam"
      string_val: "fully_connected/weights/Adam_1"
      string_val: "fully_connected_1/biases"
      string_val: "fully_connected_1/biases/Adam"
      string_val: "fully_connected_1/biases/Adam_1"
      string_val: "fully_connected_1/weights"
      string_val: "fully_connected_1/weights/Adam"
      string_val: "fully_connected_1/weights/Adam_1"
      string_val: "fully_connected_2/biases"
      string_val: "fully_connected_2/biases/Adam"
      string_val: "fully_connected_2/biases/Adam_1"
      string_val: "fully_connected_2/weights"
      string_val: "fully_connected_2/weights/Adam"
      string_val: "fully_connected_2/weights/Adam_1"
    }
  }
}

ops save/SaveV2/shape_and_slices name: "save/SaveV2/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 81
        }
      }
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
    }
  }
}

ops save/SaveV2 name: "save/SaveV2"
op: "SaveV2"
input: "save/Const"
input: "save/SaveV2/tensor_names"
input: "save/SaveV2/shape_and_slices"
input: "Variable"
input: "Variable_1"
input: "Variable_1/Adam"
input: "Variable_1/Adam_1"
input: "Variable_2"
input: "Variable_2/Adam"
input: "Variable_2/Adam_1"
input: "Variable_3"
input: "Variable_3/Adam"
input: "Variable_3/Adam_1"
input: "Variable_4"
input: "Variable_4/Adam"
input: "Variable_4/Adam_1"
input: "Variable_5"
input: "Variable_5/Adam"
input: "Variable_5/Adam_1"
input: "Variable_6"
input: "Variable_6/Adam"
input: "Variable_6/Adam_1"
input: "beta1_power"
input: "beta2_power"
input: "conv1d/bias"
input: "conv1d/bias/Adam"
input: "conv1d/bias/Adam_1"
input: "conv1d/kernel"
input: "conv1d/kernel/Adam"
input: "conv1d/kernel/Adam_1"
input: "conv1d_1/bias"
input: "conv1d_1/bias/Adam"
input: "conv1d_1/bias/Adam_1"
input: "conv1d_1/kernel"
input: "conv1d_1/kernel/Adam"
input: "conv1d_1/kernel/Adam_1"
input: "conv1d_2/bias"
input: "conv1d_2/bias/Adam"
input: "conv1d_2/bias/Adam_1"
input: "conv1d_2/kernel"
input: "conv1d_2/kernel/Adam"
input: "conv1d_2/kernel/Adam_1"
input: "conv1d_3/bias"
input: "conv1d_3/bias/Adam"
input: "conv1d_3/bias/Adam_1"
input: "conv1d_3/kernel"
input: "conv1d_3/kernel/Adam"
input: "conv1d_3/kernel/Adam_1"
input: "conv1d_4/bias"
input: "conv1d_4/bias/Adam"
input: "conv1d_4/bias/Adam_1"
input: "conv1d_4/kernel"
input: "conv1d_4/kernel/Adam"
input: "conv1d_4/kernel/Adam_1"
input: "conv1d_5/bias"
input: "conv1d_5/bias/Adam"
input: "conv1d_5/bias/Adam_1"
input: "conv1d_5/kernel"
input: "conv1d_5/kernel/Adam"
input: "conv1d_5/kernel/Adam_1"
input: "dense/bias"
input: "dense/bias/Adam"
input: "dense/bias/Adam_1"
input: "dense/kernel"
input: "dense/kernel/Adam"
input: "dense/kernel/Adam_1"
input: "fully_connected/biases"
input: "fully_connected/biases/Adam"
input: "fully_connected/biases/Adam_1"
input: "fully_connected/weights"
input: "fully_connected/weights/Adam"
input: "fully_connected/weights/Adam_1"
input: "fully_connected_1/biases"
input: "fully_connected_1/biases/Adam"
input: "fully_connected_1/biases/Adam_1"
input: "fully_connected_1/weights"
input: "fully_connected_1/weights/Adam"
input: "fully_connected_1/weights/Adam_1"
input: "fully_connected_2/biases"
input: "fully_connected_2/biases/Adam"
input: "fully_connected_2/biases/Adam_1"
input: "fully_connected_2/weights"
input: "fully_connected_2/weights/Adam"
input: "fully_connected_2/weights/Adam_1"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
    }
  }
}

ops save/control_dependency name: "save/control_dependency"
op: "Identity"
input: "save/Const"
input: "^save/SaveV2"
attr {
  key: "T"
  value {
    type: DT_STRING
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@save/Const"
    }
  }
}

ops save/RestoreV2/tensor_names name: "save/RestoreV2/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "Variable"
    }
  }
}

ops save/RestoreV2/shape_and_slices name: "save/RestoreV2/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2 name: "save/RestoreV2"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2/tensor_names"
input: "save/RestoreV2/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign name: "save/Assign"
op: "Assign"
input: "Variable"
input: "save/RestoreV2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_1/tensor_names name: "save/RestoreV2_1/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "Variable_1"
    }
  }
}

ops save/RestoreV2_1/shape_and_slices name: "save/RestoreV2_1/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_1 name: "save/RestoreV2_1"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_1/tensor_names"
input: "save/RestoreV2_1/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_1 name: "save/Assign_1"
op: "Assign"
input: "Variable_1"
input: "save/RestoreV2_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_1"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_2/tensor_names name: "save/RestoreV2_2/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "Variable_1/Adam"
    }
  }
}

ops save/RestoreV2_2/shape_and_slices name: "save/RestoreV2_2/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_2 name: "save/RestoreV2_2"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_2/tensor_names"
input: "save/RestoreV2_2/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_2 name: "save/Assign_2"
op: "Assign"
input: "Variable_1/Adam"
input: "save/RestoreV2_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_1"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_3/tensor_names name: "save/RestoreV2_3/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "Variable_1/Adam_1"
    }
  }
}

ops save/RestoreV2_3/shape_and_slices name: "save/RestoreV2_3/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_3 name: "save/RestoreV2_3"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_3/tensor_names"
input: "save/RestoreV2_3/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_3 name: "save/Assign_3"
op: "Assign"
input: "Variable_1/Adam_1"
input: "save/RestoreV2_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_1"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_4/tensor_names name: "save/RestoreV2_4/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "Variable_2"
    }
  }
}

ops save/RestoreV2_4/shape_and_slices name: "save/RestoreV2_4/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_4 name: "save/RestoreV2_4"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_4/tensor_names"
input: "save/RestoreV2_4/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_4 name: "save/Assign_4"
op: "Assign"
input: "Variable_2"
input: "save/RestoreV2_4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_2"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_5/tensor_names name: "save/RestoreV2_5/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "Variable_2/Adam"
    }
  }
}

ops save/RestoreV2_5/shape_and_slices name: "save/RestoreV2_5/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_5 name: "save/RestoreV2_5"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_5/tensor_names"
input: "save/RestoreV2_5/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_5 name: "save/Assign_5"
op: "Assign"
input: "Variable_2/Adam"
input: "save/RestoreV2_5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_2"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_6/tensor_names name: "save/RestoreV2_6/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "Variable_2/Adam_1"
    }
  }
}

ops save/RestoreV2_6/shape_and_slices name: "save/RestoreV2_6/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_6 name: "save/RestoreV2_6"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_6/tensor_names"
input: "save/RestoreV2_6/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_6 name: "save/Assign_6"
op: "Assign"
input: "Variable_2/Adam_1"
input: "save/RestoreV2_6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_2"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_7/tensor_names name: "save/RestoreV2_7/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "Variable_3"
    }
  }
}

ops save/RestoreV2_7/shape_and_slices name: "save/RestoreV2_7/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_7 name: "save/RestoreV2_7"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_7/tensor_names"
input: "save/RestoreV2_7/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_7 name: "save/Assign_7"
op: "Assign"
input: "Variable_3"
input: "save/RestoreV2_7"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_3"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_8/tensor_names name: "save/RestoreV2_8/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "Variable_3/Adam"
    }
  }
}

ops save/RestoreV2_8/shape_and_slices name: "save/RestoreV2_8/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_8 name: "save/RestoreV2_8"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_8/tensor_names"
input: "save/RestoreV2_8/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_8 name: "save/Assign_8"
op: "Assign"
input: "Variable_3/Adam"
input: "save/RestoreV2_8"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_3"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_9/tensor_names name: "save/RestoreV2_9/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "Variable_3/Adam_1"
    }
  }
}

ops save/RestoreV2_9/shape_and_slices name: "save/RestoreV2_9/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_9 name: "save/RestoreV2_9"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_9/tensor_names"
input: "save/RestoreV2_9/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_9 name: "save/Assign_9"
op: "Assign"
input: "Variable_3/Adam_1"
input: "save/RestoreV2_9"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_3"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_10/tensor_names name: "save/RestoreV2_10/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "Variable_4"
    }
  }
}

ops save/RestoreV2_10/shape_and_slices name: "save/RestoreV2_10/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_10 name: "save/RestoreV2_10"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_10/tensor_names"
input: "save/RestoreV2_10/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_10 name: "save/Assign_10"
op: "Assign"
input: "Variable_4"
input: "save/RestoreV2_10"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_4"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_11/tensor_names name: "save/RestoreV2_11/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "Variable_4/Adam"
    }
  }
}

ops save/RestoreV2_11/shape_and_slices name: "save/RestoreV2_11/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_11 name: "save/RestoreV2_11"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_11/tensor_names"
input: "save/RestoreV2_11/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_11 name: "save/Assign_11"
op: "Assign"
input: "Variable_4/Adam"
input: "save/RestoreV2_11"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_4"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_12/tensor_names name: "save/RestoreV2_12/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "Variable_4/Adam_1"
    }
  }
}

ops save/RestoreV2_12/shape_and_slices name: "save/RestoreV2_12/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_12 name: "save/RestoreV2_12"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_12/tensor_names"
input: "save/RestoreV2_12/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_12 name: "save/Assign_12"
op: "Assign"
input: "Variable_4/Adam_1"
input: "save/RestoreV2_12"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_4"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_13/tensor_names name: "save/RestoreV2_13/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "Variable_5"
    }
  }
}

ops save/RestoreV2_13/shape_and_slices name: "save/RestoreV2_13/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_13 name: "save/RestoreV2_13"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_13/tensor_names"
input: "save/RestoreV2_13/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_13 name: "save/Assign_13"
op: "Assign"
input: "Variable_5"
input: "save/RestoreV2_13"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_5"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_14/tensor_names name: "save/RestoreV2_14/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "Variable_5/Adam"
    }
  }
}

ops save/RestoreV2_14/shape_and_slices name: "save/RestoreV2_14/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_14 name: "save/RestoreV2_14"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_14/tensor_names"
input: "save/RestoreV2_14/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_14 name: "save/Assign_14"
op: "Assign"
input: "Variable_5/Adam"
input: "save/RestoreV2_14"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_5"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_15/tensor_names name: "save/RestoreV2_15/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "Variable_5/Adam_1"
    }
  }
}

ops save/RestoreV2_15/shape_and_slices name: "save/RestoreV2_15/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_15 name: "save/RestoreV2_15"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_15/tensor_names"
input: "save/RestoreV2_15/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_15 name: "save/Assign_15"
op: "Assign"
input: "Variable_5/Adam_1"
input: "save/RestoreV2_15"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_5"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_16/tensor_names name: "save/RestoreV2_16/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "Variable_6"
    }
  }
}

ops save/RestoreV2_16/shape_and_slices name: "save/RestoreV2_16/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_16 name: "save/RestoreV2_16"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_16/tensor_names"
input: "save/RestoreV2_16/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_16 name: "save/Assign_16"
op: "Assign"
input: "Variable_6"
input: "save/RestoreV2_16"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_6"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_17/tensor_names name: "save/RestoreV2_17/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "Variable_6/Adam"
    }
  }
}

ops save/RestoreV2_17/shape_and_slices name: "save/RestoreV2_17/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_17 name: "save/RestoreV2_17"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_17/tensor_names"
input: "save/RestoreV2_17/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_17 name: "save/Assign_17"
op: "Assign"
input: "Variable_6/Adam"
input: "save/RestoreV2_17"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_6"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_18/tensor_names name: "save/RestoreV2_18/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "Variable_6/Adam_1"
    }
  }
}

ops save/RestoreV2_18/shape_and_slices name: "save/RestoreV2_18/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_18 name: "save/RestoreV2_18"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_18/tensor_names"
input: "save/RestoreV2_18/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_18 name: "save/Assign_18"
op: "Assign"
input: "Variable_6/Adam_1"
input: "save/RestoreV2_18"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_6"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_19/tensor_names name: "save/RestoreV2_19/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "beta1_power"
    }
  }
}

ops save/RestoreV2_19/shape_and_slices name: "save/RestoreV2_19/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_19 name: "save/RestoreV2_19"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_19/tensor_names"
input: "save/RestoreV2_19/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_19 name: "save/Assign_19"
op: "Assign"
input: "beta1_power"
input: "save/RestoreV2_19"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_1"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_20/tensor_names name: "save/RestoreV2_20/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "beta2_power"
    }
  }
}

ops save/RestoreV2_20/shape_and_slices name: "save/RestoreV2_20/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_20 name: "save/RestoreV2_20"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_20/tensor_names"
input: "save/RestoreV2_20/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_20 name: "save/Assign_20"
op: "Assign"
input: "beta2_power"
input: "save/RestoreV2_20"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Variable_1"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_21/tensor_names name: "save/RestoreV2_21/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "conv1d/bias"
    }
  }
}

ops save/RestoreV2_21/shape_and_slices name: "save/RestoreV2_21/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_21 name: "save/RestoreV2_21"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_21/tensor_names"
input: "save/RestoreV2_21/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_21 name: "save/Assign_21"
op: "Assign"
input: "conv1d/bias"
input: "save/RestoreV2_21"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_22/tensor_names name: "save/RestoreV2_22/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "conv1d/bias/Adam"
    }
  }
}

ops save/RestoreV2_22/shape_and_slices name: "save/RestoreV2_22/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_22 name: "save/RestoreV2_22"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_22/tensor_names"
input: "save/RestoreV2_22/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_22 name: "save/Assign_22"
op: "Assign"
input: "conv1d/bias/Adam"
input: "save/RestoreV2_22"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_23/tensor_names name: "save/RestoreV2_23/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "conv1d/bias/Adam_1"
    }
  }
}

ops save/RestoreV2_23/shape_and_slices name: "save/RestoreV2_23/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_23 name: "save/RestoreV2_23"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_23/tensor_names"
input: "save/RestoreV2_23/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_23 name: "save/Assign_23"
op: "Assign"
input: "conv1d/bias/Adam_1"
input: "save/RestoreV2_23"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_24/tensor_names name: "save/RestoreV2_24/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "conv1d/kernel"
    }
  }
}

ops save/RestoreV2_24/shape_and_slices name: "save/RestoreV2_24/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_24 name: "save/RestoreV2_24"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_24/tensor_names"
input: "save/RestoreV2_24/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_24 name: "save/Assign_24"
op: "Assign"
input: "conv1d/kernel"
input: "save/RestoreV2_24"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_25/tensor_names name: "save/RestoreV2_25/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "conv1d/kernel/Adam"
    }
  }
}

ops save/RestoreV2_25/shape_and_slices name: "save/RestoreV2_25/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_25 name: "save/RestoreV2_25"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_25/tensor_names"
input: "save/RestoreV2_25/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_25 name: "save/Assign_25"
op: "Assign"
input: "conv1d/kernel/Adam"
input: "save/RestoreV2_25"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_26/tensor_names name: "save/RestoreV2_26/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "conv1d/kernel/Adam_1"
    }
  }
}

ops save/RestoreV2_26/shape_and_slices name: "save/RestoreV2_26/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_26 name: "save/RestoreV2_26"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_26/tensor_names"
input: "save/RestoreV2_26/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_26 name: "save/Assign_26"
op: "Assign"
input: "conv1d/kernel/Adam_1"
input: "save/RestoreV2_26"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_27/tensor_names name: "save/RestoreV2_27/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "conv1d_1/bias"
    }
  }
}

ops save/RestoreV2_27/shape_and_slices name: "save/RestoreV2_27/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_27 name: "save/RestoreV2_27"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_27/tensor_names"
input: "save/RestoreV2_27/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_27 name: "save/Assign_27"
op: "Assign"
input: "conv1d_1/bias"
input: "save/RestoreV2_27"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_1/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_28/tensor_names name: "save/RestoreV2_28/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "conv1d_1/bias/Adam"
    }
  }
}

ops save/RestoreV2_28/shape_and_slices name: "save/RestoreV2_28/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_28 name: "save/RestoreV2_28"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_28/tensor_names"
input: "save/RestoreV2_28/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_28 name: "save/Assign_28"
op: "Assign"
input: "conv1d_1/bias/Adam"
input: "save/RestoreV2_28"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_1/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_29/tensor_names name: "save/RestoreV2_29/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "conv1d_1/bias/Adam_1"
    }
  }
}

ops save/RestoreV2_29/shape_and_slices name: "save/RestoreV2_29/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_29 name: "save/RestoreV2_29"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_29/tensor_names"
input: "save/RestoreV2_29/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_29 name: "save/Assign_29"
op: "Assign"
input: "conv1d_1/bias/Adam_1"
input: "save/RestoreV2_29"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_1/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_30/tensor_names name: "save/RestoreV2_30/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "conv1d_1/kernel"
    }
  }
}

ops save/RestoreV2_30/shape_and_slices name: "save/RestoreV2_30/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_30 name: "save/RestoreV2_30"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_30/tensor_names"
input: "save/RestoreV2_30/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_30 name: "save/Assign_30"
op: "Assign"
input: "conv1d_1/kernel"
input: "save/RestoreV2_30"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_1/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_31/tensor_names name: "save/RestoreV2_31/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "conv1d_1/kernel/Adam"
    }
  }
}

ops save/RestoreV2_31/shape_and_slices name: "save/RestoreV2_31/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_31 name: "save/RestoreV2_31"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_31/tensor_names"
input: "save/RestoreV2_31/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_31 name: "save/Assign_31"
op: "Assign"
input: "conv1d_1/kernel/Adam"
input: "save/RestoreV2_31"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_1/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_32/tensor_names name: "save/RestoreV2_32/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "conv1d_1/kernel/Adam_1"
    }
  }
}

ops save/RestoreV2_32/shape_and_slices name: "save/RestoreV2_32/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_32 name: "save/RestoreV2_32"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_32/tensor_names"
input: "save/RestoreV2_32/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_32 name: "save/Assign_32"
op: "Assign"
input: "conv1d_1/kernel/Adam_1"
input: "save/RestoreV2_32"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_1/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_33/tensor_names name: "save/RestoreV2_33/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "conv1d_2/bias"
    }
  }
}

ops save/RestoreV2_33/shape_and_slices name: "save/RestoreV2_33/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_33 name: "save/RestoreV2_33"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_33/tensor_names"
input: "save/RestoreV2_33/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_33 name: "save/Assign_33"
op: "Assign"
input: "conv1d_2/bias"
input: "save/RestoreV2_33"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_2/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_34/tensor_names name: "save/RestoreV2_34/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "conv1d_2/bias/Adam"
    }
  }
}

ops save/RestoreV2_34/shape_and_slices name: "save/RestoreV2_34/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_34 name: "save/RestoreV2_34"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_34/tensor_names"
input: "save/RestoreV2_34/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_34 name: "save/Assign_34"
op: "Assign"
input: "conv1d_2/bias/Adam"
input: "save/RestoreV2_34"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_2/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_35/tensor_names name: "save/RestoreV2_35/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "conv1d_2/bias/Adam_1"
    }
  }
}

ops save/RestoreV2_35/shape_and_slices name: "save/RestoreV2_35/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_35 name: "save/RestoreV2_35"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_35/tensor_names"
input: "save/RestoreV2_35/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_35 name: "save/Assign_35"
op: "Assign"
input: "conv1d_2/bias/Adam_1"
input: "save/RestoreV2_35"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_2/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_36/tensor_names name: "save/RestoreV2_36/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "conv1d_2/kernel"
    }
  }
}

ops save/RestoreV2_36/shape_and_slices name: "save/RestoreV2_36/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_36 name: "save/RestoreV2_36"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_36/tensor_names"
input: "save/RestoreV2_36/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_36 name: "save/Assign_36"
op: "Assign"
input: "conv1d_2/kernel"
input: "save/RestoreV2_36"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_2/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_37/tensor_names name: "save/RestoreV2_37/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "conv1d_2/kernel/Adam"
    }
  }
}

ops save/RestoreV2_37/shape_and_slices name: "save/RestoreV2_37/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_37 name: "save/RestoreV2_37"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_37/tensor_names"
input: "save/RestoreV2_37/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_37 name: "save/Assign_37"
op: "Assign"
input: "conv1d_2/kernel/Adam"
input: "save/RestoreV2_37"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_2/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_38/tensor_names name: "save/RestoreV2_38/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "conv1d_2/kernel/Adam_1"
    }
  }
}

ops save/RestoreV2_38/shape_and_slices name: "save/RestoreV2_38/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_38 name: "save/RestoreV2_38"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_38/tensor_names"
input: "save/RestoreV2_38/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_38 name: "save/Assign_38"
op: "Assign"
input: "conv1d_2/kernel/Adam_1"
input: "save/RestoreV2_38"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_2/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_39/tensor_names name: "save/RestoreV2_39/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "conv1d_3/bias"
    }
  }
}

ops save/RestoreV2_39/shape_and_slices name: "save/RestoreV2_39/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_39 name: "save/RestoreV2_39"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_39/tensor_names"
input: "save/RestoreV2_39/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_39 name: "save/Assign_39"
op: "Assign"
input: "conv1d_3/bias"
input: "save/RestoreV2_39"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_3/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_40/tensor_names name: "save/RestoreV2_40/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "conv1d_3/bias/Adam"
    }
  }
}

ops save/RestoreV2_40/shape_and_slices name: "save/RestoreV2_40/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_40 name: "save/RestoreV2_40"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_40/tensor_names"
input: "save/RestoreV2_40/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_40 name: "save/Assign_40"
op: "Assign"
input: "conv1d_3/bias/Adam"
input: "save/RestoreV2_40"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_3/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_41/tensor_names name: "save/RestoreV2_41/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "conv1d_3/bias/Adam_1"
    }
  }
}

ops save/RestoreV2_41/shape_and_slices name: "save/RestoreV2_41/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_41 name: "save/RestoreV2_41"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_41/tensor_names"
input: "save/RestoreV2_41/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_41 name: "save/Assign_41"
op: "Assign"
input: "conv1d_3/bias/Adam_1"
input: "save/RestoreV2_41"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_3/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_42/tensor_names name: "save/RestoreV2_42/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "conv1d_3/kernel"
    }
  }
}

ops save/RestoreV2_42/shape_and_slices name: "save/RestoreV2_42/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_42 name: "save/RestoreV2_42"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_42/tensor_names"
input: "save/RestoreV2_42/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_42 name: "save/Assign_42"
op: "Assign"
input: "conv1d_3/kernel"
input: "save/RestoreV2_42"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_3/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_43/tensor_names name: "save/RestoreV2_43/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "conv1d_3/kernel/Adam"
    }
  }
}

ops save/RestoreV2_43/shape_and_slices name: "save/RestoreV2_43/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_43 name: "save/RestoreV2_43"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_43/tensor_names"
input: "save/RestoreV2_43/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_43 name: "save/Assign_43"
op: "Assign"
input: "conv1d_3/kernel/Adam"
input: "save/RestoreV2_43"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_3/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_44/tensor_names name: "save/RestoreV2_44/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "conv1d_3/kernel/Adam_1"
    }
  }
}

ops save/RestoreV2_44/shape_and_slices name: "save/RestoreV2_44/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_44 name: "save/RestoreV2_44"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_44/tensor_names"
input: "save/RestoreV2_44/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_44 name: "save/Assign_44"
op: "Assign"
input: "conv1d_3/kernel/Adam_1"
input: "save/RestoreV2_44"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_3/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_45/tensor_names name: "save/RestoreV2_45/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "conv1d_4/bias"
    }
  }
}

ops save/RestoreV2_45/shape_and_slices name: "save/RestoreV2_45/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_45 name: "save/RestoreV2_45"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_45/tensor_names"
input: "save/RestoreV2_45/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_45 name: "save/Assign_45"
op: "Assign"
input: "conv1d_4/bias"
input: "save/RestoreV2_45"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_4/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_46/tensor_names name: "save/RestoreV2_46/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "conv1d_4/bias/Adam"
    }
  }
}

ops save/RestoreV2_46/shape_and_slices name: "save/RestoreV2_46/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_46 name: "save/RestoreV2_46"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_46/tensor_names"
input: "save/RestoreV2_46/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_46 name: "save/Assign_46"
op: "Assign"
input: "conv1d_4/bias/Adam"
input: "save/RestoreV2_46"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_4/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_47/tensor_names name: "save/RestoreV2_47/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "conv1d_4/bias/Adam_1"
    }
  }
}

ops save/RestoreV2_47/shape_and_slices name: "save/RestoreV2_47/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_47 name: "save/RestoreV2_47"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_47/tensor_names"
input: "save/RestoreV2_47/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_47 name: "save/Assign_47"
op: "Assign"
input: "conv1d_4/bias/Adam_1"
input: "save/RestoreV2_47"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_4/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_48/tensor_names name: "save/RestoreV2_48/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "conv1d_4/kernel"
    }
  }
}

ops save/RestoreV2_48/shape_and_slices name: "save/RestoreV2_48/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_48 name: "save/RestoreV2_48"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_48/tensor_names"
input: "save/RestoreV2_48/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_48 name: "save/Assign_48"
op: "Assign"
input: "conv1d_4/kernel"
input: "save/RestoreV2_48"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_4/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_49/tensor_names name: "save/RestoreV2_49/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "conv1d_4/kernel/Adam"
    }
  }
}

ops save/RestoreV2_49/shape_and_slices name: "save/RestoreV2_49/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_49 name: "save/RestoreV2_49"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_49/tensor_names"
input: "save/RestoreV2_49/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_49 name: "save/Assign_49"
op: "Assign"
input: "conv1d_4/kernel/Adam"
input: "save/RestoreV2_49"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_4/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_50/tensor_names name: "save/RestoreV2_50/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "conv1d_4/kernel/Adam_1"
    }
  }
}

ops save/RestoreV2_50/shape_and_slices name: "save/RestoreV2_50/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_50 name: "save/RestoreV2_50"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_50/tensor_names"
input: "save/RestoreV2_50/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_50 name: "save/Assign_50"
op: "Assign"
input: "conv1d_4/kernel/Adam_1"
input: "save/RestoreV2_50"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_4/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_51/tensor_names name: "save/RestoreV2_51/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "conv1d_5/bias"
    }
  }
}

ops save/RestoreV2_51/shape_and_slices name: "save/RestoreV2_51/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_51 name: "save/RestoreV2_51"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_51/tensor_names"
input: "save/RestoreV2_51/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_51 name: "save/Assign_51"
op: "Assign"
input: "conv1d_5/bias"
input: "save/RestoreV2_51"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_5/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_52/tensor_names name: "save/RestoreV2_52/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "conv1d_5/bias/Adam"
    }
  }
}

ops save/RestoreV2_52/shape_and_slices name: "save/RestoreV2_52/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_52 name: "save/RestoreV2_52"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_52/tensor_names"
input: "save/RestoreV2_52/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_52 name: "save/Assign_52"
op: "Assign"
input: "conv1d_5/bias/Adam"
input: "save/RestoreV2_52"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_5/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_53/tensor_names name: "save/RestoreV2_53/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "conv1d_5/bias/Adam_1"
    }
  }
}

ops save/RestoreV2_53/shape_and_slices name: "save/RestoreV2_53/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_53 name: "save/RestoreV2_53"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_53/tensor_names"
input: "save/RestoreV2_53/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_53 name: "save/Assign_53"
op: "Assign"
input: "conv1d_5/bias/Adam_1"
input: "save/RestoreV2_53"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_5/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_54/tensor_names name: "save/RestoreV2_54/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "conv1d_5/kernel"
    }
  }
}

ops save/RestoreV2_54/shape_and_slices name: "save/RestoreV2_54/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_54 name: "save/RestoreV2_54"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_54/tensor_names"
input: "save/RestoreV2_54/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_54 name: "save/Assign_54"
op: "Assign"
input: "conv1d_5/kernel"
input: "save/RestoreV2_54"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_5/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_55/tensor_names name: "save/RestoreV2_55/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "conv1d_5/kernel/Adam"
    }
  }
}

ops save/RestoreV2_55/shape_and_slices name: "save/RestoreV2_55/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_55 name: "save/RestoreV2_55"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_55/tensor_names"
input: "save/RestoreV2_55/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_55 name: "save/Assign_55"
op: "Assign"
input: "conv1d_5/kernel/Adam"
input: "save/RestoreV2_55"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_5/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_56/tensor_names name: "save/RestoreV2_56/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "conv1d_5/kernel/Adam_1"
    }
  }
}

ops save/RestoreV2_56/shape_and_slices name: "save/RestoreV2_56/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_56 name: "save/RestoreV2_56"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_56/tensor_names"
input: "save/RestoreV2_56/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_56 name: "save/Assign_56"
op: "Assign"
input: "conv1d_5/kernel/Adam_1"
input: "save/RestoreV2_56"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@conv1d_5/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_57/tensor_names name: "save/RestoreV2_57/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "dense/bias"
    }
  }
}

ops save/RestoreV2_57/shape_and_slices name: "save/RestoreV2_57/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_57 name: "save/RestoreV2_57"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_57/tensor_names"
input: "save/RestoreV2_57/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_57 name: "save/Assign_57"
op: "Assign"
input: "dense/bias"
input: "save/RestoreV2_57"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_58/tensor_names name: "save/RestoreV2_58/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "dense/bias/Adam"
    }
  }
}

ops save/RestoreV2_58/shape_and_slices name: "save/RestoreV2_58/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_58 name: "save/RestoreV2_58"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_58/tensor_names"
input: "save/RestoreV2_58/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_58 name: "save/Assign_58"
op: "Assign"
input: "dense/bias/Adam"
input: "save/RestoreV2_58"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_59/tensor_names name: "save/RestoreV2_59/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "dense/bias/Adam_1"
    }
  }
}

ops save/RestoreV2_59/shape_and_slices name: "save/RestoreV2_59/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_59 name: "save/RestoreV2_59"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_59/tensor_names"
input: "save/RestoreV2_59/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_59 name: "save/Assign_59"
op: "Assign"
input: "dense/bias/Adam_1"
input: "save/RestoreV2_59"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_60/tensor_names name: "save/RestoreV2_60/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "dense/kernel"
    }
  }
}

ops save/RestoreV2_60/shape_and_slices name: "save/RestoreV2_60/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_60 name: "save/RestoreV2_60"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_60/tensor_names"
input: "save/RestoreV2_60/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_60 name: "save/Assign_60"
op: "Assign"
input: "dense/kernel"
input: "save/RestoreV2_60"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_61/tensor_names name: "save/RestoreV2_61/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "dense/kernel/Adam"
    }
  }
}

ops save/RestoreV2_61/shape_and_slices name: "save/RestoreV2_61/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_61 name: "save/RestoreV2_61"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_61/tensor_names"
input: "save/RestoreV2_61/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_61 name: "save/Assign_61"
op: "Assign"
input: "dense/kernel/Adam"
input: "save/RestoreV2_61"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_62/tensor_names name: "save/RestoreV2_62/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "dense/kernel/Adam_1"
    }
  }
}

ops save/RestoreV2_62/shape_and_slices name: "save/RestoreV2_62/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_62 name: "save/RestoreV2_62"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_62/tensor_names"
input: "save/RestoreV2_62/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_62 name: "save/Assign_62"
op: "Assign"
input: "dense/kernel/Adam_1"
input: "save/RestoreV2_62"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_63/tensor_names name: "save/RestoreV2_63/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "fully_connected/biases"
    }
  }
}

ops save/RestoreV2_63/shape_and_slices name: "save/RestoreV2_63/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_63 name: "save/RestoreV2_63"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_63/tensor_names"
input: "save/RestoreV2_63/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_63 name: "save/Assign_63"
op: "Assign"
input: "fully_connected/biases"
input: "save/RestoreV2_63"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_64/tensor_names name: "save/RestoreV2_64/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "fully_connected/biases/Adam"
    }
  }
}

ops save/RestoreV2_64/shape_and_slices name: "save/RestoreV2_64/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_64 name: "save/RestoreV2_64"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_64/tensor_names"
input: "save/RestoreV2_64/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_64 name: "save/Assign_64"
op: "Assign"
input: "fully_connected/biases/Adam"
input: "save/RestoreV2_64"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_65/tensor_names name: "save/RestoreV2_65/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "fully_connected/biases/Adam_1"
    }
  }
}

ops save/RestoreV2_65/shape_and_slices name: "save/RestoreV2_65/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_65 name: "save/RestoreV2_65"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_65/tensor_names"
input: "save/RestoreV2_65/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_65 name: "save/Assign_65"
op: "Assign"
input: "fully_connected/biases/Adam_1"
input: "save/RestoreV2_65"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_66/tensor_names name: "save/RestoreV2_66/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "fully_connected/weights"
    }
  }
}

ops save/RestoreV2_66/shape_and_slices name: "save/RestoreV2_66/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_66 name: "save/RestoreV2_66"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_66/tensor_names"
input: "save/RestoreV2_66/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_66 name: "save/Assign_66"
op: "Assign"
input: "fully_connected/weights"
input: "save/RestoreV2_66"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_67/tensor_names name: "save/RestoreV2_67/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "fully_connected/weights/Adam"
    }
  }
}

ops save/RestoreV2_67/shape_and_slices name: "save/RestoreV2_67/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_67 name: "save/RestoreV2_67"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_67/tensor_names"
input: "save/RestoreV2_67/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_67 name: "save/Assign_67"
op: "Assign"
input: "fully_connected/weights/Adam"
input: "save/RestoreV2_67"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_68/tensor_names name: "save/RestoreV2_68/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "fully_connected/weights/Adam_1"
    }
  }
}

ops save/RestoreV2_68/shape_and_slices name: "save/RestoreV2_68/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_68 name: "save/RestoreV2_68"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_68/tensor_names"
input: "save/RestoreV2_68/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_68 name: "save/Assign_68"
op: "Assign"
input: "fully_connected/weights/Adam_1"
input: "save/RestoreV2_68"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_69/tensor_names name: "save/RestoreV2_69/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "fully_connected_1/biases"
    }
  }
}

ops save/RestoreV2_69/shape_and_slices name: "save/RestoreV2_69/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_69 name: "save/RestoreV2_69"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_69/tensor_names"
input: "save/RestoreV2_69/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_69 name: "save/Assign_69"
op: "Assign"
input: "fully_connected_1/biases"
input: "save/RestoreV2_69"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected_1/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_70/tensor_names name: "save/RestoreV2_70/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "fully_connected_1/biases/Adam"
    }
  }
}

ops save/RestoreV2_70/shape_and_slices name: "save/RestoreV2_70/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_70 name: "save/RestoreV2_70"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_70/tensor_names"
input: "save/RestoreV2_70/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_70 name: "save/Assign_70"
op: "Assign"
input: "fully_connected_1/biases/Adam"
input: "save/RestoreV2_70"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected_1/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_71/tensor_names name: "save/RestoreV2_71/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "fully_connected_1/biases/Adam_1"
    }
  }
}

ops save/RestoreV2_71/shape_and_slices name: "save/RestoreV2_71/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_71 name: "save/RestoreV2_71"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_71/tensor_names"
input: "save/RestoreV2_71/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_71 name: "save/Assign_71"
op: "Assign"
input: "fully_connected_1/biases/Adam_1"
input: "save/RestoreV2_71"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected_1/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_72/tensor_names name: "save/RestoreV2_72/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "fully_connected_1/weights"
    }
  }
}

ops save/RestoreV2_72/shape_and_slices name: "save/RestoreV2_72/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_72 name: "save/RestoreV2_72"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_72/tensor_names"
input: "save/RestoreV2_72/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_72 name: "save/Assign_72"
op: "Assign"
input: "fully_connected_1/weights"
input: "save/RestoreV2_72"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected_1/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_73/tensor_names name: "save/RestoreV2_73/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "fully_connected_1/weights/Adam"
    }
  }
}

ops save/RestoreV2_73/shape_and_slices name: "save/RestoreV2_73/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_73 name: "save/RestoreV2_73"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_73/tensor_names"
input: "save/RestoreV2_73/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_73 name: "save/Assign_73"
op: "Assign"
input: "fully_connected_1/weights/Adam"
input: "save/RestoreV2_73"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected_1/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_74/tensor_names name: "save/RestoreV2_74/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "fully_connected_1/weights/Adam_1"
    }
  }
}

ops save/RestoreV2_74/shape_and_slices name: "save/RestoreV2_74/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_74 name: "save/RestoreV2_74"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_74/tensor_names"
input: "save/RestoreV2_74/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_74 name: "save/Assign_74"
op: "Assign"
input: "fully_connected_1/weights/Adam_1"
input: "save/RestoreV2_74"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected_1/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_75/tensor_names name: "save/RestoreV2_75/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "fully_connected_2/biases"
    }
  }
}

ops save/RestoreV2_75/shape_and_slices name: "save/RestoreV2_75/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_75 name: "save/RestoreV2_75"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_75/tensor_names"
input: "save/RestoreV2_75/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_75 name: "save/Assign_75"
op: "Assign"
input: "fully_connected_2/biases"
input: "save/RestoreV2_75"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected_2/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_76/tensor_names name: "save/RestoreV2_76/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "fully_connected_2/biases/Adam"
    }
  }
}

ops save/RestoreV2_76/shape_and_slices name: "save/RestoreV2_76/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_76 name: "save/RestoreV2_76"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_76/tensor_names"
input: "save/RestoreV2_76/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_76 name: "save/Assign_76"
op: "Assign"
input: "fully_connected_2/biases/Adam"
input: "save/RestoreV2_76"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected_2/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_77/tensor_names name: "save/RestoreV2_77/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "fully_connected_2/biases/Adam_1"
    }
  }
}

ops save/RestoreV2_77/shape_and_slices name: "save/RestoreV2_77/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_77 name: "save/RestoreV2_77"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_77/tensor_names"
input: "save/RestoreV2_77/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_77 name: "save/Assign_77"
op: "Assign"
input: "fully_connected_2/biases/Adam_1"
input: "save/RestoreV2_77"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected_2/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_78/tensor_names name: "save/RestoreV2_78/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "fully_connected_2/weights"
    }
  }
}

ops save/RestoreV2_78/shape_and_slices name: "save/RestoreV2_78/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_78 name: "save/RestoreV2_78"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_78/tensor_names"
input: "save/RestoreV2_78/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_78 name: "save/Assign_78"
op: "Assign"
input: "fully_connected_2/weights"
input: "save/RestoreV2_78"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected_2/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_79/tensor_names name: "save/RestoreV2_79/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "fully_connected_2/weights/Adam"
    }
  }
}

ops save/RestoreV2_79/shape_and_slices name: "save/RestoreV2_79/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_79 name: "save/RestoreV2_79"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_79/tensor_names"
input: "save/RestoreV2_79/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_79 name: "save/Assign_79"
op: "Assign"
input: "fully_connected_2/weights/Adam"
input: "save/RestoreV2_79"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected_2/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/RestoreV2_80/tensor_names name: "save/RestoreV2_80/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: "fully_connected_2/weights/Adam_1"
    }
  }
}

ops save/RestoreV2_80/shape_and_slices name: "save/RestoreV2_80/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 1
        }
      }
      string_val: ""
    }
  }
}

ops save/RestoreV2_80 name: "save/RestoreV2_80"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2_80/tensor_names"
input: "save/RestoreV2_80/shape_and_slices"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
    }
  }
}

ops save/Assign_80 name: "save/Assign_80"
op: "Assign"
input: "fully_connected_2/weights/Adam_1"
input: "save/RestoreV2_80"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@fully_connected_2/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

ops save/restore_all name: "save/restore_all"
op: "NoOp"
input: "^save/Assign"
input: "^save/Assign_1"
input: "^save/Assign_2"
input: "^save/Assign_3"
input: "^save/Assign_4"
input: "^save/Assign_5"
input: "^save/Assign_6"
input: "^save/Assign_7"
input: "^save/Assign_8"
input: "^save/Assign_9"
input: "^save/Assign_10"
input: "^save/Assign_11"
input: "^save/Assign_12"
input: "^save/Assign_13"
input: "^save/Assign_14"
input: "^save/Assign_15"
input: "^save/Assign_16"
input: "^save/Assign_17"
input: "^save/Assign_18"
input: "^save/Assign_19"
input: "^save/Assign_20"
input: "^save/Assign_21"
input: "^save/Assign_22"
input: "^save/Assign_23"
input: "^save/Assign_24"
input: "^save/Assign_25"
input: "^save/Assign_26"
input: "^save/Assign_27"
input: "^save/Assign_28"
input: "^save/Assign_29"
input: "^save/Assign_30"
input: "^save/Assign_31"
input: "^save/Assign_32"
input: "^save/Assign_33"
input: "^save/Assign_34"
input: "^save/Assign_35"
input: "^save/Assign_36"
input: "^save/Assign_37"
input: "^save/Assign_38"
input: "^save/Assign_39"
input: "^save/Assign_40"
input: "^save/Assign_41"
input: "^save/Assign_42"
input: "^save/Assign_43"
input: "^save/Assign_44"
input: "^save/Assign_45"
input: "^save/Assign_46"
input: "^save/Assign_47"
input: "^save/Assign_48"
input: "^save/Assign_49"
input: "^save/Assign_50"
input: "^save/Assign_51"
input: "^save/Assign_52"
input: "^save/Assign_53"
input: "^save/Assign_54"
input: "^save/Assign_55"
input: "^save/Assign_56"
input: "^save/Assign_57"
input: "^save/Assign_58"
input: "^save/Assign_59"
input: "^save/Assign_60"
input: "^save/Assign_61"
input: "^save/Assign_62"
input: "^save/Assign_63"
input: "^save/Assign_64"
input: "^save/Assign_65"
input: "^save/Assign_66"
input: "^save/Assign_67"
input: "^save/Assign_68"
input: "^save/Assign_69"
input: "^save/Assign_70"
input: "^save/Assign_71"
input: "^save/Assign_72"
input: "^save/Assign_73"
input: "^save/Assign_74"
input: "^save/Assign_75"
input: "^save/Assign_76"
input: "^save/Assign_77"
input: "^save/Assign_78"
input: "^save/Assign_79"
input: "^save/Assign_80"

ops init name: "init"
op: "NoOp"
input: "^Variable/Assign"
input: "^Variable_1/Assign"
input: "^conv1d/kernel/Assign"
input: "^conv1d/bias/Assign"
input: "^Variable_2/Assign"
input: "^conv1d_1/kernel/Assign"
input: "^conv1d_1/bias/Assign"
input: "^Variable_3/Assign"
input: "^conv1d_2/kernel/Assign"
input: "^conv1d_2/bias/Assign"
input: "^Variable_4/Assign"
input: "^conv1d_3/kernel/Assign"
input: "^conv1d_3/bias/Assign"
input: "^Variable_5/Assign"
input: "^conv1d_4/kernel/Assign"
input: "^conv1d_4/bias/Assign"
input: "^Variable_6/Assign"
input: "^conv1d_5/kernel/Assign"
input: "^conv1d_5/bias/Assign"
input: "^dense/kernel/Assign"
input: "^dense/bias/Assign"
input: "^fully_connected/weights/Assign"
input: "^fully_connected/biases/Assign"
input: "^fully_connected_1/weights/Assign"
input: "^fully_connected_1/biases/Assign"
input: "^fully_connected_2/weights/Assign"
input: "^fully_connected_2/biases/Assign"
input: "^beta1_power/Assign"
input: "^beta2_power/Assign"
input: "^Variable_1/Adam/Assign"
input: "^Variable_1/Adam_1/Assign"
input: "^conv1d/kernel/Adam/Assign"
input: "^conv1d/kernel/Adam_1/Assign"
input: "^conv1d/bias/Adam/Assign"
input: "^conv1d/bias/Adam_1/Assign"
input: "^Variable_2/Adam/Assign"
input: "^Variable_2/Adam_1/Assign"
input: "^conv1d_1/kernel/Adam/Assign"
input: "^conv1d_1/kernel/Adam_1/Assign"
input: "^conv1d_1/bias/Adam/Assign"
input: "^conv1d_1/bias/Adam_1/Assign"
input: "^Variable_3/Adam/Assign"
input: "^Variable_3/Adam_1/Assign"
input: "^conv1d_2/kernel/Adam/Assign"
input: "^conv1d_2/kernel/Adam_1/Assign"
input: "^conv1d_2/bias/Adam/Assign"
input: "^conv1d_2/bias/Adam_1/Assign"
input: "^Variable_4/Adam/Assign"
input: "^Variable_4/Adam_1/Assign"
input: "^conv1d_3/kernel/Adam/Assign"
input: "^conv1d_3/kernel/Adam_1/Assign"
input: "^conv1d_3/bias/Adam/Assign"
input: "^conv1d_3/bias/Adam_1/Assign"
input: "^Variable_5/Adam/Assign"
input: "^Variable_5/Adam_1/Assign"
input: "^conv1d_4/kernel/Adam/Assign"
input: "^conv1d_4/kernel/Adam_1/Assign"
input: "^conv1d_4/bias/Adam/Assign"
input: "^conv1d_4/bias/Adam_1/Assign"
input: "^Variable_6/Adam/Assign"
input: "^Variable_6/Adam_1/Assign"
input: "^conv1d_5/kernel/Adam/Assign"
input: "^conv1d_5/kernel/Adam_1/Assign"
input: "^conv1d_5/bias/Adam/Assign"
input: "^conv1d_5/bias/Adam_1/Assign"
input: "^dense/kernel/Adam/Assign"
input: "^dense/kernel/Adam_1/Assign"
input: "^dense/bias/Adam/Assign"
input: "^dense/bias/Adam_1/Assign"
input: "^fully_connected/weights/Adam/Assign"
input: "^fully_connected/weights/Adam_1/Assign"
input: "^fully_connected/biases/Adam/Assign"
input: "^fully_connected/biases/Adam_1/Assign"
input: "^fully_connected_1/weights/Adam/Assign"
input: "^fully_connected_1/weights/Adam_1/Assign"
input: "^fully_connected_1/biases/Adam/Assign"
input: "^fully_connected_1/biases/Adam_1/Assign"
input: "^fully_connected_2/weights/Adam/Assign"
input: "^fully_connected_2/weights/Adam_1/Assign"
input: "^fully_connected_2/biases/Adam/Assign"
input: "^fully_connected_2/biases/Adam_1/Assign"


    Test 3 Label  Label Loss = 250862.33375930786
    Test 3 Label  Domain Loss = 23298.870080947876
    Test 3 Label  Regularization Loss = 2031.9242477416992
    Test 3 Label  Total Loss = 276193.12808799744
    Test 3 Label  Composite Score 5236.25
    Test 3 Label  Label Accuracy [0.7020493956910142, 0.10329985652797705, 0.7211021505376344, 0.0]
    Test 3 Label  Label F1 [0.5481025641025641, 0.16570771001150747, 0.7678912213740458, 0]
    Test 3 Label  Domain Accuracy [0.0, 0.0, 0.0]

composite score:  9365.75
label accuracies:  [0.649500788229112, 0.09325681492109039, 0.6704749103942652, 0.9887732301487819]
f1 scores:  [0.5365747775124811, 0.1516919486581097, 0.7261038330907327, 0.9775849991917668]

